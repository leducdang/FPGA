module vga_controller( clock_50mhz,
								vga_r,
								vga_g,
								vga_b,
								vga_clk,
								vga_sync,
								vga_blank,
								vga_vs,
								vga_hs
							);
	
input clock_50mhz;
input [7:0] vga_r;
input [7:0] vga_g;
input [7:0] vga_b;
output 		vga_clk;
output		vga_sync;
output		vga_blank;
output		vga_vs;
output		vga_hs;
	
reg clock;	

parameter HD = 640;             // horizontal display area width in pixels
parameter HF = 48;              // horizontal front porch width in pixels
parameter HB = 16;              // horizontal back porch width in pixels
parameter HR = 96;              // horizontal retrace width in pixels
parameter HMAX = HD+HF+HB+HR-1; // max value of horizontal counter = 799


   // Total vertical length of screen = 525 pixels, partitioned into sections
	
parameter VD = 480;             // vertical display area length in pixels 
parameter VF = 10;              // vertical front porch length in pixels  
parameter VB = 33;              // vertical back porch length in pixels   
parameter VR = 2;               // vertical retrace length in pixels  
parameter VMAX = VD+VF+VB+VR-1; // max value of vertical counter = 524  

reg [9:0] h_count_reg, h_count_next;
reg [9:0] v_count_reg, v_count_next;
    
    // Output Buffers
reg v_sync_reg, h_sync_reg;
wire v_sync_next, h_sync_next;





	always@(posedge clock_50mhz or negedge reset)
		begin 
			if(!reset) clock <= 0;
			else
			clock <= ~clock;
		
		end							
							


    always @(posedge clock or posedge reset)      // pixel tick
		begin
        if(reset)
            h_count_next <= 0;
        else
            if(h_count_next == HMAX)                 // end of horizontal scan
					begin
						h_count_next <= 0;
						if((v_count_next == VMAX))           // end of vertical scan
							v_count_next <= 0;
						else
							v_count_next <= v_count_next + 1;
					end 
            else
                h_count_next <= h_count_next + 1;       
		end	 
							
	always@(posedge clock_50mhz)
		begin
			if(h_count_next < (HD +HF) ) h_count_reg <= 1;
			else if	(h_count_next < (HD +HF +HR) h_count_reg <= 0;
			else if 	(h_count_next < HMAX)	h_count_reg <= 0;
		end
		
							
	always@(posedge clock_50mhz)
		begin
			if(v_count_next < (VD +VF) ) v_count_reg <= 1;
			else if	(v_count_next < (VD +VF +VR) v_count_reg <= 0;
			else if 	(v_count_next < VMAX)	v_count_reg <= 0;
		end						
							
endmodule
