--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=20 LPM_WIDTH=5 data eq
--VERSION_BEGIN 22.1 cbx_cycloneii 2022:10:25:15:36:38:SC cbx_lpm_add_sub 2022:10:25:15:36:38:SC cbx_lpm_compare 2022:10:25:15:36:38:SC cbx_lpm_decode 2022:10:25:15:36:36:SC cbx_mgl 2022:10:25:15:36:55:SC cbx_nadder 2022:10:25:15:36:38:SC cbx_stratix 2022:10:25:15:36:38:SC cbx_stratixii 2022:10:25:15:36:38:SC  VERSION_END


-- Copyright (C) 2022  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_0aa
( 
	data[4..0]	:	input;
	eq[19..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[19..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3371w[2..0]	: WIRE;
	w_anode3385w[3..0]	: WIRE;
	w_anode3402w[3..0]	: WIRE;
	w_anode3412w[3..0]	: WIRE;
	w_anode3422w[3..0]	: WIRE;
	w_anode3432w[3..0]	: WIRE;
	w_anode3442w[3..0]	: WIRE;
	w_anode3452w[3..0]	: WIRE;
	w_anode3462w[3..0]	: WIRE;
	w_anode3474w[2..0]	: WIRE;
	w_anode3484w[3..0]	: WIRE;
	w_anode3495w[3..0]	: WIRE;
	w_anode3505w[3..0]	: WIRE;
	w_anode3515w[3..0]	: WIRE;
	w_anode3525w[3..0]	: WIRE;
	w_anode3535w[3..0]	: WIRE;
	w_anode3545w[3..0]	: WIRE;
	w_anode3555w[3..0]	: WIRE;
	w_anode3566w[2..0]	: WIRE;
	w_anode3576w[3..0]	: WIRE;
	w_anode3587w[3..0]	: WIRE;
	w_anode3597w[3..0]	: WIRE;
	w_anode3607w[3..0]	: WIRE;
	w_anode3617w[3..0]	: WIRE;
	w_anode3627w[3..0]	: WIRE;
	w_anode3637w[3..0]	: WIRE;
	w_anode3647w[3..0]	: WIRE;
	w_anode3658w[2..0]	: WIRE;
	w_anode3668w[3..0]	: WIRE;
	w_anode3679w[3..0]	: WIRE;
	w_anode3689w[3..0]	: WIRE;
	w_anode3699w[3..0]	: WIRE;
	w_anode3709w[3..0]	: WIRE;
	w_anode3719w[3..0]	: WIRE;
	w_anode3729w[3..0]	: WIRE;
	w_anode3739w[3..0]	: WIRE;
	w_data3369w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[19..0] = eq_wire[19..0];
	eq_wire[] = ( ( w_anode3739w[3..3], w_anode3729w[3..3], w_anode3719w[3..3], w_anode3709w[3..3], w_anode3699w[3..3], w_anode3689w[3..3], w_anode3679w[3..3], w_anode3668w[3..3]), ( w_anode3647w[3..3], w_anode3637w[3..3], w_anode3627w[3..3], w_anode3617w[3..3], w_anode3607w[3..3], w_anode3597w[3..3], w_anode3587w[3..3], w_anode3576w[3..3]), ( w_anode3555w[3..3], w_anode3545w[3..3], w_anode3535w[3..3], w_anode3525w[3..3], w_anode3515w[3..3], w_anode3505w[3..3], w_anode3495w[3..3], w_anode3484w[3..3]), ( w_anode3462w[3..3], w_anode3452w[3..3], w_anode3442w[3..3], w_anode3432w[3..3], w_anode3422w[3..3], w_anode3412w[3..3], w_anode3402w[3..3], w_anode3385w[3..3]));
	w_anode3371w[] = ( (w_anode3371w[1..1] & (! data_wire[4..4])), (w_anode3371w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3385w[] = ( (w_anode3385w[2..2] & (! w_data3369w[2..2])), (w_anode3385w[1..1] & (! w_data3369w[1..1])), (w_anode3385w[0..0] & (! w_data3369w[0..0])), w_anode3371w[2..2]);
	w_anode3402w[] = ( (w_anode3402w[2..2] & (! w_data3369w[2..2])), (w_anode3402w[1..1] & (! w_data3369w[1..1])), (w_anode3402w[0..0] & w_data3369w[0..0]), w_anode3371w[2..2]);
	w_anode3412w[] = ( (w_anode3412w[2..2] & (! w_data3369w[2..2])), (w_anode3412w[1..1] & w_data3369w[1..1]), (w_anode3412w[0..0] & (! w_data3369w[0..0])), w_anode3371w[2..2]);
	w_anode3422w[] = ( (w_anode3422w[2..2] & (! w_data3369w[2..2])), (w_anode3422w[1..1] & w_data3369w[1..1]), (w_anode3422w[0..0] & w_data3369w[0..0]), w_anode3371w[2..2]);
	w_anode3432w[] = ( (w_anode3432w[2..2] & w_data3369w[2..2]), (w_anode3432w[1..1] & (! w_data3369w[1..1])), (w_anode3432w[0..0] & (! w_data3369w[0..0])), w_anode3371w[2..2]);
	w_anode3442w[] = ( (w_anode3442w[2..2] & w_data3369w[2..2]), (w_anode3442w[1..1] & (! w_data3369w[1..1])), (w_anode3442w[0..0] & w_data3369w[0..0]), w_anode3371w[2..2]);
	w_anode3452w[] = ( (w_anode3452w[2..2] & w_data3369w[2..2]), (w_anode3452w[1..1] & w_data3369w[1..1]), (w_anode3452w[0..0] & (! w_data3369w[0..0])), w_anode3371w[2..2]);
	w_anode3462w[] = ( (w_anode3462w[2..2] & w_data3369w[2..2]), (w_anode3462w[1..1] & w_data3369w[1..1]), (w_anode3462w[0..0] & w_data3369w[0..0]), w_anode3371w[2..2]);
	w_anode3474w[] = ( (w_anode3474w[1..1] & (! data_wire[4..4])), (w_anode3474w[0..0] & data_wire[3..3]), B"1");
	w_anode3484w[] = ( (w_anode3484w[2..2] & (! w_data3369w[2..2])), (w_anode3484w[1..1] & (! w_data3369w[1..1])), (w_anode3484w[0..0] & (! w_data3369w[0..0])), w_anode3474w[2..2]);
	w_anode3495w[] = ( (w_anode3495w[2..2] & (! w_data3369w[2..2])), (w_anode3495w[1..1] & (! w_data3369w[1..1])), (w_anode3495w[0..0] & w_data3369w[0..0]), w_anode3474w[2..2]);
	w_anode3505w[] = ( (w_anode3505w[2..2] & (! w_data3369w[2..2])), (w_anode3505w[1..1] & w_data3369w[1..1]), (w_anode3505w[0..0] & (! w_data3369w[0..0])), w_anode3474w[2..2]);
	w_anode3515w[] = ( (w_anode3515w[2..2] & (! w_data3369w[2..2])), (w_anode3515w[1..1] & w_data3369w[1..1]), (w_anode3515w[0..0] & w_data3369w[0..0]), w_anode3474w[2..2]);
	w_anode3525w[] = ( (w_anode3525w[2..2] & w_data3369w[2..2]), (w_anode3525w[1..1] & (! w_data3369w[1..1])), (w_anode3525w[0..0] & (! w_data3369w[0..0])), w_anode3474w[2..2]);
	w_anode3535w[] = ( (w_anode3535w[2..2] & w_data3369w[2..2]), (w_anode3535w[1..1] & (! w_data3369w[1..1])), (w_anode3535w[0..0] & w_data3369w[0..0]), w_anode3474w[2..2]);
	w_anode3545w[] = ( (w_anode3545w[2..2] & w_data3369w[2..2]), (w_anode3545w[1..1] & w_data3369w[1..1]), (w_anode3545w[0..0] & (! w_data3369w[0..0])), w_anode3474w[2..2]);
	w_anode3555w[] = ( (w_anode3555w[2..2] & w_data3369w[2..2]), (w_anode3555w[1..1] & w_data3369w[1..1]), (w_anode3555w[0..0] & w_data3369w[0..0]), w_anode3474w[2..2]);
	w_anode3566w[] = ( (w_anode3566w[1..1] & data_wire[4..4]), (w_anode3566w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3576w[] = ( (w_anode3576w[2..2] & (! w_data3369w[2..2])), (w_anode3576w[1..1] & (! w_data3369w[1..1])), (w_anode3576w[0..0] & (! w_data3369w[0..0])), w_anode3566w[2..2]);
	w_anode3587w[] = ( (w_anode3587w[2..2] & (! w_data3369w[2..2])), (w_anode3587w[1..1] & (! w_data3369w[1..1])), (w_anode3587w[0..0] & w_data3369w[0..0]), w_anode3566w[2..2]);
	w_anode3597w[] = ( (w_anode3597w[2..2] & (! w_data3369w[2..2])), (w_anode3597w[1..1] & w_data3369w[1..1]), (w_anode3597w[0..0] & (! w_data3369w[0..0])), w_anode3566w[2..2]);
	w_anode3607w[] = ( (w_anode3607w[2..2] & (! w_data3369w[2..2])), (w_anode3607w[1..1] & w_data3369w[1..1]), (w_anode3607w[0..0] & w_data3369w[0..0]), w_anode3566w[2..2]);
	w_anode3617w[] = ( (w_anode3617w[2..2] & w_data3369w[2..2]), (w_anode3617w[1..1] & (! w_data3369w[1..1])), (w_anode3617w[0..0] & (! w_data3369w[0..0])), w_anode3566w[2..2]);
	w_anode3627w[] = ( (w_anode3627w[2..2] & w_data3369w[2..2]), (w_anode3627w[1..1] & (! w_data3369w[1..1])), (w_anode3627w[0..0] & w_data3369w[0..0]), w_anode3566w[2..2]);
	w_anode3637w[] = ( (w_anode3637w[2..2] & w_data3369w[2..2]), (w_anode3637w[1..1] & w_data3369w[1..1]), (w_anode3637w[0..0] & (! w_data3369w[0..0])), w_anode3566w[2..2]);
	w_anode3647w[] = ( (w_anode3647w[2..2] & w_data3369w[2..2]), (w_anode3647w[1..1] & w_data3369w[1..1]), (w_anode3647w[0..0] & w_data3369w[0..0]), w_anode3566w[2..2]);
	w_anode3658w[] = ( (w_anode3658w[1..1] & data_wire[4..4]), (w_anode3658w[0..0] & data_wire[3..3]), B"1");
	w_anode3668w[] = ( (w_anode3668w[2..2] & (! w_data3369w[2..2])), (w_anode3668w[1..1] & (! w_data3369w[1..1])), (w_anode3668w[0..0] & (! w_data3369w[0..0])), w_anode3658w[2..2]);
	w_anode3679w[] = ( (w_anode3679w[2..2] & (! w_data3369w[2..2])), (w_anode3679w[1..1] & (! w_data3369w[1..1])), (w_anode3679w[0..0] & w_data3369w[0..0]), w_anode3658w[2..2]);
	w_anode3689w[] = ( (w_anode3689w[2..2] & (! w_data3369w[2..2])), (w_anode3689w[1..1] & w_data3369w[1..1]), (w_anode3689w[0..0] & (! w_data3369w[0..0])), w_anode3658w[2..2]);
	w_anode3699w[] = ( (w_anode3699w[2..2] & (! w_data3369w[2..2])), (w_anode3699w[1..1] & w_data3369w[1..1]), (w_anode3699w[0..0] & w_data3369w[0..0]), w_anode3658w[2..2]);
	w_anode3709w[] = ( (w_anode3709w[2..2] & w_data3369w[2..2]), (w_anode3709w[1..1] & (! w_data3369w[1..1])), (w_anode3709w[0..0] & (! w_data3369w[0..0])), w_anode3658w[2..2]);
	w_anode3719w[] = ( (w_anode3719w[2..2] & w_data3369w[2..2]), (w_anode3719w[1..1] & (! w_data3369w[1..1])), (w_anode3719w[0..0] & w_data3369w[0..0]), w_anode3658w[2..2]);
	w_anode3729w[] = ( (w_anode3729w[2..2] & w_data3369w[2..2]), (w_anode3729w[1..1] & w_data3369w[1..1]), (w_anode3729w[0..0] & (! w_data3369w[0..0])), w_anode3658w[2..2]);
	w_anode3739w[] = ( (w_anode3739w[2..2] & w_data3369w[2..2]), (w_anode3739w[1..1] & w_data3369w[1..1]), (w_anode3739w[0..0] & w_data3369w[0..0]), w_anode3658w[2..2]);
	w_data3369w[2..0] = data_wire[2..0];
END;
--VALID FILE
