
interrupt.elf:     file format elf32-littlenios2
interrupt.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040230

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x0000fe20 memsz 0x0000fe20 flags r-x
    LOAD off    0x00010e40 vaddr 0x0004fe40 paddr 0x0005192c align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013418 vaddr 0x00053418 paddr 0x00053418 align 2**12
         filesz 0x00000000 memsz 0x00000168 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f8e4  00040230  00040230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000032c  0004fb14  0004fb14  00010b14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0004fe40  0005192c  00010e40  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  00053418  00053418  00013418  2**2
                  ALLOC, SMALL_DATA
  6 .RAM          00000000  00053580  00053580  0001292c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001292c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ed8  00000000  00000000  00012950  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000233bc  00000000  00000000  00013828  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008f87  00000000  00000000  00036be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b3ea  00000000  00000000  0003fb6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000020f0  00000000  00000000  0004af58  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000038be  00000000  00000000  0004d048  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001786c  00000000  00000000  00050906  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000040  00000000  00000000  00068174  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018d0  00000000  00000000  000681b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006cb12  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0006cb15  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006cb18  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006cb19  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000005  00000000  00000000  0006cb1a  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000005  00000000  00000000  0006cb1f  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000005  00000000  00000000  0006cb24  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000009  00000000  00000000  0006cb29  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000021  00000000  00000000  0006cb32  2**0
                  CONTENTS, READONLY
 26 .jdi          0000378a  00000000  00000000  0006cb53  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00039f57  00000000  00000000  000702dd  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040230 l    d  .text	00000000 .text
0004fb14 l    d  .rodata	00000000 .rodata
0004fe40 l    d  .rwdata	00000000 .rwdata
00053418 l    d  .bss	00000000 .bss
00053580 l    d  .RAM	00000000 .RAM
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../interrupt_bsp//obj/HAL/src/crt0.o
00040268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
0004026c l     F .text	00000078 handle_interrupts
000402e4 l     F .text	0000006c init_interrupt_pio
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004fb96 l     O .rodata	00000010 zeroes.4404
00042888 l     F .text	000000bc __sbprintf
0004fba6 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00042a98 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000445f0 l     F .text	00000008 __fp_unlock
00044604 l     F .text	0000019c __sinit.part.1
000447a0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0004fe40 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00050284 l     O .rwdata	00000020 lc_ctype_charset
00050264 l     O .rwdata	00000020 lc_message_charset
000502a4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0004fbd8 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00047c74 l     F .text	000000fc __sprint_r.part.0
0004fcfc l     O .rodata	00000010 zeroes.4349
000492b0 l     F .text	000000bc __sbprintf
0004fd0c l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0004d2f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004d40c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004d438 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0004d7cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004d8b4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004d9a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004db7c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00051920 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0004de20 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004df5c l     F .text	00000034 alt_dev_reg
0005088c l     O .rwdata	00001060 debug
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004e234 l     F .text	0000020c altera_avalon_jtag_uart_irq
0004e440 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004ed1c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004ef78 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0004f0d8 l     F .text	0000003c alt_get_errno
0004f114 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0005344c g     O .bss	00000004 alt_instruction_exception_handler
000472b8 g     F .text	00000074 _mprec_log10
000473a4 g     F .text	0000008c __any_on
00049864 g     F .text	00000054 _isatty_r
0004fbe4 g     O .rodata	00000028 __mprec_tinytens
0004dab8 g     F .text	0000007c alt_main
00040424 g     F .text	000000c0 _puts_r
00053480 g     O .bss	00000100 alt_irq
000498b8 g     F .text	00000060 _lseek_r
0005192c g       *ABS*	00000000 __flash_rwdata_start
0004bcd0 g     F .text	00000088 .hidden __eqdf2
00053580 g       *ABS*	00000000 __alt_heap_start
000403e8 g     F .text	0000003c printf
00049ad0 g     F .text	0000009c _wcrtomb_r
00047b34 g     F .text	0000005c __sseek
00044950 g     F .text	00000010 __sinit
00049978 g     F .text	00000140 __swbuf_r
00045424 g     F .text	0000007c _setlocale_r
000447a8 g     F .text	00000078 __sfmoreglue
0004db58 g     F .text	00000024 __malloc_unlock
000460f4 g     F .text	0000015c memmove
00044938 g     F .text	00000018 _cleanup
00046378 g     F .text	000000a8 _Balloc
0004bd58 g     F .text	000000dc .hidden __gtdf2
0004f500 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000000c __reset
0005341c g     O .bss	00000004 edge_capture
00040020 g       *ABS*	00000000 __flash_exceptions_start
00049808 g     F .text	0000005c _fstat_r
00053438 g     O .bss	00000004 errno
00047ab0 g     F .text	00000008 __seofread
00053444 g     O .bss	00000004 alt_argv
000598ec g       *ABS*	00000000 _gp
0004ddf0 g     F .text	00000030 usleep
0005070c g     O .rwdata	00000180 alt_fd_list
0004f524 g     F .text	00000090 alt_find_dev
00045fac g     F .text	00000148 memcpy
000445f8 g     F .text	0000000c _cleanup_r
0004d110 g     F .text	000000dc .hidden __floatsidf
0004f05c g     F .text	0000007c alt_io_redirect
0004be34 g     F .text	000000f4 .hidden __ltdf2
0004fb14 g       *ABS*	00000000 __DTOR_END__
000404e4 g     F .text	00000014 puts
0004eedc g     F .text	0000009c alt_exception_cause_generated_bad_addr
00047994 g     F .text	00000074 __fpclassifyd
00047214 g     F .text	000000a4 __ratio
00049294 g     F .text	0000001c __vfiprintf_internal
0004e638 g     F .text	0000021c altera_avalon_jtag_uart_read
000403b8 g     F .text	00000030 _printf_r
0004a970 g     F .text	00000064 .hidden __udivsi3
0004d808 g     F .text	000000ac isatty
0004fc34 g     O .rodata	000000c8 __mprec_tens
000454a0 g     F .text	0000000c __locale_charset
00053434 g     O .bss	00000004 __malloc_top_pad
000518f4 g     O .rwdata	00000004 __mb_cur_max
000454d0 g     F .text	0000000c _localeconv_r
000467ac g     F .text	0000003c __i2b
00044dd4 g     F .text	000004c8 __sfvwrite_r
00047a08 g     F .text	00000054 _sbrk_r
00049918 g     F .text	00000060 _read_r
00051914 g     O .rwdata	00000004 alt_max_fd
000494fc g     F .text	000000f0 _fclose_r
000445c0 g     F .text	00000030 fflush
00053430 g     O .bss	00000004 __malloc_max_sbrked_mem
0004aa54 g     F .text	000008ac .hidden __adddf3
00046fbc g     F .text	0000010c __b2d
0004a2b4 g     F .text	000005c4 .hidden __umoddi3
0004d9dc g     F .text	000000dc lseek
000518ec g     O .rwdata	00000004 _global_impure_ptr
00047430 g     F .text	00000564 _realloc_r
00053580 g       *ABS*	00000000 __bss_end
0004d6dc g     F .text	000000f0 alt_iic_isr_register
0004f3f8 g     F .text	00000108 alt_tick
00049cb8 g     F .text	000005fc .hidden __udivdi3
00049764 g     F .text	00000024 _fputwc_r
0004fc0c g     O .rodata	00000028 __mprec_bigtens
00046590 g     F .text	00000104 __s2b
0004d1ec g     F .text	000000a8 .hidden __floatunsidf
00046cfc g     F .text	00000060 __mcmp
00044970 g     F .text	00000018 __fp_lock_all
0004d690 g     F .text	0000004c alt_ic_irq_enabled
0004f35c g     F .text	0000009c alt_alarm_stop
0005343c g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
000506e4 g     O .rwdata	00000028 alt_dev_null
0004ecfc g     F .text	00000020 alt_dcache_flush_all
00046694 g     F .text	00000068 __hi0bits
0004d090 g     F .text	00000080 .hidden __fixdfsi
0005192c g       *ABS*	00000000 __ram_rwdata_end
0005190c g     O .rwdata	00000008 alt_dev_list
0004de5c g     F .text	00000100 write
0004fe40 g       *ABS*	00000000 __ram_rodata_end
0004d474 g     F .text	000000b8 fstat
0004be34 g     F .text	000000f4 .hidden __ledf2
00046a74 g     F .text	00000140 __pow5mult
00047d88 g     F .text	0000150c ___vfiprintf_internal_r
00053428 g     O .bss	00000004 __nlocale_changed
0004a9d4 g     F .text	00000058 .hidden __umodsi3
00053580 g       *ABS*	00000000 end
0004e174 g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0004fb14 g       *ABS*	00000000 __CTOR_LIST__
00072000 g       *ABS*	00000000 __alt_stack_pointer
0004d294 g     F .text	00000064 .hidden __clzsi2
0004e854 g     F .text	00000224 altera_avalon_jtag_uart_write
00044960 g     F .text	00000004 __sfp_lock_acquire
00045ec8 g     F .text	000000e4 memchr
00040590 g     F .text	000022dc ___vfprintf_internal_r
00044ac4 g     F .text	00000310 _free_r
000454ac g     F .text	00000010 __locale_mb_cur_max
0004f960 g     F .text	00000180 __call_exitprocs
00053424 g     O .bss	00000004 __mlocale_changed
000518f8 g     O .rwdata	00000004 __malloc_sbrk_base
00040230 g     F .text	0000003c _start
00053450 g     O .bss	00000004 _alt_tick_rate
00046bb4 g     F .text	00000148 __lshift
00053454 g     O .bss	00000004 _alt_nticks
0004dbb8 g     F .text	00000104 read
0004dfc8 g     F .text	00000048 alt_sys_init
0004f848 g     F .text	00000118 __register_exitproc
000467e8 g     F .text	0000028c __multiply
0004e4e0 g     F .text	00000068 altera_avalon_jtag_uart_close
0004aa2c g     F .text	00000028 .hidden __mulsi3
0004fe40 g       *ABS*	00000000 __ram_rwdata_start
0004fb14 g       *ABS*	00000000 __ram_rodata_start
00053458 g     O .bss	00000028 __malloc_current_mallinfo
000470c8 g     F .text	0000014c __d2b
0004e010 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004f6bc g     F .text	000000c4 alt_get_fd
0004eba4 g     F .text	00000158 alt_busy_sleep
000493cc g     F .text	00000054 _close_r
0004f7cc g     F .text	0000007c memcmp
0004e0d0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00053580 g       *ABS*	00000000 __alt_stack_base
0004e120 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00042944 g     F .text	00000154 __swsetup_r
0004b300 g     F .text	000009d0 .hidden __divdf3
00044820 g     F .text	00000118 __sfp
0004732c g     F .text	00000078 __copybits
000502dc g     O .rwdata	00000408 __malloc_av_
0004496c g     F .text	00000004 __sinit_lock_release
0004bf28 g     F .text	0000086c .hidden __muldf3
00047a5c g     F .text	00000054 __sread
0004f5b4 g     F .text	00000108 alt_find_file
0004ed58 g     F .text	000000a4 alt_dev_llist_insert
0004db34 g     F .text	00000024 __malloc_lock
0004dd40 g     F .text	000000b0 sbrk
00044564 g     F .text	0000005c _fflush_r
00049420 g     F .text	000000dc _calloc_r
00053418 g       *ABS*	00000000 __bss_start
00046250 g     F .text	00000128 memset
00040350 g     F .text	00000068 main
00040000 g       *ABS*	00000000 __alt_mem_RAM
00053448 g     O .bss	00000004 alt_envp
0005342c g     O .bss	00000004 __malloc_max_total_mem
0004e070 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00049ab8 g     F .text	00000018 __swbuf
00047b90 g     F .text	00000008 __sclose
00072000 g       *ABS*	00000000 __alt_heap_limit
000495ec g     F .text	00000014 fclose
00042cc0 g     F .text	00001688 _dtoa_r
000456bc g     F .text	0000080c _malloc_r
00049c2c g     F .text	00000030 __ascii_wctomb
00051918 g     O .rwdata	00000004 alt_errno
0004529c g     F .text	000000c4 _fwalk
0004a878 g     F .text	00000084 .hidden __divsi3
000449a0 g     F .text	00000124 _malloc_trim_r
0004fb14 g       *ABS*	00000000 __CTOR_END__
00047b98 g     F .text	000000dc strcmp
0004fb14 g       *ABS*	00000000 __flash_rodata_start
0004fb14 g       *ABS*	00000000 __DTOR_LIST__
00053418 g     O .bss	00000004 count
0004bcd0 g     F .text	00000088 .hidden __nedf2
0004df90 g     F .text	00000038 alt_irq_init
0004dcbc g     F .text	00000084 alt_release_fd
0004fd1c g     O .rodata	00000100 .hidden __clz_tab
00053420 g     O .bss	00000004 _PathLocale
0004f780 g     F .text	00000014 atexit
0004936c g     F .text	00000060 _write_r
000454dc g     F .text	00000018 setlocale
000518f0 g     O .rwdata	00000004 _impure_ptr
00053440 g     O .bss	00000004 alt_argc
00044348 g     F .text	0000021c __sflush_r
0004ee5c g     F .text	00000060 _do_dtors
000454c8 g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
00046f58 g     F .text	00000064 __ulp
00044988 g     F .text	00000018 __fp_unlock_all
00051904 g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
000454f4 g     F .text	0000000c localeconv
0004d52c g     F .text	00000050 alt_ic_isr_register
0005192c g       *ABS*	00000000 _edata
00053580 g       *ABS*	00000000 _end
00049600 g     F .text	00000164 __fputwc
00040230 g       *ABS*	00000000 __ram_exceptions_end
0004e548 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0004d604 g     F .text	0000008c alt_ic_irq_disable
00047ab8 g     F .text	0000007c __swrite
000518fc g     O .rwdata	00000004 __malloc_trim_threshold
000454bc g     F .text	0000000c __locale_msgcharset
0004f794 g     F .text	00000038 exit
00045360 g     F .text	000000c4 _fwalk_reent
00046d5c g     F .text	000001fc __mdiff
0004a8fc g     F .text	00000074 .hidden __modsi3
00072000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00044964 g     F .text	00000004 __sfp_lock_release
0004fae0 g     F .text	00000034 _exit
0004ea78 g     F .text	0000012c alt_alarm_start
00045500 g     F .text	000001bc __smakebuf_r
000404f8 g     F .text	00000098 strlen
0004f200 g     F .text	0000015c open
0004bd58 g     F .text	000000dc .hidden __gedf2
00051900 g     O .rwdata	00000004 __wctomb
00047d70 g     F .text	00000018 __sprint_r
0004eebc g     F .text	00000020 alt_icache_flush_all
0005191c g     O .rwdata	00000004 alt_priority_mask
0004d57c g     F .text	00000088 alt_ic_irq_enable
0004286c g     F .text	0000001c __vfprintf_internal
00049c5c g     F .text	0000005c _wctomb_r
0004c794 g     F .text	000008fc .hidden __subdf3
000466fc g     F .text	000000b0 __lo0bits
00051924 g     O .rwdata	00000008 alt_alarm_list
0004edfc g     F .text	00000060 _do_ctors
00049b6c g     F .text	000000c0 wcrtomb
0004d334 g     F .text	000000d8 close
0004d91c g     F .text	00000084 alt_load
00049788 g     F .text	00000080 fputwc
00044968 g     F .text	00000004 __sinit_lock_acquire
00046448 g     F .text	00000148 __multadd
00046420 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40000:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40004:	08408c14 	ori	at,at,560
    jmp r1
   40008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	108d2004 	addi	r2,r2,13440
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	108d2004 	addi	r2,r2,13440
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_data_end+0xfffce12c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_data_end+0xfffce120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
   401e4:	00bfffc4 	movi	r2,-1
   401e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
   401ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   401f0:	d0a6d817 	ldw	r2,-25760(gp)
   401f4:	10000726 	beq	r2,zero,40214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   401f8:	d0a6d817 	ldw	r2,-25760(gp)
   401fc:	e0fffd17 	ldw	r3,-12(fp)
   40200:	e1bffe17 	ldw	r6,-8(fp)
   40204:	e17fff17 	ldw	r5,-4(fp)
   40208:	1809883a 	mov	r4,r3
   4020c:	103ee83a 	callr	r2
   40210:	00000206 	br	4021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   40218:	0005883a 	mov	r2,zero
}
   4021c:	e037883a 	mov	sp,fp
   40220:	dfc00117 	ldw	ra,4(sp)
   40224:	df000017 	ldw	fp,0(sp)
   40228:	dec00204 	addi	sp,sp,8
   4022c:	f800283a 	ret

Disassembly of section .text:

00040230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40230:	06c001f4 	movhi	sp,7
    ori sp, sp, %lo(__alt_stack_pointer)
   40234:	dec80014 	ori	sp,sp,8192
    movhi gp, %hi(_gp)
   40238:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   4023c:	d6a63b14 	ori	gp,gp,39148
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40240:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40244:	108d0614 	ori	r2,r2,13336

    movhi r3, %hi(__bss_end)
   40248:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   4024c:	18cd6014 	ori	r3,r3,13696

    beq r2, r3, 1f
   40250:	10c00326 	beq	r2,r3,40260 <_start+0x30>

0:
    stw zero, (r2)
   40254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   40258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   4025c:	10fffd36 	bltu	r2,r3,40254 <__alt_data_end+0xfffce254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40260:	004d91c0 	call	4d91c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40264:	004dab80 	call	4dab8 <alt_main>

00040268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   40268:	003fff06 	br	40268 <__alt_data_end+0xfffce268>

0004026c <handle_interrupts>:
volatile int edge_capture;
int count = 0;

/* This is the ISR which will be called when the system signals an interrupt. */
static void handle_interrupts(void* context)
{
   4026c:	defffc04 	addi	sp,sp,-16
   40270:	dfc00315 	stw	ra,12(sp)
   40274:	df000215 	stw	fp,8(sp)
   40278:	df000204 	addi	fp,sp,8
   4027c:	e13fff15 	stw	r4,-4(fp)
    //Cast context to edge_capture's type
    //Volatile to avoid compiler optimization
    //this will point to the edge_capture variable.
    volatile int* edge_capture_ptr = (volatile int*) context;
   40280:	e0bfff17 	ldw	r2,-4(fp)
   40284:	e0bffe15 	stw	r2,-8(fp)

    //Read the edge capture register on the PIO and store the value
    //The value will be stored in the edge_capture variable and accessible
    //from other parts of the code.
    *edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_BASE);
   40288:	00800234 	movhi	r2,8
   4028c:	10840b04 	addi	r2,r2,4140
   40290:	10c00037 	ldwio	r3,0(r2)
   40294:	e0bffe17 	ldw	r2,-8(fp)
   40298:	10c00015 	stw	r3,0(r2)

    //Write to edge capture register to reset it
    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_BASE,0);
   4029c:	0007883a 	mov	r3,zero
   402a0:	00800234 	movhi	r2,8
   402a4:	10840b04 	addi	r2,r2,4140
   402a8:	10c00035 	stwio	r3,0(r2)
    count++;
   402ac:	d0a6cb17 	ldw	r2,-25812(gp)
   402b0:	10800044 	addi	r2,r2,1
   402b4:	d0a6cb15 	stw	r2,-25812(gp)
    printf("Interrupt detected, Key1 was pressed! %d\n", count);
   402b8:	d0a6cb17 	ldw	r2,-25812(gp)
   402bc:	100b883a 	mov	r5,r2
   402c0:	01000174 	movhi	r4,5
   402c4:	213ec504 	addi	r4,r4,-1260
   402c8:	00403e80 	call	403e8 <printf>

}
   402cc:	0001883a 	nop
   402d0:	e037883a 	mov	sp,fp
   402d4:	dfc00117 	ldw	ra,4(sp)
   402d8:	df000017 	ldw	fp,0(sp)
   402dc:	dec00204 	addi	sp,sp,8
   402e0:	f800283a 	ret

000402e4 <init_interrupt_pio>:

/* This function is used to initializes and registers the interrupt handler. */
static void init_interrupt_pio()
{
   402e4:	defffc04 	addi	sp,sp,-16
   402e8:	dfc00315 	stw	ra,12(sp)
   402ec:	df000215 	stw	fp,8(sp)
   402f0:	df000204 	addi	fp,sp,8
    //Recast the edge_capture point to match the
    //alt_irq_register() function prototypo
    void* edge_capture_ptr = (void*)&edge_capture;
   402f4:	d0a6cc04 	addi	r2,gp,-25808
   402f8:	e0bfff15 	stw	r2,-4(fp)

    //Enable a single interrupt input by writing a one to the corresponding interruptmask bit locations
    IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BUTTON_BASE,0x1);
   402fc:	00c00044 	movi	r3,1
   40300:	00800234 	movhi	r2,8
   40304:	10840a04 	addi	r2,r2,4136
   40308:	10c00035 	stwio	r3,0(r2)

    //Reset the edge capture register
    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_BASE,0);
   4030c:	0007883a 	mov	r3,zero
   40310:	00800234 	movhi	r2,8
   40314:	10840b04 	addi	r2,r2,4140
   40318:	10c00035 	stwio	r3,0(r2)

    //Register the interrupt handler in the system
    //The ID and PIO_IRQ number is available from the system.h file.
    alt_ic_isr_register(BUTTON_IRQ_INTERRUPT_CONTROLLER_ID, BUTTON_IRQ, handle_interrupts, edge_capture_ptr, 0x0);
   4031c:	d8000015 	stw	zero,0(sp)
   40320:	e1ffff17 	ldw	r7,-4(fp)
   40324:	01800134 	movhi	r6,4
   40328:	31809b04 	addi	r6,r6,620
   4032c:	01400044 	movi	r5,1
   40330:	0009883a 	mov	r4,zero
   40334:	004d52c0 	call	4d52c <alt_ic_isr_register>
    /* In order to keep the impact of interrupts on the execution of the main program to a minimum,
    it is important to keep interrupt routines short. If additional processing is necessary for a
    particular interrupt, it is better to do this outside of the ISR. E.g., checking the value
    of the edge_capture variable.*/

}
   40338:	0001883a 	nop
   4033c:	e037883a 	mov	sp,fp
   40340:	dfc00117 	ldw	ra,4(sp)
   40344:	df000017 	ldw	fp,0(sp)
   40348:	dec00204 	addi	sp,sp,8
   4034c:	f800283a 	ret

00040350 <main>:


int main(){
   40350:	defffe04 	addi	sp,sp,-8
   40354:	dfc00115 	stw	ra,4(sp)
   40358:	df000015 	stw	fp,0(sp)
   4035c:	d839883a 	mov	fp,sp
    printf("Hello, World!\n");
   40360:	01000174 	movhi	r4,5
   40364:	213ed004 	addi	r4,r4,-1216
   40368:	00404e40 	call	404e4 <puts>
//    int sw_data = 1;

    // Initialize the interrupt
    init_interrupt_pio();
   4036c:	00402e40 	call	402e4 <init_interrupt_pio>

    while(1){
        //Access registers using IORD and IOWR from io.h
//        sw_data = IORD(BUTTON_BASE,0);
    	if(count<10)
   40370:	d0a6cb17 	ldw	r2,-25812(gp)
   40374:	10800288 	cmpgei	r2,r2,10
   40378:	103ffd1e 	bne	r2,zero,40370 <__alt_data_end+0xfffce370>
    	{
        IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE,0);
   4037c:	0007883a 	mov	r3,zero
   40380:	00800234 	movhi	r2,8
   40384:	10840c04 	addi	r2,r2,4144
   40388:	10c00035 	stwio	r3,0(r2)
        usleep(100000);
   4038c:	010000b4 	movhi	r4,2
   40390:	2121a804 	addi	r4,r4,-31072
   40394:	004ddf00 	call	4ddf0 <usleep>
        IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE,1);
   40398:	00c00044 	movi	r3,1
   4039c:	00800234 	movhi	r2,8
   403a0:	10840c04 	addi	r2,r2,4144
   403a4:	10c00035 	stwio	r3,0(r2)
        usleep(100000);
   403a8:	010000b4 	movhi	r4,2
   403ac:	2121a804 	addi	r4,r4,-31072
   403b0:	004ddf00 	call	4ddf0 <usleep>
//            edge_capture = 0; // reset variable to "unregister" event
//        }
//
//        usleep(100000); //sleep 100 us

    }
   403b4:	003fee06 	br	40370 <__alt_data_end+0xfffce370>

000403b8 <_printf_r>:
   403b8:	defffd04 	addi	sp,sp,-12
   403bc:	2805883a 	mov	r2,r5
   403c0:	dfc00015 	stw	ra,0(sp)
   403c4:	d9800115 	stw	r6,4(sp)
   403c8:	d9c00215 	stw	r7,8(sp)
   403cc:	21400217 	ldw	r5,8(r4)
   403d0:	d9c00104 	addi	r7,sp,4
   403d4:	100d883a 	mov	r6,r2
   403d8:	00405900 	call	40590 <___vfprintf_internal_r>
   403dc:	dfc00017 	ldw	ra,0(sp)
   403e0:	dec00304 	addi	sp,sp,12
   403e4:	f800283a 	ret

000403e8 <printf>:
   403e8:	defffc04 	addi	sp,sp,-16
   403ec:	dfc00015 	stw	ra,0(sp)
   403f0:	d9400115 	stw	r5,4(sp)
   403f4:	d9800215 	stw	r6,8(sp)
   403f8:	d9c00315 	stw	r7,12(sp)
   403fc:	00800174 	movhi	r2,5
   40400:	10863c04 	addi	r2,r2,6384
   40404:	10800017 	ldw	r2,0(r2)
   40408:	200b883a 	mov	r5,r4
   4040c:	d9800104 	addi	r6,sp,4
   40410:	11000217 	ldw	r4,8(r2)
   40414:	004286c0 	call	4286c <__vfprintf_internal>
   40418:	dfc00017 	ldw	ra,0(sp)
   4041c:	dec00404 	addi	sp,sp,16
   40420:	f800283a 	ret

00040424 <_puts_r>:
   40424:	defff604 	addi	sp,sp,-40
   40428:	dc000715 	stw	r16,28(sp)
   4042c:	2021883a 	mov	r16,r4
   40430:	2809883a 	mov	r4,r5
   40434:	dc400815 	stw	r17,32(sp)
   40438:	dfc00915 	stw	ra,36(sp)
   4043c:	2823883a 	mov	r17,r5
   40440:	00404f80 	call	404f8 <strlen>
   40444:	10c00044 	addi	r3,r2,1
   40448:	d8800115 	stw	r2,4(sp)
   4044c:	00800174 	movhi	r2,5
   40450:	10bed404 	addi	r2,r2,-1200
   40454:	d8800215 	stw	r2,8(sp)
   40458:	00800044 	movi	r2,1
   4045c:	d8800315 	stw	r2,12(sp)
   40460:	00800084 	movi	r2,2
   40464:	dc400015 	stw	r17,0(sp)
   40468:	d8c00615 	stw	r3,24(sp)
   4046c:	dec00415 	stw	sp,16(sp)
   40470:	d8800515 	stw	r2,20(sp)
   40474:	80000226 	beq	r16,zero,40480 <_puts_r+0x5c>
   40478:	80800e17 	ldw	r2,56(r16)
   4047c:	10001426 	beq	r2,zero,404d0 <_puts_r+0xac>
   40480:	81400217 	ldw	r5,8(r16)
   40484:	2880030b 	ldhu	r2,12(r5)
   40488:	10c8000c 	andi	r3,r2,8192
   4048c:	1800061e 	bne	r3,zero,404a8 <_puts_r+0x84>
   40490:	29001917 	ldw	r4,100(r5)
   40494:	00f7ffc4 	movi	r3,-8193
   40498:	10880014 	ori	r2,r2,8192
   4049c:	20c6703a 	and	r3,r4,r3
   404a0:	2880030d 	sth	r2,12(r5)
   404a4:	28c01915 	stw	r3,100(r5)
   404a8:	d9800404 	addi	r6,sp,16
   404ac:	8009883a 	mov	r4,r16
   404b0:	0044dd40 	call	44dd4 <__sfvwrite_r>
   404b4:	1000091e 	bne	r2,zero,404dc <_puts_r+0xb8>
   404b8:	00800284 	movi	r2,10
   404bc:	dfc00917 	ldw	ra,36(sp)
   404c0:	dc400817 	ldw	r17,32(sp)
   404c4:	dc000717 	ldw	r16,28(sp)
   404c8:	dec00a04 	addi	sp,sp,40
   404cc:	f800283a 	ret
   404d0:	8009883a 	mov	r4,r16
   404d4:	00449500 	call	44950 <__sinit>
   404d8:	003fe906 	br	40480 <__alt_data_end+0xfffce480>
   404dc:	00bfffc4 	movi	r2,-1
   404e0:	003ff606 	br	404bc <__alt_data_end+0xfffce4bc>

000404e4 <puts>:
   404e4:	00800174 	movhi	r2,5
   404e8:	10863c04 	addi	r2,r2,6384
   404ec:	200b883a 	mov	r5,r4
   404f0:	11000017 	ldw	r4,0(r2)
   404f4:	00404241 	jmpi	40424 <_puts_r>

000404f8 <strlen>:
   404f8:	208000cc 	andi	r2,r4,3
   404fc:	10002026 	beq	r2,zero,40580 <strlen+0x88>
   40500:	20800007 	ldb	r2,0(r4)
   40504:	10002026 	beq	r2,zero,40588 <strlen+0x90>
   40508:	2005883a 	mov	r2,r4
   4050c:	00000206 	br	40518 <strlen+0x20>
   40510:	10c00007 	ldb	r3,0(r2)
   40514:	18001826 	beq	r3,zero,40578 <strlen+0x80>
   40518:	10800044 	addi	r2,r2,1
   4051c:	10c000cc 	andi	r3,r2,3
   40520:	183ffb1e 	bne	r3,zero,40510 <__alt_data_end+0xfffce510>
   40524:	10c00017 	ldw	r3,0(r2)
   40528:	01ffbff4 	movhi	r7,65279
   4052c:	39ffbfc4 	addi	r7,r7,-257
   40530:	00ca303a 	nor	r5,zero,r3
   40534:	01a02074 	movhi	r6,32897
   40538:	19c7883a 	add	r3,r3,r7
   4053c:	31a02004 	addi	r6,r6,-32640
   40540:	1946703a 	and	r3,r3,r5
   40544:	1986703a 	and	r3,r3,r6
   40548:	1800091e 	bne	r3,zero,40570 <strlen+0x78>
   4054c:	10800104 	addi	r2,r2,4
   40550:	10c00017 	ldw	r3,0(r2)
   40554:	19cb883a 	add	r5,r3,r7
   40558:	00c6303a 	nor	r3,zero,r3
   4055c:	28c6703a 	and	r3,r5,r3
   40560:	1986703a 	and	r3,r3,r6
   40564:	183ff926 	beq	r3,zero,4054c <__alt_data_end+0xfffce54c>
   40568:	00000106 	br	40570 <strlen+0x78>
   4056c:	10800044 	addi	r2,r2,1
   40570:	10c00007 	ldb	r3,0(r2)
   40574:	183ffd1e 	bne	r3,zero,4056c <__alt_data_end+0xfffce56c>
   40578:	1105c83a 	sub	r2,r2,r4
   4057c:	f800283a 	ret
   40580:	2005883a 	mov	r2,r4
   40584:	003fe706 	br	40524 <__alt_data_end+0xfffce524>
   40588:	0005883a 	mov	r2,zero
   4058c:	f800283a 	ret

00040590 <___vfprintf_internal_r>:
   40590:	deffb804 	addi	sp,sp,-288
   40594:	dfc04715 	stw	ra,284(sp)
   40598:	ddc04515 	stw	r23,276(sp)
   4059c:	dd404315 	stw	r21,268(sp)
   405a0:	d9002d15 	stw	r4,180(sp)
   405a4:	282f883a 	mov	r23,r5
   405a8:	302b883a 	mov	r21,r6
   405ac:	d9c02e15 	stw	r7,184(sp)
   405b0:	df004615 	stw	fp,280(sp)
   405b4:	dd804415 	stw	r22,272(sp)
   405b8:	dd004215 	stw	r20,264(sp)
   405bc:	dcc04115 	stw	r19,260(sp)
   405c0:	dc804015 	stw	r18,256(sp)
   405c4:	dc403f15 	stw	r17,252(sp)
   405c8:	dc003e15 	stw	r16,248(sp)
   405cc:	00454d00 	call	454d0 <_localeconv_r>
   405d0:	10800017 	ldw	r2,0(r2)
   405d4:	1009883a 	mov	r4,r2
   405d8:	d8803415 	stw	r2,208(sp)
   405dc:	00404f80 	call	404f8 <strlen>
   405e0:	d8803715 	stw	r2,220(sp)
   405e4:	d8802d17 	ldw	r2,180(sp)
   405e8:	10000226 	beq	r2,zero,405f4 <___vfprintf_internal_r+0x64>
   405ec:	10800e17 	ldw	r2,56(r2)
   405f0:	1000fb26 	beq	r2,zero,409e0 <___vfprintf_internal_r+0x450>
   405f4:	b880030b 	ldhu	r2,12(r23)
   405f8:	10c8000c 	andi	r3,r2,8192
   405fc:	1800061e 	bne	r3,zero,40618 <___vfprintf_internal_r+0x88>
   40600:	b9001917 	ldw	r4,100(r23)
   40604:	00f7ffc4 	movi	r3,-8193
   40608:	10880014 	ori	r2,r2,8192
   4060c:	20c6703a 	and	r3,r4,r3
   40610:	b880030d 	sth	r2,12(r23)
   40614:	b8c01915 	stw	r3,100(r23)
   40618:	10c0020c 	andi	r3,r2,8
   4061c:	1800c326 	beq	r3,zero,4092c <___vfprintf_internal_r+0x39c>
   40620:	b8c00417 	ldw	r3,16(r23)
   40624:	1800c126 	beq	r3,zero,4092c <___vfprintf_internal_r+0x39c>
   40628:	1080068c 	andi	r2,r2,26
   4062c:	00c00284 	movi	r3,10
   40630:	10c0c626 	beq	r2,r3,4094c <___vfprintf_internal_r+0x3bc>
   40634:	d8c00404 	addi	r3,sp,16
   40638:	05000174 	movhi	r20,5
   4063c:	d9001e04 	addi	r4,sp,120
   40640:	a53ee584 	addi	r20,r20,-1130
   40644:	d8c01e15 	stw	r3,120(sp)
   40648:	d8002015 	stw	zero,128(sp)
   4064c:	d8001f15 	stw	zero,124(sp)
   40650:	d8003315 	stw	zero,204(sp)
   40654:	d8003615 	stw	zero,216(sp)
   40658:	d8003815 	stw	zero,224(sp)
   4065c:	1811883a 	mov	r8,r3
   40660:	d8003915 	stw	zero,228(sp)
   40664:	d8003a15 	stw	zero,232(sp)
   40668:	d8002f15 	stw	zero,188(sp)
   4066c:	d9002815 	stw	r4,160(sp)
   40670:	a8800007 	ldb	r2,0(r21)
   40674:	10028b26 	beq	r2,zero,410a4 <___vfprintf_internal_r+0xb14>
   40678:	00c00944 	movi	r3,37
   4067c:	a823883a 	mov	r17,r21
   40680:	10c0021e 	bne	r2,r3,4068c <___vfprintf_internal_r+0xfc>
   40684:	00001406 	br	406d8 <___vfprintf_internal_r+0x148>
   40688:	10c00326 	beq	r2,r3,40698 <___vfprintf_internal_r+0x108>
   4068c:	8c400044 	addi	r17,r17,1
   40690:	88800007 	ldb	r2,0(r17)
   40694:	103ffc1e 	bne	r2,zero,40688 <__alt_data_end+0xfffce688>
   40698:	8d61c83a 	sub	r16,r17,r21
   4069c:	80000e26 	beq	r16,zero,406d8 <___vfprintf_internal_r+0x148>
   406a0:	d8c02017 	ldw	r3,128(sp)
   406a4:	d8801f17 	ldw	r2,124(sp)
   406a8:	45400015 	stw	r21,0(r8)
   406ac:	1c07883a 	add	r3,r3,r16
   406b0:	10800044 	addi	r2,r2,1
   406b4:	d8c02015 	stw	r3,128(sp)
   406b8:	44000115 	stw	r16,4(r8)
   406bc:	d8801f15 	stw	r2,124(sp)
   406c0:	00c001c4 	movi	r3,7
   406c4:	1880a916 	blt	r3,r2,4096c <___vfprintf_internal_r+0x3dc>
   406c8:	42000204 	addi	r8,r8,8
   406cc:	d9402f17 	ldw	r5,188(sp)
   406d0:	2c0b883a 	add	r5,r5,r16
   406d4:	d9402f15 	stw	r5,188(sp)
   406d8:	88800007 	ldb	r2,0(r17)
   406dc:	1000aa26 	beq	r2,zero,40988 <___vfprintf_internal_r+0x3f8>
   406e0:	8d400044 	addi	r21,r17,1
   406e4:	8c400047 	ldb	r17,1(r17)
   406e8:	0021883a 	mov	r16,zero
   406ec:	00bfffc4 	movi	r2,-1
   406f0:	0025883a 	mov	r18,zero
   406f4:	dc002905 	stb	r16,164(sp)
   406f8:	d8002785 	stb	zero,158(sp)
   406fc:	d8002b05 	stb	zero,172(sp)
   40700:	d8802a15 	stw	r2,168(sp)
   40704:	d8003115 	stw	zero,196(sp)
   40708:	04c01604 	movi	r19,88
   4070c:	05800244 	movi	r22,9
   40710:	9021883a 	mov	r16,r18
   40714:	4039883a 	mov	fp,r8
   40718:	ad400044 	addi	r21,r21,1
   4071c:	88bff804 	addi	r2,r17,-32
   40720:	98833236 	bltu	r19,r2,413ec <___vfprintf_internal_r+0xe5c>
   40724:	100490ba 	slli	r2,r2,2
   40728:	00c00134 	movhi	r3,4
   4072c:	18c1cf04 	addi	r3,r3,1852
   40730:	10c5883a 	add	r2,r2,r3
   40734:	10800017 	ldw	r2,0(r2)
   40738:	1000683a 	jmp	r2
   4073c:	000412e4 	muli	zero,zero,4171
   40740:	000413ec 	andhi	zero,zero,4175
   40744:	000413ec 	andhi	zero,zero,4175
   40748:	00041304 	movi	zero,4172
   4074c:	000413ec 	andhi	zero,zero,4175
   40750:	000413ec 	andhi	zero,zero,4175
   40754:	000413ec 	andhi	zero,zero,4175
   40758:	000413ec 	andhi	zero,zero,4175
   4075c:	000413ec 	andhi	zero,zero,4175
   40760:	000413ec 	andhi	zero,zero,4175
   40764:	000409ec 	andhi	zero,zero,4135
   40768:	000411f4 	movhi	zero,4167
   4076c:	000413ec 	andhi	zero,zero,4175
   40770:	000408b0 	cmpltui	zero,zero,4130
   40774:	00040a10 	cmplti	zero,zero,4136
   40778:	000413ec 	andhi	zero,zero,4175
   4077c:	00040a60 	cmpeqi	zero,zero,4137
   40780:	00040a6c 	andhi	zero,zero,4137
   40784:	00040a6c 	andhi	zero,zero,4137
   40788:	00040a6c 	andhi	zero,zero,4137
   4078c:	00040a6c 	andhi	zero,zero,4137
   40790:	00040a6c 	andhi	zero,zero,4137
   40794:	00040a6c 	andhi	zero,zero,4137
   40798:	00040a6c 	andhi	zero,zero,4137
   4079c:	00040a6c 	andhi	zero,zero,4137
   407a0:	00040a6c 	andhi	zero,zero,4137
   407a4:	000413ec 	andhi	zero,zero,4175
   407a8:	000413ec 	andhi	zero,zero,4175
   407ac:	000413ec 	andhi	zero,zero,4175
   407b0:	000413ec 	andhi	zero,zero,4175
   407b4:	000413ec 	andhi	zero,zero,4175
   407b8:	000413ec 	andhi	zero,zero,4175
   407bc:	000413ec 	andhi	zero,zero,4175
   407c0:	000413ec 	andhi	zero,zero,4175
   407c4:	000413ec 	andhi	zero,zero,4175
   407c8:	000413ec 	andhi	zero,zero,4175
   407cc:	00040aa8 	cmpgeui	zero,zero,4138
   407d0:	00040b70 	cmpltui	zero,zero,4141
   407d4:	000413ec 	andhi	zero,zero,4175
   407d8:	00040b70 	cmpltui	zero,zero,4141
   407dc:	000413ec 	andhi	zero,zero,4175
   407e0:	000413ec 	andhi	zero,zero,4175
   407e4:	000413ec 	andhi	zero,zero,4175
   407e8:	000413ec 	andhi	zero,zero,4175
   407ec:	00040c1c 	xori	zero,zero,4144
   407f0:	000413ec 	andhi	zero,zero,4175
   407f4:	000413ec 	andhi	zero,zero,4175
   407f8:	00040c28 	cmpgeui	zero,zero,4144
   407fc:	000413ec 	andhi	zero,zero,4175
   40800:	000413ec 	andhi	zero,zero,4175
   40804:	000413ec 	andhi	zero,zero,4175
   40808:	000413ec 	andhi	zero,zero,4175
   4080c:	000413ec 	andhi	zero,zero,4175
   40810:	000410ac 	andhi	zero,zero,4162
   40814:	000413ec 	andhi	zero,zero,4175
   40818:	000413ec 	andhi	zero,zero,4175
   4081c:	00041118 	cmpnei	zero,zero,4164
   40820:	000413ec 	andhi	zero,zero,4175
   40824:	000413ec 	andhi	zero,zero,4175
   40828:	000413ec 	andhi	zero,zero,4175
   4082c:	000413ec 	andhi	zero,zero,4175
   40830:	000413ec 	andhi	zero,zero,4175
   40834:	000413ec 	andhi	zero,zero,4175
   40838:	000413ec 	andhi	zero,zero,4175
   4083c:	000413ec 	andhi	zero,zero,4175
   40840:	000413ec 	andhi	zero,zero,4175
   40844:	000413ec 	andhi	zero,zero,4175
   40848:	00041390 	cmplti	zero,zero,4174
   4084c:	00041310 	cmplti	zero,zero,4172
   40850:	00040b70 	cmpltui	zero,zero,4141
   40854:	00040b70 	cmpltui	zero,zero,4141
   40858:	00040b70 	cmpltui	zero,zero,4141
   4085c:	00041330 	cmpltui	zero,zero,4172
   40860:	00041310 	cmplti	zero,zero,4172
   40864:	000413ec 	andhi	zero,zero,4175
   40868:	000413ec 	andhi	zero,zero,4175
   4086c:	0004133c 	xorhi	zero,zero,4172
   40870:	000413ec 	andhi	zero,zero,4175
   40874:	00041350 	cmplti	zero,zero,4173
   40878:	000411d4 	movui	zero,4167
   4087c:	000408bc 	xorhi	zero,zero,4130
   40880:	0004120c 	andi	zero,zero,4168
   40884:	000413ec 	andhi	zero,zero,4175
   40888:	00041218 	cmpnei	zero,zero,4168
   4088c:	000413ec 	andhi	zero,zero,4175
   40890:	0004127c 	xorhi	zero,zero,4169
   40894:	000413ec 	andhi	zero,zero,4175
   40898:	000413ec 	andhi	zero,zero,4175
   4089c:	0004129c 	xori	zero,zero,4170
   408a0:	d8c03117 	ldw	r3,196(sp)
   408a4:	d8802e15 	stw	r2,184(sp)
   408a8:	00c7c83a 	sub	r3,zero,r3
   408ac:	d8c03115 	stw	r3,196(sp)
   408b0:	84000114 	ori	r16,r16,4
   408b4:	ac400007 	ldb	r17,0(r21)
   408b8:	003f9706 	br	40718 <__alt_data_end+0xfffce718>
   408bc:	00800c04 	movi	r2,48
   408c0:	d8802705 	stb	r2,156(sp)
   408c4:	00801e04 	movi	r2,120
   408c8:	d8802745 	stb	r2,157(sp)
   408cc:	d9002a17 	ldw	r4,168(sp)
   408d0:	d8802e17 	ldw	r2,184(sp)
   408d4:	d8002785 	stb	zero,158(sp)
   408d8:	e011883a 	mov	r8,fp
   408dc:	10c00104 	addi	r3,r2,4
   408e0:	14c00017 	ldw	r19,0(r2)
   408e4:	002d883a 	mov	r22,zero
   408e8:	80800094 	ori	r2,r16,2
   408ec:	2002ca16 	blt	r4,zero,41418 <___vfprintf_internal_r+0xe88>
   408f0:	00bfdfc4 	movi	r2,-129
   408f4:	80a4703a 	and	r18,r16,r2
   408f8:	d8c02e15 	stw	r3,184(sp)
   408fc:	94800094 	ori	r18,r18,2
   40900:	9802b41e 	bne	r19,zero,413d4 <___vfprintf_internal_r+0xe44>
   40904:	01400174 	movhi	r5,5
   40908:	297ede04 	addi	r5,r5,-1160
   4090c:	d9403915 	stw	r5,228(sp)
   40910:	04401e04 	movi	r17,120
   40914:	d8802a17 	ldw	r2,168(sp)
   40918:	0039883a 	mov	fp,zero
   4091c:	1001fa26 	beq	r2,zero,41108 <___vfprintf_internal_r+0xb78>
   40920:	0027883a 	mov	r19,zero
   40924:	002d883a 	mov	r22,zero
   40928:	00021906 	br	41190 <___vfprintf_internal_r+0xc00>
   4092c:	d9002d17 	ldw	r4,180(sp)
   40930:	b80b883a 	mov	r5,r23
   40934:	00429440 	call	42944 <__swsetup_r>
   40938:	1005dc1e 	bne	r2,zero,420ac <___vfprintf_internal_r+0x1b1c>
   4093c:	b880030b 	ldhu	r2,12(r23)
   40940:	00c00284 	movi	r3,10
   40944:	1080068c 	andi	r2,r2,26
   40948:	10ff3a1e 	bne	r2,r3,40634 <__alt_data_end+0xfffce634>
   4094c:	b880038f 	ldh	r2,14(r23)
   40950:	103f3816 	blt	r2,zero,40634 <__alt_data_end+0xfffce634>
   40954:	d9c02e17 	ldw	r7,184(sp)
   40958:	d9002d17 	ldw	r4,180(sp)
   4095c:	a80d883a 	mov	r6,r21
   40960:	b80b883a 	mov	r5,r23
   40964:	00428880 	call	42888 <__sbprintf>
   40968:	00001106 	br	409b0 <___vfprintf_internal_r+0x420>
   4096c:	d9002d17 	ldw	r4,180(sp)
   40970:	d9801e04 	addi	r6,sp,120
   40974:	b80b883a 	mov	r5,r23
   40978:	0047d700 	call	47d70 <__sprint_r>
   4097c:	1000081e 	bne	r2,zero,409a0 <___vfprintf_internal_r+0x410>
   40980:	da000404 	addi	r8,sp,16
   40984:	003f5106 	br	406cc <__alt_data_end+0xfffce6cc>
   40988:	d8802017 	ldw	r2,128(sp)
   4098c:	10000426 	beq	r2,zero,409a0 <___vfprintf_internal_r+0x410>
   40990:	d9002d17 	ldw	r4,180(sp)
   40994:	d9801e04 	addi	r6,sp,120
   40998:	b80b883a 	mov	r5,r23
   4099c:	0047d700 	call	47d70 <__sprint_r>
   409a0:	b880030b 	ldhu	r2,12(r23)
   409a4:	1080100c 	andi	r2,r2,64
   409a8:	1005c01e 	bne	r2,zero,420ac <___vfprintf_internal_r+0x1b1c>
   409ac:	d8802f17 	ldw	r2,188(sp)
   409b0:	dfc04717 	ldw	ra,284(sp)
   409b4:	df004617 	ldw	fp,280(sp)
   409b8:	ddc04517 	ldw	r23,276(sp)
   409bc:	dd804417 	ldw	r22,272(sp)
   409c0:	dd404317 	ldw	r21,268(sp)
   409c4:	dd004217 	ldw	r20,264(sp)
   409c8:	dcc04117 	ldw	r19,260(sp)
   409cc:	dc804017 	ldw	r18,256(sp)
   409d0:	dc403f17 	ldw	r17,252(sp)
   409d4:	dc003e17 	ldw	r16,248(sp)
   409d8:	dec04804 	addi	sp,sp,288
   409dc:	f800283a 	ret
   409e0:	d9002d17 	ldw	r4,180(sp)
   409e4:	00449500 	call	44950 <__sinit>
   409e8:	003f0206 	br	405f4 <__alt_data_end+0xfffce5f4>
   409ec:	d9002e17 	ldw	r4,184(sp)
   409f0:	d9402e17 	ldw	r5,184(sp)
   409f4:	21000017 	ldw	r4,0(r4)
   409f8:	28800104 	addi	r2,r5,4
   409fc:	d9003115 	stw	r4,196(sp)
   40a00:	203fa716 	blt	r4,zero,408a0 <__alt_data_end+0xfffce8a0>
   40a04:	d8802e15 	stw	r2,184(sp)
   40a08:	ac400007 	ldb	r17,0(r21)
   40a0c:	003f4206 	br	40718 <__alt_data_end+0xfffce718>
   40a10:	ac400007 	ldb	r17,0(r21)
   40a14:	01000a84 	movi	r4,42
   40a18:	a8c00044 	addi	r3,r21,1
   40a1c:	89075826 	beq	r17,r4,42780 <___vfprintf_internal_r+0x21f0>
   40a20:	8cbff404 	addi	r18,r17,-48
   40a24:	b486ae36 	bltu	r22,r18,424e0 <___vfprintf_internal_r+0x1f50>
   40a28:	0009883a 	mov	r4,zero
   40a2c:	1823883a 	mov	r17,r3
   40a30:	01400284 	movi	r5,10
   40a34:	004aa2c0 	call	4aa2c <__mulsi3>
   40a38:	88c00007 	ldb	r3,0(r17)
   40a3c:	1489883a 	add	r4,r2,r18
   40a40:	8d400044 	addi	r21,r17,1
   40a44:	1cbff404 	addi	r18,r3,-48
   40a48:	a823883a 	mov	r17,r21
   40a4c:	b4bff82e 	bgeu	r22,r18,40a30 <__alt_data_end+0xfffcea30>
   40a50:	1823883a 	mov	r17,r3
   40a54:	2005f616 	blt	r4,zero,42230 <___vfprintf_internal_r+0x1ca0>
   40a58:	d9002a15 	stw	r4,168(sp)
   40a5c:	003f2f06 	br	4071c <__alt_data_end+0xfffce71c>
   40a60:	84002014 	ori	r16,r16,128
   40a64:	ac400007 	ldb	r17,0(r21)
   40a68:	003f2b06 	br	40718 <__alt_data_end+0xfffce718>
   40a6c:	8cbff404 	addi	r18,r17,-48
   40a70:	d8003115 	stw	zero,196(sp)
   40a74:	0009883a 	mov	r4,zero
   40a78:	a823883a 	mov	r17,r21
   40a7c:	01400284 	movi	r5,10
   40a80:	004aa2c0 	call	4aa2c <__mulsi3>
   40a84:	88c00007 	ldb	r3,0(r17)
   40a88:	9089883a 	add	r4,r18,r2
   40a8c:	ad400044 	addi	r21,r21,1
   40a90:	1cbff404 	addi	r18,r3,-48
   40a94:	a823883a 	mov	r17,r21
   40a98:	b4bff82e 	bgeu	r22,r18,40a7c <__alt_data_end+0xfffcea7c>
   40a9c:	1823883a 	mov	r17,r3
   40aa0:	d9003115 	stw	r4,196(sp)
   40aa4:	003f1d06 	br	4071c <__alt_data_end+0xfffce71c>
   40aa8:	8025883a 	mov	r18,r16
   40aac:	dc002903 	ldbu	r16,164(sp)
   40ab0:	e011883a 	mov	r8,fp
   40ab4:	84003fcc 	andi	r16,r16,255
   40ab8:	8007531e 	bne	r16,zero,42808 <___vfprintf_internal_r+0x2278>
   40abc:	94800414 	ori	r18,r18,16
   40ac0:	9080080c 	andi	r2,r18,32
   40ac4:	1003a326 	beq	r2,zero,41954 <___vfprintf_internal_r+0x13c4>
   40ac8:	d9002e17 	ldw	r4,184(sp)
   40acc:	20800117 	ldw	r2,4(r4)
   40ad0:	24c00017 	ldw	r19,0(r4)
   40ad4:	21000204 	addi	r4,r4,8
   40ad8:	d9002e15 	stw	r4,184(sp)
   40adc:	102d883a 	mov	r22,r2
   40ae0:	10047316 	blt	r2,zero,41cb0 <___vfprintf_internal_r+0x1720>
   40ae4:	d9002a17 	ldw	r4,168(sp)
   40ae8:	df002783 	ldbu	fp,158(sp)
   40aec:	2003e416 	blt	r4,zero,41a80 <___vfprintf_internal_r+0x14f0>
   40af0:	00ffdfc4 	movi	r3,-129
   40af4:	9d84b03a 	or	r2,r19,r22
   40af8:	90e4703a 	and	r18,r18,r3
   40afc:	10018026 	beq	r2,zero,41100 <___vfprintf_internal_r+0xb70>
   40b00:	b003ab26 	beq	r22,zero,419b0 <___vfprintf_internal_r+0x1420>
   40b04:	dc402915 	stw	r17,164(sp)
   40b08:	dc001e04 	addi	r16,sp,120
   40b0c:	b023883a 	mov	r17,r22
   40b10:	402d883a 	mov	r22,r8
   40b14:	9809883a 	mov	r4,r19
   40b18:	880b883a 	mov	r5,r17
   40b1c:	01800284 	movi	r6,10
   40b20:	000f883a 	mov	r7,zero
   40b24:	004a2b40 	call	4a2b4 <__umoddi3>
   40b28:	10800c04 	addi	r2,r2,48
   40b2c:	843fffc4 	addi	r16,r16,-1
   40b30:	9809883a 	mov	r4,r19
   40b34:	880b883a 	mov	r5,r17
   40b38:	80800005 	stb	r2,0(r16)
   40b3c:	01800284 	movi	r6,10
   40b40:	000f883a 	mov	r7,zero
   40b44:	0049cb80 	call	49cb8 <__udivdi3>
   40b48:	1027883a 	mov	r19,r2
   40b4c:	10c4b03a 	or	r2,r2,r3
   40b50:	1823883a 	mov	r17,r3
   40b54:	103fef1e 	bne	r2,zero,40b14 <__alt_data_end+0xfffceb14>
   40b58:	d8c02817 	ldw	r3,160(sp)
   40b5c:	dc402917 	ldw	r17,164(sp)
   40b60:	b011883a 	mov	r8,r22
   40b64:	1c07c83a 	sub	r3,r3,r16
   40b68:	d8c02b15 	stw	r3,172(sp)
   40b6c:	00005f06 	br	40cec <___vfprintf_internal_r+0x75c>
   40b70:	8025883a 	mov	r18,r16
   40b74:	dc002903 	ldbu	r16,164(sp)
   40b78:	e011883a 	mov	r8,fp
   40b7c:	84003fcc 	andi	r16,r16,255
   40b80:	80071e1e 	bne	r16,zero,427fc <___vfprintf_internal_r+0x226c>
   40b84:	9080020c 	andi	r2,r18,8
   40b88:	1004af26 	beq	r2,zero,41e48 <___vfprintf_internal_r+0x18b8>
   40b8c:	d9002e17 	ldw	r4,184(sp)
   40b90:	d9402e17 	ldw	r5,184(sp)
   40b94:	d8802e17 	ldw	r2,184(sp)
   40b98:	21000017 	ldw	r4,0(r4)
   40b9c:	29400117 	ldw	r5,4(r5)
   40ba0:	10800204 	addi	r2,r2,8
   40ba4:	d9003615 	stw	r4,216(sp)
   40ba8:	d9403815 	stw	r5,224(sp)
   40bac:	d8802e15 	stw	r2,184(sp)
   40bb0:	d9003617 	ldw	r4,216(sp)
   40bb4:	d9403817 	ldw	r5,224(sp)
   40bb8:	da003d15 	stw	r8,244(sp)
   40bbc:	04000044 	movi	r16,1
   40bc0:	00479940 	call	47994 <__fpclassifyd>
   40bc4:	da003d17 	ldw	r8,244(sp)
   40bc8:	1404441e 	bne	r2,r16,41cdc <___vfprintf_internal_r+0x174c>
   40bcc:	d9003617 	ldw	r4,216(sp)
   40bd0:	d9403817 	ldw	r5,224(sp)
   40bd4:	000d883a 	mov	r6,zero
   40bd8:	000f883a 	mov	r7,zero
   40bdc:	004be340 	call	4be34 <__ledf2>
   40be0:	da003d17 	ldw	r8,244(sp)
   40be4:	1005e316 	blt	r2,zero,42374 <___vfprintf_internal_r+0x1de4>
   40be8:	df002783 	ldbu	fp,158(sp)
   40bec:	008011c4 	movi	r2,71
   40bf0:	1445580e 	bge	r2,r17,42154 <___vfprintf_internal_r+0x1bc4>
   40bf4:	04000174 	movhi	r16,5
   40bf8:	843ed604 	addi	r16,r16,-1192
   40bfc:	00c000c4 	movi	r3,3
   40c00:	00bfdfc4 	movi	r2,-129
   40c04:	d8c02915 	stw	r3,164(sp)
   40c08:	90a4703a 	and	r18,r18,r2
   40c0c:	d8c02b15 	stw	r3,172(sp)
   40c10:	d8002a15 	stw	zero,168(sp)
   40c14:	d8003215 	stw	zero,200(sp)
   40c18:	00003a06 	br	40d04 <___vfprintf_internal_r+0x774>
   40c1c:	84000214 	ori	r16,r16,8
   40c20:	ac400007 	ldb	r17,0(r21)
   40c24:	003ebc06 	br	40718 <__alt_data_end+0xfffce718>
   40c28:	8025883a 	mov	r18,r16
   40c2c:	dc002903 	ldbu	r16,164(sp)
   40c30:	e011883a 	mov	r8,fp
   40c34:	84003fcc 	andi	r16,r16,255
   40c38:	8007001e 	bne	r16,zero,4283c <___vfprintf_internal_r+0x22ac>
   40c3c:	94800414 	ori	r18,r18,16
   40c40:	9080080c 	andi	r2,r18,32
   40c44:	1002fa26 	beq	r2,zero,41830 <___vfprintf_internal_r+0x12a0>
   40c48:	d9002e17 	ldw	r4,184(sp)
   40c4c:	d9402a17 	ldw	r5,168(sp)
   40c50:	d8002785 	stb	zero,158(sp)
   40c54:	20800204 	addi	r2,r4,8
   40c58:	24c00017 	ldw	r19,0(r4)
   40c5c:	25800117 	ldw	r22,4(r4)
   40c60:	2804b116 	blt	r5,zero,41f28 <___vfprintf_internal_r+0x1998>
   40c64:	013fdfc4 	movi	r4,-129
   40c68:	9d86b03a 	or	r3,r19,r22
   40c6c:	d8802e15 	stw	r2,184(sp)
   40c70:	9124703a 	and	r18,r18,r4
   40c74:	1802fb1e 	bne	r3,zero,41864 <___vfprintf_internal_r+0x12d4>
   40c78:	d8c02a17 	ldw	r3,168(sp)
   40c7c:	0039883a 	mov	fp,zero
   40c80:	1805e526 	beq	r3,zero,42418 <___vfprintf_internal_r+0x1e88>
   40c84:	0027883a 	mov	r19,zero
   40c88:	002d883a 	mov	r22,zero
   40c8c:	dc001e04 	addi	r16,sp,120
   40c90:	9806d0fa 	srli	r3,r19,3
   40c94:	b008977a 	slli	r4,r22,29
   40c98:	b02cd0fa 	srli	r22,r22,3
   40c9c:	9cc001cc 	andi	r19,r19,7
   40ca0:	98800c04 	addi	r2,r19,48
   40ca4:	843fffc4 	addi	r16,r16,-1
   40ca8:	20e6b03a 	or	r19,r4,r3
   40cac:	80800005 	stb	r2,0(r16)
   40cb0:	9d86b03a 	or	r3,r19,r22
   40cb4:	183ff61e 	bne	r3,zero,40c90 <__alt_data_end+0xfffcec90>
   40cb8:	90c0004c 	andi	r3,r18,1
   40cbc:	18014126 	beq	r3,zero,411c4 <___vfprintf_internal_r+0xc34>
   40cc0:	10803fcc 	andi	r2,r2,255
   40cc4:	1080201c 	xori	r2,r2,128
   40cc8:	10bfe004 	addi	r2,r2,-128
   40ccc:	00c00c04 	movi	r3,48
   40cd0:	10c13c26 	beq	r2,r3,411c4 <___vfprintf_internal_r+0xc34>
   40cd4:	80ffffc5 	stb	r3,-1(r16)
   40cd8:	d8c02817 	ldw	r3,160(sp)
   40cdc:	80bfffc4 	addi	r2,r16,-1
   40ce0:	1021883a 	mov	r16,r2
   40ce4:	1887c83a 	sub	r3,r3,r2
   40ce8:	d8c02b15 	stw	r3,172(sp)
   40cec:	d8802b17 	ldw	r2,172(sp)
   40cf0:	d9002a17 	ldw	r4,168(sp)
   40cf4:	1100010e 	bge	r2,r4,40cfc <___vfprintf_internal_r+0x76c>
   40cf8:	2005883a 	mov	r2,r4
   40cfc:	d8802915 	stw	r2,164(sp)
   40d00:	d8003215 	stw	zero,200(sp)
   40d04:	e7003fcc 	andi	fp,fp,255
   40d08:	e700201c 	xori	fp,fp,128
   40d0c:	e73fe004 	addi	fp,fp,-128
   40d10:	e0000326 	beq	fp,zero,40d20 <___vfprintf_internal_r+0x790>
   40d14:	d8c02917 	ldw	r3,164(sp)
   40d18:	18c00044 	addi	r3,r3,1
   40d1c:	d8c02915 	stw	r3,164(sp)
   40d20:	90c0008c 	andi	r3,r18,2
   40d24:	d8c02c15 	stw	r3,176(sp)
   40d28:	18000326 	beq	r3,zero,40d38 <___vfprintf_internal_r+0x7a8>
   40d2c:	d8c02917 	ldw	r3,164(sp)
   40d30:	18c00084 	addi	r3,r3,2
   40d34:	d8c02915 	stw	r3,164(sp)
   40d38:	90c0210c 	andi	r3,r18,132
   40d3c:	d8c03015 	stw	r3,192(sp)
   40d40:	1801c51e 	bne	r3,zero,41458 <___vfprintf_internal_r+0xec8>
   40d44:	d9003117 	ldw	r4,196(sp)
   40d48:	d8c02917 	ldw	r3,164(sp)
   40d4c:	20e7c83a 	sub	r19,r4,r3
   40d50:	04c1c10e 	bge	zero,r19,41458 <___vfprintf_internal_r+0xec8>
   40d54:	02400404 	movi	r9,16
   40d58:	d8c02017 	ldw	r3,128(sp)
   40d5c:	d8801f17 	ldw	r2,124(sp)
   40d60:	4cc52f0e 	bge	r9,r19,42220 <___vfprintf_internal_r+0x1c90>
   40d64:	01400174 	movhi	r5,5
   40d68:	297ee984 	addi	r5,r5,-1114
   40d6c:	dc403b15 	stw	r17,236(sp)
   40d70:	d9403515 	stw	r5,212(sp)
   40d74:	9823883a 	mov	r17,r19
   40d78:	482d883a 	mov	r22,r9
   40d7c:	9027883a 	mov	r19,r18
   40d80:	070001c4 	movi	fp,7
   40d84:	8025883a 	mov	r18,r16
   40d88:	dc002d17 	ldw	r16,180(sp)
   40d8c:	00000306 	br	40d9c <___vfprintf_internal_r+0x80c>
   40d90:	8c7ffc04 	addi	r17,r17,-16
   40d94:	42000204 	addi	r8,r8,8
   40d98:	b440130e 	bge	r22,r17,40de8 <___vfprintf_internal_r+0x858>
   40d9c:	01000174 	movhi	r4,5
   40da0:	18c00404 	addi	r3,r3,16
   40da4:	10800044 	addi	r2,r2,1
   40da8:	213ee984 	addi	r4,r4,-1114
   40dac:	41000015 	stw	r4,0(r8)
   40db0:	45800115 	stw	r22,4(r8)
   40db4:	d8c02015 	stw	r3,128(sp)
   40db8:	d8801f15 	stw	r2,124(sp)
   40dbc:	e0bff40e 	bge	fp,r2,40d90 <__alt_data_end+0xfffced90>
   40dc0:	d9801e04 	addi	r6,sp,120
   40dc4:	b80b883a 	mov	r5,r23
   40dc8:	8009883a 	mov	r4,r16
   40dcc:	0047d700 	call	47d70 <__sprint_r>
   40dd0:	103ef31e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   40dd4:	8c7ffc04 	addi	r17,r17,-16
   40dd8:	d8c02017 	ldw	r3,128(sp)
   40ddc:	d8801f17 	ldw	r2,124(sp)
   40de0:	da000404 	addi	r8,sp,16
   40de4:	b47fed16 	blt	r22,r17,40d9c <__alt_data_end+0xfffced9c>
   40de8:	9021883a 	mov	r16,r18
   40dec:	9825883a 	mov	r18,r19
   40df0:	8827883a 	mov	r19,r17
   40df4:	dc403b17 	ldw	r17,236(sp)
   40df8:	d9403517 	ldw	r5,212(sp)
   40dfc:	98c7883a 	add	r3,r19,r3
   40e00:	10800044 	addi	r2,r2,1
   40e04:	41400015 	stw	r5,0(r8)
   40e08:	44c00115 	stw	r19,4(r8)
   40e0c:	d8c02015 	stw	r3,128(sp)
   40e10:	d8801f15 	stw	r2,124(sp)
   40e14:	010001c4 	movi	r4,7
   40e18:	2082c516 	blt	r4,r2,41930 <___vfprintf_internal_r+0x13a0>
   40e1c:	df002787 	ldb	fp,158(sp)
   40e20:	42000204 	addi	r8,r8,8
   40e24:	e0000c26 	beq	fp,zero,40e58 <___vfprintf_internal_r+0x8c8>
   40e28:	d8801f17 	ldw	r2,124(sp)
   40e2c:	d9002784 	addi	r4,sp,158
   40e30:	18c00044 	addi	r3,r3,1
   40e34:	10800044 	addi	r2,r2,1
   40e38:	41000015 	stw	r4,0(r8)
   40e3c:	01000044 	movi	r4,1
   40e40:	41000115 	stw	r4,4(r8)
   40e44:	d8c02015 	stw	r3,128(sp)
   40e48:	d8801f15 	stw	r2,124(sp)
   40e4c:	010001c4 	movi	r4,7
   40e50:	20825e16 	blt	r4,r2,417cc <___vfprintf_internal_r+0x123c>
   40e54:	42000204 	addi	r8,r8,8
   40e58:	d8802c17 	ldw	r2,176(sp)
   40e5c:	10000c26 	beq	r2,zero,40e90 <___vfprintf_internal_r+0x900>
   40e60:	d8801f17 	ldw	r2,124(sp)
   40e64:	d9002704 	addi	r4,sp,156
   40e68:	18c00084 	addi	r3,r3,2
   40e6c:	10800044 	addi	r2,r2,1
   40e70:	41000015 	stw	r4,0(r8)
   40e74:	01000084 	movi	r4,2
   40e78:	41000115 	stw	r4,4(r8)
   40e7c:	d8c02015 	stw	r3,128(sp)
   40e80:	d8801f15 	stw	r2,124(sp)
   40e84:	010001c4 	movi	r4,7
   40e88:	20825816 	blt	r4,r2,417ec <___vfprintf_internal_r+0x125c>
   40e8c:	42000204 	addi	r8,r8,8
   40e90:	d9003017 	ldw	r4,192(sp)
   40e94:	00802004 	movi	r2,128
   40e98:	2081bb26 	beq	r4,r2,41588 <___vfprintf_internal_r+0xff8>
   40e9c:	d9402a17 	ldw	r5,168(sp)
   40ea0:	d8802b17 	ldw	r2,172(sp)
   40ea4:	28adc83a 	sub	r22,r5,r2
   40ea8:	0580310e 	bge	zero,r22,40f70 <___vfprintf_internal_r+0x9e0>
   40eac:	07000404 	movi	fp,16
   40eb0:	d8801f17 	ldw	r2,124(sp)
   40eb4:	e584360e 	bge	fp,r22,41f90 <___vfprintf_internal_r+0x1a00>
   40eb8:	01400174 	movhi	r5,5
   40ebc:	297ee584 	addi	r5,r5,-1130
   40ec0:	dc402a15 	stw	r17,168(sp)
   40ec4:	d9402c15 	stw	r5,176(sp)
   40ec8:	b023883a 	mov	r17,r22
   40ecc:	04c001c4 	movi	r19,7
   40ed0:	a82d883a 	mov	r22,r21
   40ed4:	902b883a 	mov	r21,r18
   40ed8:	8025883a 	mov	r18,r16
   40edc:	dc002d17 	ldw	r16,180(sp)
   40ee0:	00000306 	br	40ef0 <___vfprintf_internal_r+0x960>
   40ee4:	8c7ffc04 	addi	r17,r17,-16
   40ee8:	42000204 	addi	r8,r8,8
   40eec:	e440110e 	bge	fp,r17,40f34 <___vfprintf_internal_r+0x9a4>
   40ef0:	18c00404 	addi	r3,r3,16
   40ef4:	10800044 	addi	r2,r2,1
   40ef8:	45000015 	stw	r20,0(r8)
   40efc:	47000115 	stw	fp,4(r8)
   40f00:	d8c02015 	stw	r3,128(sp)
   40f04:	d8801f15 	stw	r2,124(sp)
   40f08:	98bff60e 	bge	r19,r2,40ee4 <__alt_data_end+0xfffceee4>
   40f0c:	d9801e04 	addi	r6,sp,120
   40f10:	b80b883a 	mov	r5,r23
   40f14:	8009883a 	mov	r4,r16
   40f18:	0047d700 	call	47d70 <__sprint_r>
   40f1c:	103ea01e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   40f20:	8c7ffc04 	addi	r17,r17,-16
   40f24:	d8c02017 	ldw	r3,128(sp)
   40f28:	d8801f17 	ldw	r2,124(sp)
   40f2c:	da000404 	addi	r8,sp,16
   40f30:	e47fef16 	blt	fp,r17,40ef0 <__alt_data_end+0xfffceef0>
   40f34:	9021883a 	mov	r16,r18
   40f38:	a825883a 	mov	r18,r21
   40f3c:	b02b883a 	mov	r21,r22
   40f40:	882d883a 	mov	r22,r17
   40f44:	dc402a17 	ldw	r17,168(sp)
   40f48:	d9002c17 	ldw	r4,176(sp)
   40f4c:	1d87883a 	add	r3,r3,r22
   40f50:	10800044 	addi	r2,r2,1
   40f54:	41000015 	stw	r4,0(r8)
   40f58:	45800115 	stw	r22,4(r8)
   40f5c:	d8c02015 	stw	r3,128(sp)
   40f60:	d8801f15 	stw	r2,124(sp)
   40f64:	010001c4 	movi	r4,7
   40f68:	20821016 	blt	r4,r2,417ac <___vfprintf_internal_r+0x121c>
   40f6c:	42000204 	addi	r8,r8,8
   40f70:	9080400c 	andi	r2,r18,256
   40f74:	10013a1e 	bne	r2,zero,41460 <___vfprintf_internal_r+0xed0>
   40f78:	d9402b17 	ldw	r5,172(sp)
   40f7c:	d8801f17 	ldw	r2,124(sp)
   40f80:	44000015 	stw	r16,0(r8)
   40f84:	1947883a 	add	r3,r3,r5
   40f88:	10800044 	addi	r2,r2,1
   40f8c:	41400115 	stw	r5,4(r8)
   40f90:	d8c02015 	stw	r3,128(sp)
   40f94:	d8801f15 	stw	r2,124(sp)
   40f98:	010001c4 	movi	r4,7
   40f9c:	2081f516 	blt	r4,r2,41774 <___vfprintf_internal_r+0x11e4>
   40fa0:	42000204 	addi	r8,r8,8
   40fa4:	9480010c 	andi	r18,r18,4
   40fa8:	90003226 	beq	r18,zero,41074 <___vfprintf_internal_r+0xae4>
   40fac:	d9403117 	ldw	r5,196(sp)
   40fb0:	d8802917 	ldw	r2,164(sp)
   40fb4:	28a1c83a 	sub	r16,r5,r2
   40fb8:	04002e0e 	bge	zero,r16,41074 <___vfprintf_internal_r+0xae4>
   40fbc:	04400404 	movi	r17,16
   40fc0:	d8801f17 	ldw	r2,124(sp)
   40fc4:	8c04c40e 	bge	r17,r16,422d8 <___vfprintf_internal_r+0x1d48>
   40fc8:	01400174 	movhi	r5,5
   40fcc:	297ee984 	addi	r5,r5,-1114
   40fd0:	d9403515 	stw	r5,212(sp)
   40fd4:	048001c4 	movi	r18,7
   40fd8:	dcc02d17 	ldw	r19,180(sp)
   40fdc:	00000306 	br	40fec <___vfprintf_internal_r+0xa5c>
   40fe0:	843ffc04 	addi	r16,r16,-16
   40fe4:	42000204 	addi	r8,r8,8
   40fe8:	8c00130e 	bge	r17,r16,41038 <___vfprintf_internal_r+0xaa8>
   40fec:	01000174 	movhi	r4,5
   40ff0:	18c00404 	addi	r3,r3,16
   40ff4:	10800044 	addi	r2,r2,1
   40ff8:	213ee984 	addi	r4,r4,-1114
   40ffc:	41000015 	stw	r4,0(r8)
   41000:	44400115 	stw	r17,4(r8)
   41004:	d8c02015 	stw	r3,128(sp)
   41008:	d8801f15 	stw	r2,124(sp)
   4100c:	90bff40e 	bge	r18,r2,40fe0 <__alt_data_end+0xfffcefe0>
   41010:	d9801e04 	addi	r6,sp,120
   41014:	b80b883a 	mov	r5,r23
   41018:	9809883a 	mov	r4,r19
   4101c:	0047d700 	call	47d70 <__sprint_r>
   41020:	103e5f1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41024:	843ffc04 	addi	r16,r16,-16
   41028:	d8c02017 	ldw	r3,128(sp)
   4102c:	d8801f17 	ldw	r2,124(sp)
   41030:	da000404 	addi	r8,sp,16
   41034:	8c3fed16 	blt	r17,r16,40fec <__alt_data_end+0xfffcefec>
   41038:	d9403517 	ldw	r5,212(sp)
   4103c:	1c07883a 	add	r3,r3,r16
   41040:	10800044 	addi	r2,r2,1
   41044:	41400015 	stw	r5,0(r8)
   41048:	44000115 	stw	r16,4(r8)
   4104c:	d8c02015 	stw	r3,128(sp)
   41050:	d8801f15 	stw	r2,124(sp)
   41054:	010001c4 	movi	r4,7
   41058:	2080060e 	bge	r4,r2,41074 <___vfprintf_internal_r+0xae4>
   4105c:	d9002d17 	ldw	r4,180(sp)
   41060:	d9801e04 	addi	r6,sp,120
   41064:	b80b883a 	mov	r5,r23
   41068:	0047d700 	call	47d70 <__sprint_r>
   4106c:	103e4c1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41070:	d8c02017 	ldw	r3,128(sp)
   41074:	d8803117 	ldw	r2,196(sp)
   41078:	d9002917 	ldw	r4,164(sp)
   4107c:	1100010e 	bge	r2,r4,41084 <___vfprintf_internal_r+0xaf4>
   41080:	2005883a 	mov	r2,r4
   41084:	d9402f17 	ldw	r5,188(sp)
   41088:	288b883a 	add	r5,r5,r2
   4108c:	d9402f15 	stw	r5,188(sp)
   41090:	1801c01e 	bne	r3,zero,41794 <___vfprintf_internal_r+0x1204>
   41094:	a8800007 	ldb	r2,0(r21)
   41098:	d8001f15 	stw	zero,124(sp)
   4109c:	da000404 	addi	r8,sp,16
   410a0:	103d751e 	bne	r2,zero,40678 <__alt_data_end+0xfffce678>
   410a4:	a823883a 	mov	r17,r21
   410a8:	003d8b06 	br	406d8 <__alt_data_end+0xfffce6d8>
   410ac:	8025883a 	mov	r18,r16
   410b0:	dc002903 	ldbu	r16,164(sp)
   410b4:	e011883a 	mov	r8,fp
   410b8:	84003fcc 	andi	r16,r16,255
   410bc:	8005e51e 	bne	r16,zero,42854 <___vfprintf_internal_r+0x22c4>
   410c0:	94800414 	ori	r18,r18,16
   410c4:	9080080c 	andi	r2,r18,32
   410c8:	10022b26 	beq	r2,zero,41978 <___vfprintf_internal_r+0x13e8>
   410cc:	d9002e17 	ldw	r4,184(sp)
   410d0:	d9402a17 	ldw	r5,168(sp)
   410d4:	d8002785 	stb	zero,158(sp)
   410d8:	20c00204 	addi	r3,r4,8
   410dc:	24c00017 	ldw	r19,0(r4)
   410e0:	25800117 	ldw	r22,4(r4)
   410e4:	28042e16 	blt	r5,zero,421a0 <___vfprintf_internal_r+0x1c10>
   410e8:	013fdfc4 	movi	r4,-129
   410ec:	9d84b03a 	or	r2,r19,r22
   410f0:	d8c02e15 	stw	r3,184(sp)
   410f4:	9124703a 	and	r18,r18,r4
   410f8:	0039883a 	mov	fp,zero
   410fc:	103e801e 	bne	r2,zero,40b00 <__alt_data_end+0xfffceb00>
   41100:	d9002a17 	ldw	r4,168(sp)
   41104:	2002e01e 	bne	r4,zero,41c88 <___vfprintf_internal_r+0x16f8>
   41108:	d8002a15 	stw	zero,168(sp)
   4110c:	d8002b15 	stw	zero,172(sp)
   41110:	dc001e04 	addi	r16,sp,120
   41114:	003ef506 	br	40cec <__alt_data_end+0xfffcecec>
   41118:	8025883a 	mov	r18,r16
   4111c:	dc002903 	ldbu	r16,164(sp)
   41120:	e011883a 	mov	r8,fp
   41124:	84003fcc 	andi	r16,r16,255
   41128:	8005ba1e 	bne	r16,zero,42814 <___vfprintf_internal_r+0x2284>
   4112c:	01000174 	movhi	r4,5
   41130:	213ed904 	addi	r4,r4,-1180
   41134:	d9003915 	stw	r4,228(sp)
   41138:	9080080c 	andi	r2,r18,32
   4113c:	10006126 	beq	r2,zero,412c4 <___vfprintf_internal_r+0xd34>
   41140:	d9402e17 	ldw	r5,184(sp)
   41144:	2cc00017 	ldw	r19,0(r5)
   41148:	2d800117 	ldw	r22,4(r5)
   4114c:	29400204 	addi	r5,r5,8
   41150:	d9402e15 	stw	r5,184(sp)
   41154:	9080004c 	andi	r2,r18,1
   41158:	1001ac26 	beq	r2,zero,4180c <___vfprintf_internal_r+0x127c>
   4115c:	9d84b03a 	or	r2,r19,r22
   41160:	10038526 	beq	r2,zero,41f78 <___vfprintf_internal_r+0x19e8>
   41164:	d8c02a17 	ldw	r3,168(sp)
   41168:	00800c04 	movi	r2,48
   4116c:	d8802705 	stb	r2,156(sp)
   41170:	dc402745 	stb	r17,157(sp)
   41174:	d8002785 	stb	zero,158(sp)
   41178:	90800094 	ori	r2,r18,2
   4117c:	18047916 	blt	r3,zero,42364 <___vfprintf_internal_r+0x1dd4>
   41180:	00bfdfc4 	movi	r2,-129
   41184:	90a4703a 	and	r18,r18,r2
   41188:	94800094 	ori	r18,r18,2
   4118c:	0039883a 	mov	fp,zero
   41190:	d9003917 	ldw	r4,228(sp)
   41194:	dc001e04 	addi	r16,sp,120
   41198:	988003cc 	andi	r2,r19,15
   4119c:	b006973a 	slli	r3,r22,28
   411a0:	2085883a 	add	r2,r4,r2
   411a4:	9826d13a 	srli	r19,r19,4
   411a8:	10800003 	ldbu	r2,0(r2)
   411ac:	b02cd13a 	srli	r22,r22,4
   411b0:	843fffc4 	addi	r16,r16,-1
   411b4:	1ce6b03a 	or	r19,r3,r19
   411b8:	80800005 	stb	r2,0(r16)
   411bc:	9d84b03a 	or	r2,r19,r22
   411c0:	103ff51e 	bne	r2,zero,41198 <__alt_data_end+0xfffcf198>
   411c4:	d8c02817 	ldw	r3,160(sp)
   411c8:	1c07c83a 	sub	r3,r3,r16
   411cc:	d8c02b15 	stw	r3,172(sp)
   411d0:	003ec606 	br	40cec <__alt_data_end+0xfffcecec>
   411d4:	8025883a 	mov	r18,r16
   411d8:	dc002903 	ldbu	r16,164(sp)
   411dc:	e011883a 	mov	r8,fp
   411e0:	84003fcc 	andi	r16,r16,255
   411e4:	803e9626 	beq	r16,zero,40c40 <__alt_data_end+0xfffcec40>
   411e8:	d8c02b03 	ldbu	r3,172(sp)
   411ec:	d8c02785 	stb	r3,158(sp)
   411f0:	003e9306 	br	40c40 <__alt_data_end+0xfffcec40>
   411f4:	00c00044 	movi	r3,1
   411f8:	d8c02905 	stb	r3,164(sp)
   411fc:	00c00ac4 	movi	r3,43
   41200:	d8c02b05 	stb	r3,172(sp)
   41204:	ac400007 	ldb	r17,0(r21)
   41208:	003d4306 	br	40718 <__alt_data_end+0xfffce718>
   4120c:	84000814 	ori	r16,r16,32
   41210:	ac400007 	ldb	r17,0(r21)
   41214:	003d4006 	br	40718 <__alt_data_end+0xfffce718>
   41218:	d8802e17 	ldw	r2,184(sp)
   4121c:	8025883a 	mov	r18,r16
   41220:	d8002785 	stb	zero,158(sp)
   41224:	14000017 	ldw	r16,0(r2)
   41228:	e011883a 	mov	r8,fp
   4122c:	14c00104 	addi	r19,r2,4
   41230:	80042d26 	beq	r16,zero,422e8 <___vfprintf_internal_r+0x1d58>
   41234:	d8c02a17 	ldw	r3,168(sp)
   41238:	1803e416 	blt	r3,zero,421cc <___vfprintf_internal_r+0x1c3c>
   4123c:	180d883a 	mov	r6,r3
   41240:	000b883a 	mov	r5,zero
   41244:	8009883a 	mov	r4,r16
   41248:	df003d15 	stw	fp,244(sp)
   4124c:	0045ec80 	call	45ec8 <memchr>
   41250:	da003d17 	ldw	r8,244(sp)
   41254:	10046826 	beq	r2,zero,423f8 <___vfprintf_internal_r+0x1e68>
   41258:	1405c83a 	sub	r2,r2,r16
   4125c:	d8802b15 	stw	r2,172(sp)
   41260:	1003e016 	blt	r2,zero,421e4 <___vfprintf_internal_r+0x1c54>
   41264:	df002783 	ldbu	fp,158(sp)
   41268:	d8802915 	stw	r2,164(sp)
   4126c:	dcc02e15 	stw	r19,184(sp)
   41270:	d8002a15 	stw	zero,168(sp)
   41274:	d8003215 	stw	zero,200(sp)
   41278:	003ea206 	br	40d04 <__alt_data_end+0xfffced04>
   4127c:	8025883a 	mov	r18,r16
   41280:	dc002903 	ldbu	r16,164(sp)
   41284:	e011883a 	mov	r8,fp
   41288:	84003fcc 	andi	r16,r16,255
   4128c:	803f8d26 	beq	r16,zero,410c4 <__alt_data_end+0xfffcf0c4>
   41290:	d8c02b03 	ldbu	r3,172(sp)
   41294:	d8c02785 	stb	r3,158(sp)
   41298:	003f8a06 	br	410c4 <__alt_data_end+0xfffcf0c4>
   4129c:	8025883a 	mov	r18,r16
   412a0:	dc002903 	ldbu	r16,164(sp)
   412a4:	e011883a 	mov	r8,fp
   412a8:	84003fcc 	andi	r16,r16,255
   412ac:	8005661e 	bne	r16,zero,42848 <___vfprintf_internal_r+0x22b8>
   412b0:	01000174 	movhi	r4,5
   412b4:	213ede04 	addi	r4,r4,-1160
   412b8:	d9003915 	stw	r4,228(sp)
   412bc:	9080080c 	andi	r2,r18,32
   412c0:	103f9f1e 	bne	r2,zero,41140 <__alt_data_end+0xfffcf140>
   412c4:	9080040c 	andi	r2,r18,16
   412c8:	1002eb26 	beq	r2,zero,41e78 <___vfprintf_internal_r+0x18e8>
   412cc:	d8802e17 	ldw	r2,184(sp)
   412d0:	002d883a 	mov	r22,zero
   412d4:	14c00017 	ldw	r19,0(r2)
   412d8:	10800104 	addi	r2,r2,4
   412dc:	d8802e15 	stw	r2,184(sp)
   412e0:	003f9c06 	br	41154 <__alt_data_end+0xfffcf154>
   412e4:	d8802b07 	ldb	r2,172(sp)
   412e8:	1002e11e 	bne	r2,zero,41e70 <___vfprintf_internal_r+0x18e0>
   412ec:	00c00044 	movi	r3,1
   412f0:	d8c02905 	stb	r3,164(sp)
   412f4:	00c00804 	movi	r3,32
   412f8:	d8c02b05 	stb	r3,172(sp)
   412fc:	ac400007 	ldb	r17,0(r21)
   41300:	003d0506 	br	40718 <__alt_data_end+0xfffce718>
   41304:	84000054 	ori	r16,r16,1
   41308:	ac400007 	ldb	r17,0(r21)
   4130c:	003d0206 	br	40718 <__alt_data_end+0xfffce718>
   41310:	8025883a 	mov	r18,r16
   41314:	dc002903 	ldbu	r16,164(sp)
   41318:	e011883a 	mov	r8,fp
   4131c:	84003fcc 	andi	r16,r16,255
   41320:	803de726 	beq	r16,zero,40ac0 <__alt_data_end+0xfffceac0>
   41324:	d8c02b03 	ldbu	r3,172(sp)
   41328:	d8c02785 	stb	r3,158(sp)
   4132c:	003de406 	br	40ac0 <__alt_data_end+0xfffceac0>
   41330:	84001014 	ori	r16,r16,64
   41334:	ac400007 	ldb	r17,0(r21)
   41338:	003cf706 	br	40718 <__alt_data_end+0xfffce718>
   4133c:	ac400007 	ldb	r17,0(r21)
   41340:	00801b04 	movi	r2,108
   41344:	88838f26 	beq	r17,r2,42184 <___vfprintf_internal_r+0x1bf4>
   41348:	84000414 	ori	r16,r16,16
   4134c:	003cf206 	br	40718 <__alt_data_end+0xfffce718>
   41350:	8025883a 	mov	r18,r16
   41354:	dc002903 	ldbu	r16,164(sp)
   41358:	e011883a 	mov	r8,fp
   4135c:	84003fcc 	andi	r16,r16,255
   41360:	80053f1e 	bne	r16,zero,42860 <___vfprintf_internal_r+0x22d0>
   41364:	9080080c 	andi	r2,r18,32
   41368:	1002d226 	beq	r2,zero,41eb4 <___vfprintf_internal_r+0x1924>
   4136c:	d9002e17 	ldw	r4,184(sp)
   41370:	d9402f17 	ldw	r5,188(sp)
   41374:	20800017 	ldw	r2,0(r4)
   41378:	2807d7fa 	srai	r3,r5,31
   4137c:	21000104 	addi	r4,r4,4
   41380:	d9002e15 	stw	r4,184(sp)
   41384:	11400015 	stw	r5,0(r2)
   41388:	10c00115 	stw	r3,4(r2)
   4138c:	003cb806 	br	40670 <__alt_data_end+0xfffce670>
   41390:	d8c02e17 	ldw	r3,184(sp)
   41394:	d9002e17 	ldw	r4,184(sp)
   41398:	8025883a 	mov	r18,r16
   4139c:	18800017 	ldw	r2,0(r3)
   413a0:	21000104 	addi	r4,r4,4
   413a4:	00c00044 	movi	r3,1
   413a8:	e011883a 	mov	r8,fp
   413ac:	d8c02915 	stw	r3,164(sp)
   413b0:	d8002785 	stb	zero,158(sp)
   413b4:	d8801405 	stb	r2,80(sp)
   413b8:	d9002e15 	stw	r4,184(sp)
   413bc:	d8c02b15 	stw	r3,172(sp)
   413c0:	d8002a15 	stw	zero,168(sp)
   413c4:	d8003215 	stw	zero,200(sp)
   413c8:	dc001404 	addi	r16,sp,80
   413cc:	0039883a 	mov	fp,zero
   413d0:	003e5306 	br	40d20 <__alt_data_end+0xfffced20>
   413d4:	01000174 	movhi	r4,5
   413d8:	213ede04 	addi	r4,r4,-1160
   413dc:	0039883a 	mov	fp,zero
   413e0:	d9003915 	stw	r4,228(sp)
   413e4:	04401e04 	movi	r17,120
   413e8:	003f6906 	br	41190 <__alt_data_end+0xfffcf190>
   413ec:	8025883a 	mov	r18,r16
   413f0:	dc002903 	ldbu	r16,164(sp)
   413f4:	e011883a 	mov	r8,fp
   413f8:	84003fcc 	andi	r16,r16,255
   413fc:	8005081e 	bne	r16,zero,42820 <___vfprintf_internal_r+0x2290>
   41400:	883d6126 	beq	r17,zero,40988 <__alt_data_end+0xfffce988>
   41404:	00c00044 	movi	r3,1
   41408:	d8c02915 	stw	r3,164(sp)
   4140c:	dc401405 	stb	r17,80(sp)
   41410:	d8002785 	stb	zero,158(sp)
   41414:	003fe906 	br	413bc <__alt_data_end+0xfffcf3bc>
   41418:	01400174 	movhi	r5,5
   4141c:	297ede04 	addi	r5,r5,-1160
   41420:	d9403915 	stw	r5,228(sp)
   41424:	d8c02e15 	stw	r3,184(sp)
   41428:	1025883a 	mov	r18,r2
   4142c:	04401e04 	movi	r17,120
   41430:	9d84b03a 	or	r2,r19,r22
   41434:	1000fc1e 	bne	r2,zero,41828 <___vfprintf_internal_r+0x1298>
   41438:	0039883a 	mov	fp,zero
   4143c:	00800084 	movi	r2,2
   41440:	10803fcc 	andi	r2,r2,255
   41444:	00c00044 	movi	r3,1
   41448:	10c20f26 	beq	r2,r3,41c88 <___vfprintf_internal_r+0x16f8>
   4144c:	00c00084 	movi	r3,2
   41450:	10fd3326 	beq	r2,r3,40920 <__alt_data_end+0xfffce920>
   41454:	003e0b06 	br	40c84 <__alt_data_end+0xfffcec84>
   41458:	d8c02017 	ldw	r3,128(sp)
   4145c:	003e7106 	br	40e24 <__alt_data_end+0xfffcee24>
   41460:	00801944 	movi	r2,101
   41464:	14407e0e 	bge	r2,r17,41660 <___vfprintf_internal_r+0x10d0>
   41468:	d9003617 	ldw	r4,216(sp)
   4146c:	d9403817 	ldw	r5,224(sp)
   41470:	000d883a 	mov	r6,zero
   41474:	000f883a 	mov	r7,zero
   41478:	d8c03c15 	stw	r3,240(sp)
   4147c:	da003d15 	stw	r8,244(sp)
   41480:	004bcd00 	call	4bcd0 <__eqdf2>
   41484:	d8c03c17 	ldw	r3,240(sp)
   41488:	da003d17 	ldw	r8,244(sp)
   4148c:	1000f71e 	bne	r2,zero,4186c <___vfprintf_internal_r+0x12dc>
   41490:	d8801f17 	ldw	r2,124(sp)
   41494:	01000174 	movhi	r4,5
   41498:	213ee504 	addi	r4,r4,-1132
   4149c:	18c00044 	addi	r3,r3,1
   414a0:	10800044 	addi	r2,r2,1
   414a4:	41000015 	stw	r4,0(r8)
   414a8:	01000044 	movi	r4,1
   414ac:	41000115 	stw	r4,4(r8)
   414b0:	d8c02015 	stw	r3,128(sp)
   414b4:	d8801f15 	stw	r2,124(sp)
   414b8:	010001c4 	movi	r4,7
   414bc:	2082b816 	blt	r4,r2,41fa0 <___vfprintf_internal_r+0x1a10>
   414c0:	42000204 	addi	r8,r8,8
   414c4:	d8802617 	ldw	r2,152(sp)
   414c8:	d9403317 	ldw	r5,204(sp)
   414cc:	11400216 	blt	r2,r5,414d8 <___vfprintf_internal_r+0xf48>
   414d0:	9080004c 	andi	r2,r18,1
   414d4:	103eb326 	beq	r2,zero,40fa4 <__alt_data_end+0xfffcefa4>
   414d8:	d8803717 	ldw	r2,220(sp)
   414dc:	d9003417 	ldw	r4,208(sp)
   414e0:	d9403717 	ldw	r5,220(sp)
   414e4:	1887883a 	add	r3,r3,r2
   414e8:	d8801f17 	ldw	r2,124(sp)
   414ec:	41000015 	stw	r4,0(r8)
   414f0:	41400115 	stw	r5,4(r8)
   414f4:	10800044 	addi	r2,r2,1
   414f8:	d8c02015 	stw	r3,128(sp)
   414fc:	d8801f15 	stw	r2,124(sp)
   41500:	010001c4 	movi	r4,7
   41504:	20832916 	blt	r4,r2,421ac <___vfprintf_internal_r+0x1c1c>
   41508:	42000204 	addi	r8,r8,8
   4150c:	d8803317 	ldw	r2,204(sp)
   41510:	143fffc4 	addi	r16,r2,-1
   41514:	043ea30e 	bge	zero,r16,40fa4 <__alt_data_end+0xfffcefa4>
   41518:	04400404 	movi	r17,16
   4151c:	d8801f17 	ldw	r2,124(sp)
   41520:	8c00880e 	bge	r17,r16,41744 <___vfprintf_internal_r+0x11b4>
   41524:	01400174 	movhi	r5,5
   41528:	297ee584 	addi	r5,r5,-1130
   4152c:	d9402c15 	stw	r5,176(sp)
   41530:	058001c4 	movi	r22,7
   41534:	dcc02d17 	ldw	r19,180(sp)
   41538:	00000306 	br	41548 <___vfprintf_internal_r+0xfb8>
   4153c:	42000204 	addi	r8,r8,8
   41540:	843ffc04 	addi	r16,r16,-16
   41544:	8c00820e 	bge	r17,r16,41750 <___vfprintf_internal_r+0x11c0>
   41548:	18c00404 	addi	r3,r3,16
   4154c:	10800044 	addi	r2,r2,1
   41550:	45000015 	stw	r20,0(r8)
   41554:	44400115 	stw	r17,4(r8)
   41558:	d8c02015 	stw	r3,128(sp)
   4155c:	d8801f15 	stw	r2,124(sp)
   41560:	b0bff60e 	bge	r22,r2,4153c <__alt_data_end+0xfffcf53c>
   41564:	d9801e04 	addi	r6,sp,120
   41568:	b80b883a 	mov	r5,r23
   4156c:	9809883a 	mov	r4,r19
   41570:	0047d700 	call	47d70 <__sprint_r>
   41574:	103d0a1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41578:	d8c02017 	ldw	r3,128(sp)
   4157c:	d8801f17 	ldw	r2,124(sp)
   41580:	da000404 	addi	r8,sp,16
   41584:	003fee06 	br	41540 <__alt_data_end+0xfffcf540>
   41588:	d9403117 	ldw	r5,196(sp)
   4158c:	d8802917 	ldw	r2,164(sp)
   41590:	28adc83a 	sub	r22,r5,r2
   41594:	05be410e 	bge	zero,r22,40e9c <__alt_data_end+0xfffcee9c>
   41598:	07000404 	movi	fp,16
   4159c:	d8801f17 	ldw	r2,124(sp)
   415a0:	e5838f0e 	bge	fp,r22,423e0 <___vfprintf_internal_r+0x1e50>
   415a4:	01400174 	movhi	r5,5
   415a8:	297ee584 	addi	r5,r5,-1130
   415ac:	dc403015 	stw	r17,192(sp)
   415b0:	d9402c15 	stw	r5,176(sp)
   415b4:	b023883a 	mov	r17,r22
   415b8:	04c001c4 	movi	r19,7
   415bc:	a82d883a 	mov	r22,r21
   415c0:	902b883a 	mov	r21,r18
   415c4:	8025883a 	mov	r18,r16
   415c8:	dc002d17 	ldw	r16,180(sp)
   415cc:	00000306 	br	415dc <___vfprintf_internal_r+0x104c>
   415d0:	8c7ffc04 	addi	r17,r17,-16
   415d4:	42000204 	addi	r8,r8,8
   415d8:	e440110e 	bge	fp,r17,41620 <___vfprintf_internal_r+0x1090>
   415dc:	18c00404 	addi	r3,r3,16
   415e0:	10800044 	addi	r2,r2,1
   415e4:	45000015 	stw	r20,0(r8)
   415e8:	47000115 	stw	fp,4(r8)
   415ec:	d8c02015 	stw	r3,128(sp)
   415f0:	d8801f15 	stw	r2,124(sp)
   415f4:	98bff60e 	bge	r19,r2,415d0 <__alt_data_end+0xfffcf5d0>
   415f8:	d9801e04 	addi	r6,sp,120
   415fc:	b80b883a 	mov	r5,r23
   41600:	8009883a 	mov	r4,r16
   41604:	0047d700 	call	47d70 <__sprint_r>
   41608:	103ce51e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   4160c:	8c7ffc04 	addi	r17,r17,-16
   41610:	d8c02017 	ldw	r3,128(sp)
   41614:	d8801f17 	ldw	r2,124(sp)
   41618:	da000404 	addi	r8,sp,16
   4161c:	e47fef16 	blt	fp,r17,415dc <__alt_data_end+0xfffcf5dc>
   41620:	9021883a 	mov	r16,r18
   41624:	a825883a 	mov	r18,r21
   41628:	b02b883a 	mov	r21,r22
   4162c:	882d883a 	mov	r22,r17
   41630:	dc403017 	ldw	r17,192(sp)
   41634:	d9002c17 	ldw	r4,176(sp)
   41638:	1d87883a 	add	r3,r3,r22
   4163c:	10800044 	addi	r2,r2,1
   41640:	41000015 	stw	r4,0(r8)
   41644:	45800115 	stw	r22,4(r8)
   41648:	d8c02015 	stw	r3,128(sp)
   4164c:	d8801f15 	stw	r2,124(sp)
   41650:	010001c4 	movi	r4,7
   41654:	20818e16 	blt	r4,r2,41c90 <___vfprintf_internal_r+0x1700>
   41658:	42000204 	addi	r8,r8,8
   4165c:	003e0f06 	br	40e9c <__alt_data_end+0xfffcee9c>
   41660:	d9403317 	ldw	r5,204(sp)
   41664:	00800044 	movi	r2,1
   41668:	18c00044 	addi	r3,r3,1
   4166c:	1141530e 	bge	r2,r5,41bbc <___vfprintf_internal_r+0x162c>
   41670:	dc401f17 	ldw	r17,124(sp)
   41674:	00800044 	movi	r2,1
   41678:	40800115 	stw	r2,4(r8)
   4167c:	8c400044 	addi	r17,r17,1
   41680:	44000015 	stw	r16,0(r8)
   41684:	d8c02015 	stw	r3,128(sp)
   41688:	dc401f15 	stw	r17,124(sp)
   4168c:	008001c4 	movi	r2,7
   41690:	14416b16 	blt	r2,r17,41c40 <___vfprintf_internal_r+0x16b0>
   41694:	42000204 	addi	r8,r8,8
   41698:	d8803717 	ldw	r2,220(sp)
   4169c:	d9003417 	ldw	r4,208(sp)
   416a0:	8c400044 	addi	r17,r17,1
   416a4:	10c7883a 	add	r3,r2,r3
   416a8:	40800115 	stw	r2,4(r8)
   416ac:	41000015 	stw	r4,0(r8)
   416b0:	d8c02015 	stw	r3,128(sp)
   416b4:	dc401f15 	stw	r17,124(sp)
   416b8:	008001c4 	movi	r2,7
   416bc:	14416916 	blt	r2,r17,41c64 <___vfprintf_internal_r+0x16d4>
   416c0:	45800204 	addi	r22,r8,8
   416c4:	d9003617 	ldw	r4,216(sp)
   416c8:	d9403817 	ldw	r5,224(sp)
   416cc:	000d883a 	mov	r6,zero
   416d0:	000f883a 	mov	r7,zero
   416d4:	d8c03c15 	stw	r3,240(sp)
   416d8:	004bcd00 	call	4bcd0 <__eqdf2>
   416dc:	d8c03c17 	ldw	r3,240(sp)
   416e0:	1000bc26 	beq	r2,zero,419d4 <___vfprintf_internal_r+0x1444>
   416e4:	d9403317 	ldw	r5,204(sp)
   416e8:	84000044 	addi	r16,r16,1
   416ec:	8c400044 	addi	r17,r17,1
   416f0:	28bfffc4 	addi	r2,r5,-1
   416f4:	1887883a 	add	r3,r3,r2
   416f8:	b0800115 	stw	r2,4(r22)
   416fc:	b4000015 	stw	r16,0(r22)
   41700:	d8c02015 	stw	r3,128(sp)
   41704:	dc401f15 	stw	r17,124(sp)
   41708:	008001c4 	movi	r2,7
   4170c:	14414316 	blt	r2,r17,41c1c <___vfprintf_internal_r+0x168c>
   41710:	b5800204 	addi	r22,r22,8
   41714:	d9003a17 	ldw	r4,232(sp)
   41718:	df0022c4 	addi	fp,sp,139
   4171c:	8c400044 	addi	r17,r17,1
   41720:	20c7883a 	add	r3,r4,r3
   41724:	b7000015 	stw	fp,0(r22)
   41728:	b1000115 	stw	r4,4(r22)
   4172c:	d8c02015 	stw	r3,128(sp)
   41730:	dc401f15 	stw	r17,124(sp)
   41734:	008001c4 	movi	r2,7
   41738:	14400e16 	blt	r2,r17,41774 <___vfprintf_internal_r+0x11e4>
   4173c:	b2000204 	addi	r8,r22,8
   41740:	003e1806 	br	40fa4 <__alt_data_end+0xfffcefa4>
   41744:	01000174 	movhi	r4,5
   41748:	213ee584 	addi	r4,r4,-1130
   4174c:	d9002c15 	stw	r4,176(sp)
   41750:	d9002c17 	ldw	r4,176(sp)
   41754:	1c07883a 	add	r3,r3,r16
   41758:	44000115 	stw	r16,4(r8)
   4175c:	41000015 	stw	r4,0(r8)
   41760:	10800044 	addi	r2,r2,1
   41764:	d8c02015 	stw	r3,128(sp)
   41768:	d8801f15 	stw	r2,124(sp)
   4176c:	010001c4 	movi	r4,7
   41770:	20be0b0e 	bge	r4,r2,40fa0 <__alt_data_end+0xfffcefa0>
   41774:	d9002d17 	ldw	r4,180(sp)
   41778:	d9801e04 	addi	r6,sp,120
   4177c:	b80b883a 	mov	r5,r23
   41780:	0047d700 	call	47d70 <__sprint_r>
   41784:	103c861e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41788:	d8c02017 	ldw	r3,128(sp)
   4178c:	da000404 	addi	r8,sp,16
   41790:	003e0406 	br	40fa4 <__alt_data_end+0xfffcefa4>
   41794:	d9002d17 	ldw	r4,180(sp)
   41798:	d9801e04 	addi	r6,sp,120
   4179c:	b80b883a 	mov	r5,r23
   417a0:	0047d700 	call	47d70 <__sprint_r>
   417a4:	103e3b26 	beq	r2,zero,41094 <__alt_data_end+0xfffcf094>
   417a8:	003c7d06 	br	409a0 <__alt_data_end+0xfffce9a0>
   417ac:	d9002d17 	ldw	r4,180(sp)
   417b0:	d9801e04 	addi	r6,sp,120
   417b4:	b80b883a 	mov	r5,r23
   417b8:	0047d700 	call	47d70 <__sprint_r>
   417bc:	103c781e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   417c0:	d8c02017 	ldw	r3,128(sp)
   417c4:	da000404 	addi	r8,sp,16
   417c8:	003de906 	br	40f70 <__alt_data_end+0xfffcef70>
   417cc:	d9002d17 	ldw	r4,180(sp)
   417d0:	d9801e04 	addi	r6,sp,120
   417d4:	b80b883a 	mov	r5,r23
   417d8:	0047d700 	call	47d70 <__sprint_r>
   417dc:	103c701e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   417e0:	d8c02017 	ldw	r3,128(sp)
   417e4:	da000404 	addi	r8,sp,16
   417e8:	003d9b06 	br	40e58 <__alt_data_end+0xfffcee58>
   417ec:	d9002d17 	ldw	r4,180(sp)
   417f0:	d9801e04 	addi	r6,sp,120
   417f4:	b80b883a 	mov	r5,r23
   417f8:	0047d700 	call	47d70 <__sprint_r>
   417fc:	103c681e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41800:	d8c02017 	ldw	r3,128(sp)
   41804:	da000404 	addi	r8,sp,16
   41808:	003da106 	br	40e90 <__alt_data_end+0xfffcee90>
   4180c:	d9402a17 	ldw	r5,168(sp)
   41810:	d8002785 	stb	zero,158(sp)
   41814:	283f0616 	blt	r5,zero,41430 <__alt_data_end+0xfffcf430>
   41818:	00ffdfc4 	movi	r3,-129
   4181c:	9d84b03a 	or	r2,r19,r22
   41820:	90e4703a 	and	r18,r18,r3
   41824:	103c3b26 	beq	r2,zero,40914 <__alt_data_end+0xfffce914>
   41828:	0039883a 	mov	fp,zero
   4182c:	003e5806 	br	41190 <__alt_data_end+0xfffcf190>
   41830:	9080040c 	andi	r2,r18,16
   41834:	1001b326 	beq	r2,zero,41f04 <___vfprintf_internal_r+0x1974>
   41838:	d8c02e17 	ldw	r3,184(sp)
   4183c:	d9002a17 	ldw	r4,168(sp)
   41840:	d8002785 	stb	zero,158(sp)
   41844:	18800104 	addi	r2,r3,4
   41848:	1cc00017 	ldw	r19,0(r3)
   4184c:	002d883a 	mov	r22,zero
   41850:	2001b516 	blt	r4,zero,41f28 <___vfprintf_internal_r+0x1998>
   41854:	00ffdfc4 	movi	r3,-129
   41858:	d8802e15 	stw	r2,184(sp)
   4185c:	90e4703a 	and	r18,r18,r3
   41860:	983d0526 	beq	r19,zero,40c78 <__alt_data_end+0xfffcec78>
   41864:	0039883a 	mov	fp,zero
   41868:	003d0806 	br	40c8c <__alt_data_end+0xfffcec8c>
   4186c:	dc402617 	ldw	r17,152(sp)
   41870:	0441d30e 	bge	zero,r17,41fc0 <___vfprintf_internal_r+0x1a30>
   41874:	dc403217 	ldw	r17,200(sp)
   41878:	d8803317 	ldw	r2,204(sp)
   4187c:	1440010e 	bge	r2,r17,41884 <___vfprintf_internal_r+0x12f4>
   41880:	1023883a 	mov	r17,r2
   41884:	04400a0e 	bge	zero,r17,418b0 <___vfprintf_internal_r+0x1320>
   41888:	d8801f17 	ldw	r2,124(sp)
   4188c:	1c47883a 	add	r3,r3,r17
   41890:	44000015 	stw	r16,0(r8)
   41894:	10800044 	addi	r2,r2,1
   41898:	44400115 	stw	r17,4(r8)
   4189c:	d8c02015 	stw	r3,128(sp)
   418a0:	d8801f15 	stw	r2,124(sp)
   418a4:	010001c4 	movi	r4,7
   418a8:	20826516 	blt	r4,r2,42240 <___vfprintf_internal_r+0x1cb0>
   418ac:	42000204 	addi	r8,r8,8
   418b0:	88026116 	blt	r17,zero,42238 <___vfprintf_internal_r+0x1ca8>
   418b4:	d9003217 	ldw	r4,200(sp)
   418b8:	2463c83a 	sub	r17,r4,r17
   418bc:	04407b0e 	bge	zero,r17,41aac <___vfprintf_internal_r+0x151c>
   418c0:	05800404 	movi	r22,16
   418c4:	d8801f17 	ldw	r2,124(sp)
   418c8:	b4419d0e 	bge	r22,r17,41f40 <___vfprintf_internal_r+0x19b0>
   418cc:	01000174 	movhi	r4,5
   418d0:	213ee584 	addi	r4,r4,-1130
   418d4:	d9002c15 	stw	r4,176(sp)
   418d8:	070001c4 	movi	fp,7
   418dc:	dcc02d17 	ldw	r19,180(sp)
   418e0:	00000306 	br	418f0 <___vfprintf_internal_r+0x1360>
   418e4:	42000204 	addi	r8,r8,8
   418e8:	8c7ffc04 	addi	r17,r17,-16
   418ec:	b441970e 	bge	r22,r17,41f4c <___vfprintf_internal_r+0x19bc>
   418f0:	18c00404 	addi	r3,r3,16
   418f4:	10800044 	addi	r2,r2,1
   418f8:	45000015 	stw	r20,0(r8)
   418fc:	45800115 	stw	r22,4(r8)
   41900:	d8c02015 	stw	r3,128(sp)
   41904:	d8801f15 	stw	r2,124(sp)
   41908:	e0bff60e 	bge	fp,r2,418e4 <__alt_data_end+0xfffcf8e4>
   4190c:	d9801e04 	addi	r6,sp,120
   41910:	b80b883a 	mov	r5,r23
   41914:	9809883a 	mov	r4,r19
   41918:	0047d700 	call	47d70 <__sprint_r>
   4191c:	103c201e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41920:	d8c02017 	ldw	r3,128(sp)
   41924:	d8801f17 	ldw	r2,124(sp)
   41928:	da000404 	addi	r8,sp,16
   4192c:	003fee06 	br	418e8 <__alt_data_end+0xfffcf8e8>
   41930:	d9002d17 	ldw	r4,180(sp)
   41934:	d9801e04 	addi	r6,sp,120
   41938:	b80b883a 	mov	r5,r23
   4193c:	0047d700 	call	47d70 <__sprint_r>
   41940:	103c171e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41944:	d8c02017 	ldw	r3,128(sp)
   41948:	df002787 	ldb	fp,158(sp)
   4194c:	da000404 	addi	r8,sp,16
   41950:	003d3406 	br	40e24 <__alt_data_end+0xfffcee24>
   41954:	9080040c 	andi	r2,r18,16
   41958:	10016126 	beq	r2,zero,41ee0 <___vfprintf_internal_r+0x1950>
   4195c:	d9402e17 	ldw	r5,184(sp)
   41960:	2cc00017 	ldw	r19,0(r5)
   41964:	29400104 	addi	r5,r5,4
   41968:	d9402e15 	stw	r5,184(sp)
   4196c:	982dd7fa 	srai	r22,r19,31
   41970:	b005883a 	mov	r2,r22
   41974:	003c5a06 	br	40ae0 <__alt_data_end+0xfffceae0>
   41978:	9080040c 	andi	r2,r18,16
   4197c:	10003526 	beq	r2,zero,41a54 <___vfprintf_internal_r+0x14c4>
   41980:	d8c02e17 	ldw	r3,184(sp)
   41984:	d9002a17 	ldw	r4,168(sp)
   41988:	d8002785 	stb	zero,158(sp)
   4198c:	18800104 	addi	r2,r3,4
   41990:	1cc00017 	ldw	r19,0(r3)
   41994:	002d883a 	mov	r22,zero
   41998:	20003716 	blt	r4,zero,41a78 <___vfprintf_internal_r+0x14e8>
   4199c:	00ffdfc4 	movi	r3,-129
   419a0:	d8802e15 	stw	r2,184(sp)
   419a4:	90e4703a 	and	r18,r18,r3
   419a8:	0039883a 	mov	fp,zero
   419ac:	983dd426 	beq	r19,zero,41100 <__alt_data_end+0xfffcf100>
   419b0:	00800244 	movi	r2,9
   419b4:	14fc5336 	bltu	r2,r19,40b04 <__alt_data_end+0xfffceb04>
   419b8:	d8c02817 	ldw	r3,160(sp)
   419bc:	dc001dc4 	addi	r16,sp,119
   419c0:	9cc00c04 	addi	r19,r19,48
   419c4:	1c07c83a 	sub	r3,r3,r16
   419c8:	dcc01dc5 	stb	r19,119(sp)
   419cc:	d8c02b15 	stw	r3,172(sp)
   419d0:	003cc606 	br	40cec <__alt_data_end+0xfffcecec>
   419d4:	d8803317 	ldw	r2,204(sp)
   419d8:	143fffc4 	addi	r16,r2,-1
   419dc:	043f4d0e 	bge	zero,r16,41714 <__alt_data_end+0xfffcf714>
   419e0:	07000404 	movi	fp,16
   419e4:	e400810e 	bge	fp,r16,41bec <___vfprintf_internal_r+0x165c>
   419e8:	01400174 	movhi	r5,5
   419ec:	297ee584 	addi	r5,r5,-1130
   419f0:	d9402c15 	stw	r5,176(sp)
   419f4:	01c001c4 	movi	r7,7
   419f8:	dcc02d17 	ldw	r19,180(sp)
   419fc:	00000306 	br	41a0c <___vfprintf_internal_r+0x147c>
   41a00:	b5800204 	addi	r22,r22,8
   41a04:	843ffc04 	addi	r16,r16,-16
   41a08:	e4007b0e 	bge	fp,r16,41bf8 <___vfprintf_internal_r+0x1668>
   41a0c:	18c00404 	addi	r3,r3,16
   41a10:	8c400044 	addi	r17,r17,1
   41a14:	b5000015 	stw	r20,0(r22)
   41a18:	b7000115 	stw	fp,4(r22)
   41a1c:	d8c02015 	stw	r3,128(sp)
   41a20:	dc401f15 	stw	r17,124(sp)
   41a24:	3c7ff60e 	bge	r7,r17,41a00 <__alt_data_end+0xfffcfa00>
   41a28:	d9801e04 	addi	r6,sp,120
   41a2c:	b80b883a 	mov	r5,r23
   41a30:	9809883a 	mov	r4,r19
   41a34:	d9c03c15 	stw	r7,240(sp)
   41a38:	0047d700 	call	47d70 <__sprint_r>
   41a3c:	d9c03c17 	ldw	r7,240(sp)
   41a40:	103bd71e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41a44:	d8c02017 	ldw	r3,128(sp)
   41a48:	dc401f17 	ldw	r17,124(sp)
   41a4c:	dd800404 	addi	r22,sp,16
   41a50:	003fec06 	br	41a04 <__alt_data_end+0xfffcfa04>
   41a54:	9080100c 	andi	r2,r18,64
   41a58:	d8002785 	stb	zero,158(sp)
   41a5c:	10010e26 	beq	r2,zero,41e98 <___vfprintf_internal_r+0x1908>
   41a60:	d9402e17 	ldw	r5,184(sp)
   41a64:	d8c02a17 	ldw	r3,168(sp)
   41a68:	002d883a 	mov	r22,zero
   41a6c:	28800104 	addi	r2,r5,4
   41a70:	2cc0000b 	ldhu	r19,0(r5)
   41a74:	183fc90e 	bge	r3,zero,4199c <__alt_data_end+0xfffcf99c>
   41a78:	d8802e15 	stw	r2,184(sp)
   41a7c:	0039883a 	mov	fp,zero
   41a80:	9d84b03a 	or	r2,r19,r22
   41a84:	103c1e1e 	bne	r2,zero,40b00 <__alt_data_end+0xfffceb00>
   41a88:	00800044 	movi	r2,1
   41a8c:	003e6c06 	br	41440 <__alt_data_end+0xfffcf440>
   41a90:	d9002d17 	ldw	r4,180(sp)
   41a94:	d9801e04 	addi	r6,sp,120
   41a98:	b80b883a 	mov	r5,r23
   41a9c:	0047d700 	call	47d70 <__sprint_r>
   41aa0:	103bbf1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41aa4:	d8c02017 	ldw	r3,128(sp)
   41aa8:	da000404 	addi	r8,sp,16
   41aac:	d9003217 	ldw	r4,200(sp)
   41ab0:	d8802617 	ldw	r2,152(sp)
   41ab4:	d9403317 	ldw	r5,204(sp)
   41ab8:	8123883a 	add	r17,r16,r4
   41abc:	11400216 	blt	r2,r5,41ac8 <___vfprintf_internal_r+0x1538>
   41ac0:	9100004c 	andi	r4,r18,1
   41ac4:	20000d26 	beq	r4,zero,41afc <___vfprintf_internal_r+0x156c>
   41ac8:	d9003717 	ldw	r4,220(sp)
   41acc:	d9403417 	ldw	r5,208(sp)
   41ad0:	1907883a 	add	r3,r3,r4
   41ad4:	d9001f17 	ldw	r4,124(sp)
   41ad8:	41400015 	stw	r5,0(r8)
   41adc:	d9403717 	ldw	r5,220(sp)
   41ae0:	21000044 	addi	r4,r4,1
   41ae4:	d8c02015 	stw	r3,128(sp)
   41ae8:	41400115 	stw	r5,4(r8)
   41aec:	d9001f15 	stw	r4,124(sp)
   41af0:	014001c4 	movi	r5,7
   41af4:	2901e816 	blt	r5,r4,42298 <___vfprintf_internal_r+0x1d08>
   41af8:	42000204 	addi	r8,r8,8
   41afc:	d9003317 	ldw	r4,204(sp)
   41b00:	8121883a 	add	r16,r16,r4
   41b04:	2085c83a 	sub	r2,r4,r2
   41b08:	8461c83a 	sub	r16,r16,r17
   41b0c:	1400010e 	bge	r2,r16,41b14 <___vfprintf_internal_r+0x1584>
   41b10:	1021883a 	mov	r16,r2
   41b14:	04000a0e 	bge	zero,r16,41b40 <___vfprintf_internal_r+0x15b0>
   41b18:	d9001f17 	ldw	r4,124(sp)
   41b1c:	1c07883a 	add	r3,r3,r16
   41b20:	44400015 	stw	r17,0(r8)
   41b24:	21000044 	addi	r4,r4,1
   41b28:	44000115 	stw	r16,4(r8)
   41b2c:	d8c02015 	stw	r3,128(sp)
   41b30:	d9001f15 	stw	r4,124(sp)
   41b34:	014001c4 	movi	r5,7
   41b38:	2901fb16 	blt	r5,r4,42328 <___vfprintf_internal_r+0x1d98>
   41b3c:	42000204 	addi	r8,r8,8
   41b40:	8001f716 	blt	r16,zero,42320 <___vfprintf_internal_r+0x1d90>
   41b44:	1421c83a 	sub	r16,r2,r16
   41b48:	043d160e 	bge	zero,r16,40fa4 <__alt_data_end+0xfffcefa4>
   41b4c:	04400404 	movi	r17,16
   41b50:	d8801f17 	ldw	r2,124(sp)
   41b54:	8c3efb0e 	bge	r17,r16,41744 <__alt_data_end+0xfffcf744>
   41b58:	01400174 	movhi	r5,5
   41b5c:	297ee584 	addi	r5,r5,-1130
   41b60:	d9402c15 	stw	r5,176(sp)
   41b64:	058001c4 	movi	r22,7
   41b68:	dcc02d17 	ldw	r19,180(sp)
   41b6c:	00000306 	br	41b7c <___vfprintf_internal_r+0x15ec>
   41b70:	42000204 	addi	r8,r8,8
   41b74:	843ffc04 	addi	r16,r16,-16
   41b78:	8c3ef50e 	bge	r17,r16,41750 <__alt_data_end+0xfffcf750>
   41b7c:	18c00404 	addi	r3,r3,16
   41b80:	10800044 	addi	r2,r2,1
   41b84:	45000015 	stw	r20,0(r8)
   41b88:	44400115 	stw	r17,4(r8)
   41b8c:	d8c02015 	stw	r3,128(sp)
   41b90:	d8801f15 	stw	r2,124(sp)
   41b94:	b0bff60e 	bge	r22,r2,41b70 <__alt_data_end+0xfffcfb70>
   41b98:	d9801e04 	addi	r6,sp,120
   41b9c:	b80b883a 	mov	r5,r23
   41ba0:	9809883a 	mov	r4,r19
   41ba4:	0047d700 	call	47d70 <__sprint_r>
   41ba8:	103b7d1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41bac:	d8c02017 	ldw	r3,128(sp)
   41bb0:	d8801f17 	ldw	r2,124(sp)
   41bb4:	da000404 	addi	r8,sp,16
   41bb8:	003fee06 	br	41b74 <__alt_data_end+0xfffcfb74>
   41bbc:	9088703a 	and	r4,r18,r2
   41bc0:	203eab1e 	bne	r4,zero,41670 <__alt_data_end+0xfffcf670>
   41bc4:	dc401f17 	ldw	r17,124(sp)
   41bc8:	40800115 	stw	r2,4(r8)
   41bcc:	44000015 	stw	r16,0(r8)
   41bd0:	8c400044 	addi	r17,r17,1
   41bd4:	d8c02015 	stw	r3,128(sp)
   41bd8:	dc401f15 	stw	r17,124(sp)
   41bdc:	008001c4 	movi	r2,7
   41be0:	14400e16 	blt	r2,r17,41c1c <___vfprintf_internal_r+0x168c>
   41be4:	45800204 	addi	r22,r8,8
   41be8:	003eca06 	br	41714 <__alt_data_end+0xfffcf714>
   41bec:	01000174 	movhi	r4,5
   41bf0:	213ee584 	addi	r4,r4,-1130
   41bf4:	d9002c15 	stw	r4,176(sp)
   41bf8:	d8802c17 	ldw	r2,176(sp)
   41bfc:	1c07883a 	add	r3,r3,r16
   41c00:	8c400044 	addi	r17,r17,1
   41c04:	b0800015 	stw	r2,0(r22)
   41c08:	b4000115 	stw	r16,4(r22)
   41c0c:	d8c02015 	stw	r3,128(sp)
   41c10:	dc401f15 	stw	r17,124(sp)
   41c14:	008001c4 	movi	r2,7
   41c18:	147ebd0e 	bge	r2,r17,41710 <__alt_data_end+0xfffcf710>
   41c1c:	d9002d17 	ldw	r4,180(sp)
   41c20:	d9801e04 	addi	r6,sp,120
   41c24:	b80b883a 	mov	r5,r23
   41c28:	0047d700 	call	47d70 <__sprint_r>
   41c2c:	103b5c1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41c30:	d8c02017 	ldw	r3,128(sp)
   41c34:	dc401f17 	ldw	r17,124(sp)
   41c38:	dd800404 	addi	r22,sp,16
   41c3c:	003eb506 	br	41714 <__alt_data_end+0xfffcf714>
   41c40:	d9002d17 	ldw	r4,180(sp)
   41c44:	d9801e04 	addi	r6,sp,120
   41c48:	b80b883a 	mov	r5,r23
   41c4c:	0047d700 	call	47d70 <__sprint_r>
   41c50:	103b531e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41c54:	d8c02017 	ldw	r3,128(sp)
   41c58:	dc401f17 	ldw	r17,124(sp)
   41c5c:	da000404 	addi	r8,sp,16
   41c60:	003e8d06 	br	41698 <__alt_data_end+0xfffcf698>
   41c64:	d9002d17 	ldw	r4,180(sp)
   41c68:	d9801e04 	addi	r6,sp,120
   41c6c:	b80b883a 	mov	r5,r23
   41c70:	0047d700 	call	47d70 <__sprint_r>
   41c74:	103b4a1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41c78:	d8c02017 	ldw	r3,128(sp)
   41c7c:	dc401f17 	ldw	r17,124(sp)
   41c80:	dd800404 	addi	r22,sp,16
   41c84:	003e8f06 	br	416c4 <__alt_data_end+0xfffcf6c4>
   41c88:	0027883a 	mov	r19,zero
   41c8c:	003f4a06 	br	419b8 <__alt_data_end+0xfffcf9b8>
   41c90:	d9002d17 	ldw	r4,180(sp)
   41c94:	d9801e04 	addi	r6,sp,120
   41c98:	b80b883a 	mov	r5,r23
   41c9c:	0047d700 	call	47d70 <__sprint_r>
   41ca0:	103b3f1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41ca4:	d8c02017 	ldw	r3,128(sp)
   41ca8:	da000404 	addi	r8,sp,16
   41cac:	003c7b06 	br	40e9c <__alt_data_end+0xfffcee9c>
   41cb0:	d9402a17 	ldw	r5,168(sp)
   41cb4:	04e7c83a 	sub	r19,zero,r19
   41cb8:	07000b44 	movi	fp,45
   41cbc:	9804c03a 	cmpne	r2,r19,zero
   41cc0:	05adc83a 	sub	r22,zero,r22
   41cc4:	df002785 	stb	fp,158(sp)
   41cc8:	b0adc83a 	sub	r22,r22,r2
   41ccc:	28017b16 	blt	r5,zero,422bc <___vfprintf_internal_r+0x1d2c>
   41cd0:	00bfdfc4 	movi	r2,-129
   41cd4:	90a4703a 	and	r18,r18,r2
   41cd8:	003b8906 	br	40b00 <__alt_data_end+0xfffceb00>
   41cdc:	d9003617 	ldw	r4,216(sp)
   41ce0:	d9403817 	ldw	r5,224(sp)
   41ce4:	da003d15 	stw	r8,244(sp)
   41ce8:	00479940 	call	47994 <__fpclassifyd>
   41cec:	da003d17 	ldw	r8,244(sp)
   41cf0:	1000f026 	beq	r2,zero,420b4 <___vfprintf_internal_r+0x1b24>
   41cf4:	d9002a17 	ldw	r4,168(sp)
   41cf8:	05bff7c4 	movi	r22,-33
   41cfc:	00bfffc4 	movi	r2,-1
   41d00:	8dac703a 	and	r22,r17,r22
   41d04:	20820026 	beq	r4,r2,42508 <___vfprintf_internal_r+0x1f78>
   41d08:	008011c4 	movi	r2,71
   41d0c:	b081f726 	beq	r22,r2,424ec <___vfprintf_internal_r+0x1f5c>
   41d10:	d9003817 	ldw	r4,224(sp)
   41d14:	90c04014 	ori	r3,r18,256
   41d18:	d8c02c15 	stw	r3,176(sp)
   41d1c:	20021516 	blt	r4,zero,42574 <___vfprintf_internal_r+0x1fe4>
   41d20:	dcc03817 	ldw	r19,224(sp)
   41d24:	d8002905 	stb	zero,164(sp)
   41d28:	00801984 	movi	r2,102
   41d2c:	8881f926 	beq	r17,r2,42514 <___vfprintf_internal_r+0x1f84>
   41d30:	00801184 	movi	r2,70
   41d34:	88821c26 	beq	r17,r2,425a8 <___vfprintf_internal_r+0x2018>
   41d38:	00801144 	movi	r2,69
   41d3c:	b081ef26 	beq	r22,r2,424fc <___vfprintf_internal_r+0x1f6c>
   41d40:	d8c02a17 	ldw	r3,168(sp)
   41d44:	d8802104 	addi	r2,sp,132
   41d48:	d8800315 	stw	r2,12(sp)
   41d4c:	d9403617 	ldw	r5,216(sp)
   41d50:	d8802504 	addi	r2,sp,148
   41d54:	d9002d17 	ldw	r4,180(sp)
   41d58:	d8800215 	stw	r2,8(sp)
   41d5c:	d8802604 	addi	r2,sp,152
   41d60:	d8c00015 	stw	r3,0(sp)
   41d64:	d8800115 	stw	r2,4(sp)
   41d68:	01c00084 	movi	r7,2
   41d6c:	980d883a 	mov	r6,r19
   41d70:	d8c03c15 	stw	r3,240(sp)
   41d74:	da003d15 	stw	r8,244(sp)
   41d78:	0042cc00 	call	42cc0 <_dtoa_r>
   41d7c:	1021883a 	mov	r16,r2
   41d80:	008019c4 	movi	r2,103
   41d84:	d8c03c17 	ldw	r3,240(sp)
   41d88:	da003d17 	ldw	r8,244(sp)
   41d8c:	88817126 	beq	r17,r2,42354 <___vfprintf_internal_r+0x1dc4>
   41d90:	008011c4 	movi	r2,71
   41d94:	88829126 	beq	r17,r2,427dc <___vfprintf_internal_r+0x224c>
   41d98:	80f9883a 	add	fp,r16,r3
   41d9c:	d9003617 	ldw	r4,216(sp)
   41da0:	000d883a 	mov	r6,zero
   41da4:	000f883a 	mov	r7,zero
   41da8:	980b883a 	mov	r5,r19
   41dac:	da003d15 	stw	r8,244(sp)
   41db0:	004bcd00 	call	4bcd0 <__eqdf2>
   41db4:	da003d17 	ldw	r8,244(sp)
   41db8:	10018d26 	beq	r2,zero,423f0 <___vfprintf_internal_r+0x1e60>
   41dbc:	d8802117 	ldw	r2,132(sp)
   41dc0:	1700062e 	bgeu	r2,fp,41ddc <___vfprintf_internal_r+0x184c>
   41dc4:	01000c04 	movi	r4,48
   41dc8:	10c00044 	addi	r3,r2,1
   41dcc:	d8c02115 	stw	r3,132(sp)
   41dd0:	11000005 	stb	r4,0(r2)
   41dd4:	d8802117 	ldw	r2,132(sp)
   41dd8:	173ffb36 	bltu	r2,fp,41dc8 <__alt_data_end+0xfffcfdc8>
   41ddc:	1405c83a 	sub	r2,r2,r16
   41de0:	d8803315 	stw	r2,204(sp)
   41de4:	008011c4 	movi	r2,71
   41de8:	b0817626 	beq	r22,r2,423c4 <___vfprintf_internal_r+0x1e34>
   41dec:	00801944 	movi	r2,101
   41df0:	1442800e 	bge	r2,r17,427f4 <___vfprintf_internal_r+0x2264>
   41df4:	d8c02617 	ldw	r3,152(sp)
   41df8:	00801984 	movi	r2,102
   41dfc:	d8c03215 	stw	r3,200(sp)
   41e00:	8881fe26 	beq	r17,r2,425fc <___vfprintf_internal_r+0x206c>
   41e04:	d8c03217 	ldw	r3,200(sp)
   41e08:	d9003317 	ldw	r4,204(sp)
   41e0c:	1901dd16 	blt	r3,r4,42584 <___vfprintf_internal_r+0x1ff4>
   41e10:	9480004c 	andi	r18,r18,1
   41e14:	90022b1e 	bne	r18,zero,426c4 <___vfprintf_internal_r+0x2134>
   41e18:	1805883a 	mov	r2,r3
   41e1c:	18028316 	blt	r3,zero,4282c <___vfprintf_internal_r+0x229c>
   41e20:	d8c03217 	ldw	r3,200(sp)
   41e24:	044019c4 	movi	r17,103
   41e28:	d8c02b15 	stw	r3,172(sp)
   41e2c:	df002907 	ldb	fp,164(sp)
   41e30:	e001531e 	bne	fp,zero,42380 <___vfprintf_internal_r+0x1df0>
   41e34:	df002783 	ldbu	fp,158(sp)
   41e38:	d8802915 	stw	r2,164(sp)
   41e3c:	dc802c17 	ldw	r18,176(sp)
   41e40:	d8002a15 	stw	zero,168(sp)
   41e44:	003baf06 	br	40d04 <__alt_data_end+0xfffced04>
   41e48:	d8c02e17 	ldw	r3,184(sp)
   41e4c:	d9002e17 	ldw	r4,184(sp)
   41e50:	d9402e17 	ldw	r5,184(sp)
   41e54:	18c00017 	ldw	r3,0(r3)
   41e58:	21000117 	ldw	r4,4(r4)
   41e5c:	29400204 	addi	r5,r5,8
   41e60:	d8c03615 	stw	r3,216(sp)
   41e64:	d9003815 	stw	r4,224(sp)
   41e68:	d9402e15 	stw	r5,184(sp)
   41e6c:	003b5006 	br	40bb0 <__alt_data_end+0xfffcebb0>
   41e70:	ac400007 	ldb	r17,0(r21)
   41e74:	003a2806 	br	40718 <__alt_data_end+0xfffce718>
   41e78:	9080100c 	andi	r2,r18,64
   41e7c:	1000a826 	beq	r2,zero,42120 <___vfprintf_internal_r+0x1b90>
   41e80:	d8c02e17 	ldw	r3,184(sp)
   41e84:	002d883a 	mov	r22,zero
   41e88:	1cc0000b 	ldhu	r19,0(r3)
   41e8c:	18c00104 	addi	r3,r3,4
   41e90:	d8c02e15 	stw	r3,184(sp)
   41e94:	003caf06 	br	41154 <__alt_data_end+0xfffcf154>
   41e98:	d9002e17 	ldw	r4,184(sp)
   41e9c:	d9402a17 	ldw	r5,168(sp)
   41ea0:	002d883a 	mov	r22,zero
   41ea4:	20800104 	addi	r2,r4,4
   41ea8:	24c00017 	ldw	r19,0(r4)
   41eac:	283ebb0e 	bge	r5,zero,4199c <__alt_data_end+0xfffcf99c>
   41eb0:	003ef106 	br	41a78 <__alt_data_end+0xfffcfa78>
   41eb4:	9080040c 	andi	r2,r18,16
   41eb8:	1000921e 	bne	r2,zero,42104 <___vfprintf_internal_r+0x1b74>
   41ebc:	9480100c 	andi	r18,r18,64
   41ec0:	90013926 	beq	r18,zero,423a8 <___vfprintf_internal_r+0x1e18>
   41ec4:	d9402e17 	ldw	r5,184(sp)
   41ec8:	d8c02f17 	ldw	r3,188(sp)
   41ecc:	28800017 	ldw	r2,0(r5)
   41ed0:	29400104 	addi	r5,r5,4
   41ed4:	d9402e15 	stw	r5,184(sp)
   41ed8:	10c0000d 	sth	r3,0(r2)
   41edc:	0039e406 	br	40670 <__alt_data_end+0xfffce670>
   41ee0:	9080100c 	andi	r2,r18,64
   41ee4:	10008026 	beq	r2,zero,420e8 <___vfprintf_internal_r+0x1b58>
   41ee8:	d8802e17 	ldw	r2,184(sp)
   41eec:	14c0000f 	ldh	r19,0(r2)
   41ef0:	10800104 	addi	r2,r2,4
   41ef4:	d8802e15 	stw	r2,184(sp)
   41ef8:	982dd7fa 	srai	r22,r19,31
   41efc:	b005883a 	mov	r2,r22
   41f00:	003af706 	br	40ae0 <__alt_data_end+0xfffceae0>
   41f04:	9080100c 	andi	r2,r18,64
   41f08:	d8002785 	stb	zero,158(sp)
   41f0c:	10008a1e 	bne	r2,zero,42138 <___vfprintf_internal_r+0x1ba8>
   41f10:	d9002e17 	ldw	r4,184(sp)
   41f14:	d9402a17 	ldw	r5,168(sp)
   41f18:	002d883a 	mov	r22,zero
   41f1c:	20800104 	addi	r2,r4,4
   41f20:	24c00017 	ldw	r19,0(r4)
   41f24:	283e4b0e 	bge	r5,zero,41854 <__alt_data_end+0xfffcf854>
   41f28:	9d86b03a 	or	r3,r19,r22
   41f2c:	d8802e15 	stw	r2,184(sp)
   41f30:	183e4c1e 	bne	r3,zero,41864 <__alt_data_end+0xfffcf864>
   41f34:	0039883a 	mov	fp,zero
   41f38:	0005883a 	mov	r2,zero
   41f3c:	003d4006 	br	41440 <__alt_data_end+0xfffcf440>
   41f40:	01400174 	movhi	r5,5
   41f44:	297ee584 	addi	r5,r5,-1130
   41f48:	d9402c15 	stw	r5,176(sp)
   41f4c:	d9402c17 	ldw	r5,176(sp)
   41f50:	1c47883a 	add	r3,r3,r17
   41f54:	10800044 	addi	r2,r2,1
   41f58:	41400015 	stw	r5,0(r8)
   41f5c:	44400115 	stw	r17,4(r8)
   41f60:	d8c02015 	stw	r3,128(sp)
   41f64:	d8801f15 	stw	r2,124(sp)
   41f68:	010001c4 	movi	r4,7
   41f6c:	20bec816 	blt	r4,r2,41a90 <__alt_data_end+0xfffcfa90>
   41f70:	42000204 	addi	r8,r8,8
   41f74:	003ecd06 	br	41aac <__alt_data_end+0xfffcfaac>
   41f78:	d9002a17 	ldw	r4,168(sp)
   41f7c:	d8002785 	stb	zero,158(sp)
   41f80:	203d2d16 	blt	r4,zero,41438 <__alt_data_end+0xfffcf438>
   41f84:	00bfdfc4 	movi	r2,-129
   41f88:	90a4703a 	and	r18,r18,r2
   41f8c:	003a6106 	br	40914 <__alt_data_end+0xfffce914>
   41f90:	01000174 	movhi	r4,5
   41f94:	213ee584 	addi	r4,r4,-1130
   41f98:	d9002c15 	stw	r4,176(sp)
   41f9c:	003bea06 	br	40f48 <__alt_data_end+0xfffcef48>
   41fa0:	d9002d17 	ldw	r4,180(sp)
   41fa4:	d9801e04 	addi	r6,sp,120
   41fa8:	b80b883a 	mov	r5,r23
   41fac:	0047d700 	call	47d70 <__sprint_r>
   41fb0:	103a7b1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   41fb4:	d8c02017 	ldw	r3,128(sp)
   41fb8:	da000404 	addi	r8,sp,16
   41fbc:	003d4106 	br	414c4 <__alt_data_end+0xfffcf4c4>
   41fc0:	d8801f17 	ldw	r2,124(sp)
   41fc4:	01400174 	movhi	r5,5
   41fc8:	01000044 	movi	r4,1
   41fcc:	18c00044 	addi	r3,r3,1
   41fd0:	10800044 	addi	r2,r2,1
   41fd4:	297ee504 	addi	r5,r5,-1132
   41fd8:	41000115 	stw	r4,4(r8)
   41fdc:	41400015 	stw	r5,0(r8)
   41fe0:	d8c02015 	stw	r3,128(sp)
   41fe4:	d8801f15 	stw	r2,124(sp)
   41fe8:	010001c4 	movi	r4,7
   41fec:	20805c16 	blt	r4,r2,42160 <___vfprintf_internal_r+0x1bd0>
   41ff0:	42000204 	addi	r8,r8,8
   41ff4:	8800041e 	bne	r17,zero,42008 <___vfprintf_internal_r+0x1a78>
   41ff8:	d8803317 	ldw	r2,204(sp)
   41ffc:	1000021e 	bne	r2,zero,42008 <___vfprintf_internal_r+0x1a78>
   42000:	9080004c 	andi	r2,r18,1
   42004:	103be726 	beq	r2,zero,40fa4 <__alt_data_end+0xfffcefa4>
   42008:	d9003717 	ldw	r4,220(sp)
   4200c:	d8801f17 	ldw	r2,124(sp)
   42010:	d9403417 	ldw	r5,208(sp)
   42014:	20c7883a 	add	r3,r4,r3
   42018:	10800044 	addi	r2,r2,1
   4201c:	41000115 	stw	r4,4(r8)
   42020:	41400015 	stw	r5,0(r8)
   42024:	d8c02015 	stw	r3,128(sp)
   42028:	d8801f15 	stw	r2,124(sp)
   4202c:	010001c4 	movi	r4,7
   42030:	20812116 	blt	r4,r2,424b8 <___vfprintf_internal_r+0x1f28>
   42034:	42000204 	addi	r8,r8,8
   42038:	0463c83a 	sub	r17,zero,r17
   4203c:	0440730e 	bge	zero,r17,4220c <___vfprintf_internal_r+0x1c7c>
   42040:	05800404 	movi	r22,16
   42044:	b440860e 	bge	r22,r17,42260 <___vfprintf_internal_r+0x1cd0>
   42048:	01400174 	movhi	r5,5
   4204c:	297ee584 	addi	r5,r5,-1130
   42050:	d9402c15 	stw	r5,176(sp)
   42054:	070001c4 	movi	fp,7
   42058:	dcc02d17 	ldw	r19,180(sp)
   4205c:	00000306 	br	4206c <___vfprintf_internal_r+0x1adc>
   42060:	42000204 	addi	r8,r8,8
   42064:	8c7ffc04 	addi	r17,r17,-16
   42068:	b440800e 	bge	r22,r17,4226c <___vfprintf_internal_r+0x1cdc>
   4206c:	18c00404 	addi	r3,r3,16
   42070:	10800044 	addi	r2,r2,1
   42074:	45000015 	stw	r20,0(r8)
   42078:	45800115 	stw	r22,4(r8)
   4207c:	d8c02015 	stw	r3,128(sp)
   42080:	d8801f15 	stw	r2,124(sp)
   42084:	e0bff60e 	bge	fp,r2,42060 <__alt_data_end+0xfffd0060>
   42088:	d9801e04 	addi	r6,sp,120
   4208c:	b80b883a 	mov	r5,r23
   42090:	9809883a 	mov	r4,r19
   42094:	0047d700 	call	47d70 <__sprint_r>
   42098:	103a411e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   4209c:	d8c02017 	ldw	r3,128(sp)
   420a0:	d8801f17 	ldw	r2,124(sp)
   420a4:	da000404 	addi	r8,sp,16
   420a8:	003fee06 	br	42064 <__alt_data_end+0xfffd0064>
   420ac:	00bfffc4 	movi	r2,-1
   420b0:	003a3f06 	br	409b0 <__alt_data_end+0xfffce9b0>
   420b4:	008011c4 	movi	r2,71
   420b8:	1440b816 	blt	r2,r17,4239c <___vfprintf_internal_r+0x1e0c>
   420bc:	04000174 	movhi	r16,5
   420c0:	843ed704 	addi	r16,r16,-1188
   420c4:	00c000c4 	movi	r3,3
   420c8:	00bfdfc4 	movi	r2,-129
   420cc:	d8c02915 	stw	r3,164(sp)
   420d0:	90a4703a 	and	r18,r18,r2
   420d4:	df002783 	ldbu	fp,158(sp)
   420d8:	d8c02b15 	stw	r3,172(sp)
   420dc:	d8002a15 	stw	zero,168(sp)
   420e0:	d8003215 	stw	zero,200(sp)
   420e4:	003b0706 	br	40d04 <__alt_data_end+0xfffced04>
   420e8:	d8c02e17 	ldw	r3,184(sp)
   420ec:	1cc00017 	ldw	r19,0(r3)
   420f0:	18c00104 	addi	r3,r3,4
   420f4:	d8c02e15 	stw	r3,184(sp)
   420f8:	982dd7fa 	srai	r22,r19,31
   420fc:	b005883a 	mov	r2,r22
   42100:	003a7706 	br	40ae0 <__alt_data_end+0xfffceae0>
   42104:	d8c02e17 	ldw	r3,184(sp)
   42108:	d9002f17 	ldw	r4,188(sp)
   4210c:	18800017 	ldw	r2,0(r3)
   42110:	18c00104 	addi	r3,r3,4
   42114:	d8c02e15 	stw	r3,184(sp)
   42118:	11000015 	stw	r4,0(r2)
   4211c:	00395406 	br	40670 <__alt_data_end+0xfffce670>
   42120:	d9002e17 	ldw	r4,184(sp)
   42124:	002d883a 	mov	r22,zero
   42128:	24c00017 	ldw	r19,0(r4)
   4212c:	21000104 	addi	r4,r4,4
   42130:	d9002e15 	stw	r4,184(sp)
   42134:	003c0706 	br	41154 <__alt_data_end+0xfffcf154>
   42138:	d9402e17 	ldw	r5,184(sp)
   4213c:	d8c02a17 	ldw	r3,168(sp)
   42140:	002d883a 	mov	r22,zero
   42144:	28800104 	addi	r2,r5,4
   42148:	2cc0000b 	ldhu	r19,0(r5)
   4214c:	183dc10e 	bge	r3,zero,41854 <__alt_data_end+0xfffcf854>
   42150:	003f7506 	br	41f28 <__alt_data_end+0xfffcff28>
   42154:	04000174 	movhi	r16,5
   42158:	843ed504 	addi	r16,r16,-1196
   4215c:	003aa706 	br	40bfc <__alt_data_end+0xfffcebfc>
   42160:	d9002d17 	ldw	r4,180(sp)
   42164:	d9801e04 	addi	r6,sp,120
   42168:	b80b883a 	mov	r5,r23
   4216c:	0047d700 	call	47d70 <__sprint_r>
   42170:	103a0b1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   42174:	dc402617 	ldw	r17,152(sp)
   42178:	d8c02017 	ldw	r3,128(sp)
   4217c:	da000404 	addi	r8,sp,16
   42180:	003f9c06 	br	41ff4 <__alt_data_end+0xfffcfff4>
   42184:	ac400043 	ldbu	r17,1(r21)
   42188:	84000814 	ori	r16,r16,32
   4218c:	ad400044 	addi	r21,r21,1
   42190:	8c403fcc 	andi	r17,r17,255
   42194:	8c40201c 	xori	r17,r17,128
   42198:	8c7fe004 	addi	r17,r17,-128
   4219c:	00395e06 	br	40718 <__alt_data_end+0xfffce718>
   421a0:	d8c02e15 	stw	r3,184(sp)
   421a4:	0039883a 	mov	fp,zero
   421a8:	003e3506 	br	41a80 <__alt_data_end+0xfffcfa80>
   421ac:	d9002d17 	ldw	r4,180(sp)
   421b0:	d9801e04 	addi	r6,sp,120
   421b4:	b80b883a 	mov	r5,r23
   421b8:	0047d700 	call	47d70 <__sprint_r>
   421bc:	1039f81e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   421c0:	d8c02017 	ldw	r3,128(sp)
   421c4:	da000404 	addi	r8,sp,16
   421c8:	003cd006 	br	4150c <__alt_data_end+0xfffcf50c>
   421cc:	8009883a 	mov	r4,r16
   421d0:	df003d15 	stw	fp,244(sp)
   421d4:	00404f80 	call	404f8 <strlen>
   421d8:	d8802b15 	stw	r2,172(sp)
   421dc:	da003d17 	ldw	r8,244(sp)
   421e0:	103c200e 	bge	r2,zero,41264 <__alt_data_end+0xfffcf264>
   421e4:	0005883a 	mov	r2,zero
   421e8:	003c1e06 	br	41264 <__alt_data_end+0xfffcf264>
   421ec:	d9002d17 	ldw	r4,180(sp)
   421f0:	d9801e04 	addi	r6,sp,120
   421f4:	b80b883a 	mov	r5,r23
   421f8:	0047d700 	call	47d70 <__sprint_r>
   421fc:	1039e81e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   42200:	d8c02017 	ldw	r3,128(sp)
   42204:	d8801f17 	ldw	r2,124(sp)
   42208:	da000404 	addi	r8,sp,16
   4220c:	d9403317 	ldw	r5,204(sp)
   42210:	10800044 	addi	r2,r2,1
   42214:	44000015 	stw	r16,0(r8)
   42218:	28c7883a 	add	r3,r5,r3
   4221c:	003b5b06 	br	40f8c <__alt_data_end+0xfffcef8c>
   42220:	01000174 	movhi	r4,5
   42224:	213ee984 	addi	r4,r4,-1114
   42228:	d9003515 	stw	r4,212(sp)
   4222c:	003af206 	br	40df8 <__alt_data_end+0xfffcedf8>
   42230:	013fffc4 	movi	r4,-1
   42234:	003a0806 	br	40a58 <__alt_data_end+0xfffcea58>
   42238:	0023883a 	mov	r17,zero
   4223c:	003d9d06 	br	418b4 <__alt_data_end+0xfffcf8b4>
   42240:	d9002d17 	ldw	r4,180(sp)
   42244:	d9801e04 	addi	r6,sp,120
   42248:	b80b883a 	mov	r5,r23
   4224c:	0047d700 	call	47d70 <__sprint_r>
   42250:	1039d31e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   42254:	d8c02017 	ldw	r3,128(sp)
   42258:	da000404 	addi	r8,sp,16
   4225c:	003d9406 	br	418b0 <__alt_data_end+0xfffcf8b0>
   42260:	01000174 	movhi	r4,5
   42264:	213ee584 	addi	r4,r4,-1130
   42268:	d9002c15 	stw	r4,176(sp)
   4226c:	d9002c17 	ldw	r4,176(sp)
   42270:	1c47883a 	add	r3,r3,r17
   42274:	10800044 	addi	r2,r2,1
   42278:	41000015 	stw	r4,0(r8)
   4227c:	44400115 	stw	r17,4(r8)
   42280:	d8c02015 	stw	r3,128(sp)
   42284:	d8801f15 	stw	r2,124(sp)
   42288:	010001c4 	movi	r4,7
   4228c:	20bfd716 	blt	r4,r2,421ec <__alt_data_end+0xfffd01ec>
   42290:	42000204 	addi	r8,r8,8
   42294:	003fdd06 	br	4220c <__alt_data_end+0xfffd020c>
   42298:	d9002d17 	ldw	r4,180(sp)
   4229c:	d9801e04 	addi	r6,sp,120
   422a0:	b80b883a 	mov	r5,r23
   422a4:	0047d700 	call	47d70 <__sprint_r>
   422a8:	1039bd1e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   422ac:	d8802617 	ldw	r2,152(sp)
   422b0:	d8c02017 	ldw	r3,128(sp)
   422b4:	da000404 	addi	r8,sp,16
   422b8:	003e1006 	br	41afc <__alt_data_end+0xfffcfafc>
   422bc:	00800044 	movi	r2,1
   422c0:	10803fcc 	andi	r2,r2,255
   422c4:	00c00044 	movi	r3,1
   422c8:	10fa0d26 	beq	r2,r3,40b00 <__alt_data_end+0xfffceb00>
   422cc:	00c00084 	movi	r3,2
   422d0:	10fbaf26 	beq	r2,r3,41190 <__alt_data_end+0xfffcf190>
   422d4:	003a6d06 	br	40c8c <__alt_data_end+0xfffcec8c>
   422d8:	01000174 	movhi	r4,5
   422dc:	213ee984 	addi	r4,r4,-1114
   422e0:	d9003515 	stw	r4,212(sp)
   422e4:	003b5406 	br	41038 <__alt_data_end+0xfffcf038>
   422e8:	d8802a17 	ldw	r2,168(sp)
   422ec:	00c00184 	movi	r3,6
   422f0:	1880012e 	bgeu	r3,r2,422f8 <___vfprintf_internal_r+0x1d68>
   422f4:	1805883a 	mov	r2,r3
   422f8:	d8802b15 	stw	r2,172(sp)
   422fc:	1000ef16 	blt	r2,zero,426bc <___vfprintf_internal_r+0x212c>
   42300:	04000174 	movhi	r16,5
   42304:	d8802915 	stw	r2,164(sp)
   42308:	dcc02e15 	stw	r19,184(sp)
   4230c:	d8002a15 	stw	zero,168(sp)
   42310:	d8003215 	stw	zero,200(sp)
   42314:	843ee304 	addi	r16,r16,-1140
   42318:	0039883a 	mov	fp,zero
   4231c:	003a8006 	br	40d20 <__alt_data_end+0xfffced20>
   42320:	0021883a 	mov	r16,zero
   42324:	003e0706 	br	41b44 <__alt_data_end+0xfffcfb44>
   42328:	d9002d17 	ldw	r4,180(sp)
   4232c:	d9801e04 	addi	r6,sp,120
   42330:	b80b883a 	mov	r5,r23
   42334:	0047d700 	call	47d70 <__sprint_r>
   42338:	1039991e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   4233c:	d8802617 	ldw	r2,152(sp)
   42340:	d9403317 	ldw	r5,204(sp)
   42344:	d8c02017 	ldw	r3,128(sp)
   42348:	da000404 	addi	r8,sp,16
   4234c:	2885c83a 	sub	r2,r5,r2
   42350:	003dfb06 	br	41b40 <__alt_data_end+0xfffcfb40>
   42354:	9080004c 	andi	r2,r18,1
   42358:	103e8f1e 	bne	r2,zero,41d98 <__alt_data_end+0xfffcfd98>
   4235c:	d8802117 	ldw	r2,132(sp)
   42360:	003e9e06 	br	41ddc <__alt_data_end+0xfffcfddc>
   42364:	1025883a 	mov	r18,r2
   42368:	0039883a 	mov	fp,zero
   4236c:	00800084 	movi	r2,2
   42370:	003fd306 	br	422c0 <__alt_data_end+0xfffd02c0>
   42374:	07000b44 	movi	fp,45
   42378:	df002785 	stb	fp,158(sp)
   4237c:	003a1b06 	br	40bec <__alt_data_end+0xfffcebec>
   42380:	00c00b44 	movi	r3,45
   42384:	d8c02785 	stb	r3,158(sp)
   42388:	d8802915 	stw	r2,164(sp)
   4238c:	dc802c17 	ldw	r18,176(sp)
   42390:	d8002a15 	stw	zero,168(sp)
   42394:	07000b44 	movi	fp,45
   42398:	003a5e06 	br	40d14 <__alt_data_end+0xfffced14>
   4239c:	04000174 	movhi	r16,5
   423a0:	843ed804 	addi	r16,r16,-1184
   423a4:	003f4706 	br	420c4 <__alt_data_end+0xfffd00c4>
   423a8:	d9002e17 	ldw	r4,184(sp)
   423ac:	d9402f17 	ldw	r5,188(sp)
   423b0:	20800017 	ldw	r2,0(r4)
   423b4:	21000104 	addi	r4,r4,4
   423b8:	d9002e15 	stw	r4,184(sp)
   423bc:	11400015 	stw	r5,0(r2)
   423c0:	0038ab06 	br	40670 <__alt_data_end+0xfffce670>
   423c4:	dd802617 	ldw	r22,152(sp)
   423c8:	00bfff44 	movi	r2,-3
   423cc:	b0801c16 	blt	r22,r2,42440 <___vfprintf_internal_r+0x1eb0>
   423d0:	d9402a17 	ldw	r5,168(sp)
   423d4:	2d801a16 	blt	r5,r22,42440 <___vfprintf_internal_r+0x1eb0>
   423d8:	dd803215 	stw	r22,200(sp)
   423dc:	003e8906 	br	41e04 <__alt_data_end+0xfffcfe04>
   423e0:	01000174 	movhi	r4,5
   423e4:	213ee584 	addi	r4,r4,-1130
   423e8:	d9002c15 	stw	r4,176(sp)
   423ec:	003c9106 	br	41634 <__alt_data_end+0xfffcf634>
   423f0:	e005883a 	mov	r2,fp
   423f4:	003e7906 	br	41ddc <__alt_data_end+0xfffcfddc>
   423f8:	d9002a17 	ldw	r4,168(sp)
   423fc:	df002783 	ldbu	fp,158(sp)
   42400:	dcc02e15 	stw	r19,184(sp)
   42404:	d9002915 	stw	r4,164(sp)
   42408:	d9002b15 	stw	r4,172(sp)
   4240c:	d8002a15 	stw	zero,168(sp)
   42410:	d8003215 	stw	zero,200(sp)
   42414:	003a3b06 	br	40d04 <__alt_data_end+0xfffced04>
   42418:	9080004c 	andi	r2,r18,1
   4241c:	0039883a 	mov	fp,zero
   42420:	10000426 	beq	r2,zero,42434 <___vfprintf_internal_r+0x1ea4>
   42424:	00800c04 	movi	r2,48
   42428:	dc001dc4 	addi	r16,sp,119
   4242c:	d8801dc5 	stb	r2,119(sp)
   42430:	003b6406 	br	411c4 <__alt_data_end+0xfffcf1c4>
   42434:	d8002b15 	stw	zero,172(sp)
   42438:	dc001e04 	addi	r16,sp,120
   4243c:	003a2b06 	br	40cec <__alt_data_end+0xfffcecec>
   42440:	8c7fff84 	addi	r17,r17,-2
   42444:	b5bfffc4 	addi	r22,r22,-1
   42448:	dd802615 	stw	r22,152(sp)
   4244c:	dc4022c5 	stb	r17,139(sp)
   42450:	b000bf16 	blt	r22,zero,42750 <___vfprintf_internal_r+0x21c0>
   42454:	00800ac4 	movi	r2,43
   42458:	d8802305 	stb	r2,140(sp)
   4245c:	00800244 	movi	r2,9
   42460:	15807016 	blt	r2,r22,42624 <___vfprintf_internal_r+0x2094>
   42464:	00800c04 	movi	r2,48
   42468:	b5800c04 	addi	r22,r22,48
   4246c:	d8802345 	stb	r2,141(sp)
   42470:	dd802385 	stb	r22,142(sp)
   42474:	d88023c4 	addi	r2,sp,143
   42478:	df0022c4 	addi	fp,sp,139
   4247c:	d8c03317 	ldw	r3,204(sp)
   42480:	1739c83a 	sub	fp,r2,fp
   42484:	d9003317 	ldw	r4,204(sp)
   42488:	e0c7883a 	add	r3,fp,r3
   4248c:	df003a15 	stw	fp,232(sp)
   42490:	d8c02b15 	stw	r3,172(sp)
   42494:	00800044 	movi	r2,1
   42498:	1100b30e 	bge	r2,r4,42768 <___vfprintf_internal_r+0x21d8>
   4249c:	d8c02b17 	ldw	r3,172(sp)
   424a0:	18c00044 	addi	r3,r3,1
   424a4:	d8c02b15 	stw	r3,172(sp)
   424a8:	1805883a 	mov	r2,r3
   424ac:	1800ac16 	blt	r3,zero,42760 <___vfprintf_internal_r+0x21d0>
   424b0:	d8003215 	stw	zero,200(sp)
   424b4:	003e5d06 	br	41e2c <__alt_data_end+0xfffcfe2c>
   424b8:	d9002d17 	ldw	r4,180(sp)
   424bc:	d9801e04 	addi	r6,sp,120
   424c0:	b80b883a 	mov	r5,r23
   424c4:	0047d700 	call	47d70 <__sprint_r>
   424c8:	1039351e 	bne	r2,zero,409a0 <__alt_data_end+0xfffce9a0>
   424cc:	dc402617 	ldw	r17,152(sp)
   424d0:	d8c02017 	ldw	r3,128(sp)
   424d4:	d8801f17 	ldw	r2,124(sp)
   424d8:	da000404 	addi	r8,sp,16
   424dc:	003ed606 	br	42038 <__alt_data_end+0xfffd0038>
   424e0:	182b883a 	mov	r21,r3
   424e4:	d8002a15 	stw	zero,168(sp)
   424e8:	00388c06 	br	4071c <__alt_data_end+0xfffce71c>
   424ec:	d8802a17 	ldw	r2,168(sp)
   424f0:	103e071e 	bne	r2,zero,41d10 <__alt_data_end+0xfffcfd10>
   424f4:	dc002a15 	stw	r16,168(sp)
   424f8:	003e0506 	br	41d10 <__alt_data_end+0xfffcfd10>
   424fc:	d9002a17 	ldw	r4,168(sp)
   42500:	20c00044 	addi	r3,r4,1
   42504:	003e0f06 	br	41d44 <__alt_data_end+0xfffcfd44>
   42508:	01400184 	movi	r5,6
   4250c:	d9402a15 	stw	r5,168(sp)
   42510:	003dff06 	br	41d10 <__alt_data_end+0xfffcfd10>
   42514:	d8802104 	addi	r2,sp,132
   42518:	d8800315 	stw	r2,12(sp)
   4251c:	d8802504 	addi	r2,sp,148
   42520:	d8800215 	stw	r2,8(sp)
   42524:	d8802604 	addi	r2,sp,152
   42528:	d8800115 	stw	r2,4(sp)
   4252c:	d8802a17 	ldw	r2,168(sp)
   42530:	d9403617 	ldw	r5,216(sp)
   42534:	d9002d17 	ldw	r4,180(sp)
   42538:	d8800015 	stw	r2,0(sp)
   4253c:	01c000c4 	movi	r7,3
   42540:	980d883a 	mov	r6,r19
   42544:	da003d15 	stw	r8,244(sp)
   42548:	0042cc00 	call	42cc0 <_dtoa_r>
   4254c:	d8c02a17 	ldw	r3,168(sp)
   42550:	da003d17 	ldw	r8,244(sp)
   42554:	1021883a 	mov	r16,r2
   42558:	10f9883a 	add	fp,r2,r3
   4255c:	81000007 	ldb	r4,0(r16)
   42560:	00800c04 	movi	r2,48
   42564:	20805e26 	beq	r4,r2,426e0 <___vfprintf_internal_r+0x2150>
   42568:	d8c02617 	ldw	r3,152(sp)
   4256c:	e0f9883a 	add	fp,fp,r3
   42570:	003e0a06 	br	41d9c <__alt_data_end+0xfffcfd9c>
   42574:	00c00b44 	movi	r3,45
   42578:	24e0003c 	xorhi	r19,r4,32768
   4257c:	d8c02905 	stb	r3,164(sp)
   42580:	003de906 	br	41d28 <__alt_data_end+0xfffcfd28>
   42584:	d8c03217 	ldw	r3,200(sp)
   42588:	00c07a0e 	bge	zero,r3,42774 <___vfprintf_internal_r+0x21e4>
   4258c:	00800044 	movi	r2,1
   42590:	d9003317 	ldw	r4,204(sp)
   42594:	1105883a 	add	r2,r2,r4
   42598:	d8802b15 	stw	r2,172(sp)
   4259c:	10004e16 	blt	r2,zero,426d8 <___vfprintf_internal_r+0x2148>
   425a0:	044019c4 	movi	r17,103
   425a4:	003e2106 	br	41e2c <__alt_data_end+0xfffcfe2c>
   425a8:	d9002a17 	ldw	r4,168(sp)
   425ac:	d8802104 	addi	r2,sp,132
   425b0:	d8800315 	stw	r2,12(sp)
   425b4:	d9000015 	stw	r4,0(sp)
   425b8:	d8802504 	addi	r2,sp,148
   425bc:	d9403617 	ldw	r5,216(sp)
   425c0:	d9002d17 	ldw	r4,180(sp)
   425c4:	d8800215 	stw	r2,8(sp)
   425c8:	d8802604 	addi	r2,sp,152
   425cc:	d8800115 	stw	r2,4(sp)
   425d0:	01c000c4 	movi	r7,3
   425d4:	980d883a 	mov	r6,r19
   425d8:	da003d15 	stw	r8,244(sp)
   425dc:	0042cc00 	call	42cc0 <_dtoa_r>
   425e0:	d8c02a17 	ldw	r3,168(sp)
   425e4:	da003d17 	ldw	r8,244(sp)
   425e8:	1021883a 	mov	r16,r2
   425ec:	00801184 	movi	r2,70
   425f0:	80f9883a 	add	fp,r16,r3
   425f4:	88bfd926 	beq	r17,r2,4255c <__alt_data_end+0xfffd055c>
   425f8:	003de806 	br	41d9c <__alt_data_end+0xfffcfd9c>
   425fc:	d9002a17 	ldw	r4,168(sp)
   42600:	00c04d0e 	bge	zero,r3,42738 <___vfprintf_internal_r+0x21a8>
   42604:	2000441e 	bne	r4,zero,42718 <___vfprintf_internal_r+0x2188>
   42608:	9480004c 	andi	r18,r18,1
   4260c:	9000421e 	bne	r18,zero,42718 <___vfprintf_internal_r+0x2188>
   42610:	1805883a 	mov	r2,r3
   42614:	18006f16 	blt	r3,zero,427d4 <___vfprintf_internal_r+0x2244>
   42618:	d8c03217 	ldw	r3,200(sp)
   4261c:	d8c02b15 	stw	r3,172(sp)
   42620:	003e0206 	br	41e2c <__alt_data_end+0xfffcfe2c>
   42624:	df0022c4 	addi	fp,sp,139
   42628:	dc002a15 	stw	r16,168(sp)
   4262c:	4027883a 	mov	r19,r8
   42630:	e021883a 	mov	r16,fp
   42634:	b009883a 	mov	r4,r22
   42638:	01400284 	movi	r5,10
   4263c:	004a8fc0 	call	4a8fc <__modsi3>
   42640:	10800c04 	addi	r2,r2,48
   42644:	843fffc4 	addi	r16,r16,-1
   42648:	b009883a 	mov	r4,r22
   4264c:	01400284 	movi	r5,10
   42650:	80800005 	stb	r2,0(r16)
   42654:	004a8780 	call	4a878 <__divsi3>
   42658:	102d883a 	mov	r22,r2
   4265c:	00800244 	movi	r2,9
   42660:	15bff416 	blt	r2,r22,42634 <__alt_data_end+0xfffd0634>
   42664:	9811883a 	mov	r8,r19
   42668:	b0800c04 	addi	r2,r22,48
   4266c:	8027883a 	mov	r19,r16
   42670:	997fffc4 	addi	r5,r19,-1
   42674:	98bfffc5 	stb	r2,-1(r19)
   42678:	dc002a17 	ldw	r16,168(sp)
   4267c:	2f006d2e 	bgeu	r5,fp,42834 <___vfprintf_internal_r+0x22a4>
   42680:	d9c02384 	addi	r7,sp,142
   42684:	3ccfc83a 	sub	r7,r7,r19
   42688:	d9002344 	addi	r4,sp,141
   4268c:	e1cf883a 	add	r7,fp,r7
   42690:	00000106 	br	42698 <___vfprintf_internal_r+0x2108>
   42694:	28800003 	ldbu	r2,0(r5)
   42698:	20800005 	stb	r2,0(r4)
   4269c:	21000044 	addi	r4,r4,1
   426a0:	29400044 	addi	r5,r5,1
   426a4:	393ffb1e 	bne	r7,r4,42694 <__alt_data_end+0xfffd0694>
   426a8:	d8802304 	addi	r2,sp,140
   426ac:	14c5c83a 	sub	r2,r2,r19
   426b0:	d8c02344 	addi	r3,sp,141
   426b4:	1885883a 	add	r2,r3,r2
   426b8:	003f7006 	br	4247c <__alt_data_end+0xfffd047c>
   426bc:	0005883a 	mov	r2,zero
   426c0:	003f0f06 	br	42300 <__alt_data_end+0xfffd0300>
   426c4:	d8c03217 	ldw	r3,200(sp)
   426c8:	18c00044 	addi	r3,r3,1
   426cc:	d8c02b15 	stw	r3,172(sp)
   426d0:	1805883a 	mov	r2,r3
   426d4:	183fb20e 	bge	r3,zero,425a0 <__alt_data_end+0xfffd05a0>
   426d8:	0005883a 	mov	r2,zero
   426dc:	003fb006 	br	425a0 <__alt_data_end+0xfffd05a0>
   426e0:	d9003617 	ldw	r4,216(sp)
   426e4:	000d883a 	mov	r6,zero
   426e8:	000f883a 	mov	r7,zero
   426ec:	980b883a 	mov	r5,r19
   426f0:	d8c03c15 	stw	r3,240(sp)
   426f4:	da003d15 	stw	r8,244(sp)
   426f8:	004bcd00 	call	4bcd0 <__eqdf2>
   426fc:	d8c03c17 	ldw	r3,240(sp)
   42700:	da003d17 	ldw	r8,244(sp)
   42704:	103f9826 	beq	r2,zero,42568 <__alt_data_end+0xfffd0568>
   42708:	00800044 	movi	r2,1
   4270c:	10c7c83a 	sub	r3,r2,r3
   42710:	d8c02615 	stw	r3,152(sp)
   42714:	003f9506 	br	4256c <__alt_data_end+0xfffd056c>
   42718:	d9002a17 	ldw	r4,168(sp)
   4271c:	d8c03217 	ldw	r3,200(sp)
   42720:	20800044 	addi	r2,r4,1
   42724:	1885883a 	add	r2,r3,r2
   42728:	d8802b15 	stw	r2,172(sp)
   4272c:	103dbf0e 	bge	r2,zero,41e2c <__alt_data_end+0xfffcfe2c>
   42730:	0005883a 	mov	r2,zero
   42734:	003dbd06 	br	41e2c <__alt_data_end+0xfffcfe2c>
   42738:	2000201e 	bne	r4,zero,427bc <___vfprintf_internal_r+0x222c>
   4273c:	9480004c 	andi	r18,r18,1
   42740:	90001e1e 	bne	r18,zero,427bc <___vfprintf_internal_r+0x222c>
   42744:	00800044 	movi	r2,1
   42748:	d8802b15 	stw	r2,172(sp)
   4274c:	003db706 	br	41e2c <__alt_data_end+0xfffcfe2c>
   42750:	00800b44 	movi	r2,45
   42754:	05adc83a 	sub	r22,zero,r22
   42758:	d8802305 	stb	r2,140(sp)
   4275c:	003f3f06 	br	4245c <__alt_data_end+0xfffd045c>
   42760:	0005883a 	mov	r2,zero
   42764:	003f5206 	br	424b0 <__alt_data_end+0xfffd04b0>
   42768:	90a4703a 	and	r18,r18,r2
   4276c:	903f4e26 	beq	r18,zero,424a8 <__alt_data_end+0xfffd04a8>
   42770:	003f4a06 	br	4249c <__alt_data_end+0xfffd049c>
   42774:	00800084 	movi	r2,2
   42778:	10c5c83a 	sub	r2,r2,r3
   4277c:	003f8406 	br	42590 <__alt_data_end+0xfffd0590>
   42780:	d9402e17 	ldw	r5,184(sp)
   42784:	d9002e17 	ldw	r4,184(sp)
   42788:	ac400043 	ldbu	r17,1(r21)
   4278c:	29400017 	ldw	r5,0(r5)
   42790:	20800104 	addi	r2,r4,4
   42794:	d8802e15 	stw	r2,184(sp)
   42798:	d9402a15 	stw	r5,168(sp)
   4279c:	182b883a 	mov	r21,r3
   427a0:	283e7b0e 	bge	r5,zero,42190 <__alt_data_end+0xfffd0190>
   427a4:	8c403fcc 	andi	r17,r17,255
   427a8:	017fffc4 	movi	r5,-1
   427ac:	8c40201c 	xori	r17,r17,128
   427b0:	d9402a15 	stw	r5,168(sp)
   427b4:	8c7fe004 	addi	r17,r17,-128
   427b8:	0037d706 	br	40718 <__alt_data_end+0xfffce718>
   427bc:	d8c02a17 	ldw	r3,168(sp)
   427c0:	18c00084 	addi	r3,r3,2
   427c4:	d8c02b15 	stw	r3,172(sp)
   427c8:	1805883a 	mov	r2,r3
   427cc:	183d970e 	bge	r3,zero,41e2c <__alt_data_end+0xfffcfe2c>
   427d0:	003fd706 	br	42730 <__alt_data_end+0xfffd0730>
   427d4:	0005883a 	mov	r2,zero
   427d8:	003f8f06 	br	42618 <__alt_data_end+0xfffd0618>
   427dc:	9080004c 	andi	r2,r18,1
   427e0:	103f821e 	bne	r2,zero,425ec <__alt_data_end+0xfffd05ec>
   427e4:	d8802117 	ldw	r2,132(sp)
   427e8:	1405c83a 	sub	r2,r2,r16
   427ec:	d8803315 	stw	r2,204(sp)
   427f0:	b47ef426 	beq	r22,r17,423c4 <__alt_data_end+0xfffd03c4>
   427f4:	dd802617 	ldw	r22,152(sp)
   427f8:	003f1206 	br	42444 <__alt_data_end+0xfffd0444>
   427fc:	d8c02b03 	ldbu	r3,172(sp)
   42800:	d8c02785 	stb	r3,158(sp)
   42804:	0038df06 	br	40b84 <__alt_data_end+0xfffceb84>
   42808:	d8c02b03 	ldbu	r3,172(sp)
   4280c:	d8c02785 	stb	r3,158(sp)
   42810:	0038aa06 	br	40abc <__alt_data_end+0xfffceabc>
   42814:	d8c02b03 	ldbu	r3,172(sp)
   42818:	d8c02785 	stb	r3,158(sp)
   4281c:	003a4306 	br	4112c <__alt_data_end+0xfffcf12c>
   42820:	d8c02b03 	ldbu	r3,172(sp)
   42824:	d8c02785 	stb	r3,158(sp)
   42828:	003af506 	br	41400 <__alt_data_end+0xfffcf400>
   4282c:	0005883a 	mov	r2,zero
   42830:	003d7b06 	br	41e20 <__alt_data_end+0xfffcfe20>
   42834:	d8802344 	addi	r2,sp,141
   42838:	003f1006 	br	4247c <__alt_data_end+0xfffd047c>
   4283c:	d8c02b03 	ldbu	r3,172(sp)
   42840:	d8c02785 	stb	r3,158(sp)
   42844:	0038fd06 	br	40c3c <__alt_data_end+0xfffcec3c>
   42848:	d8c02b03 	ldbu	r3,172(sp)
   4284c:	d8c02785 	stb	r3,158(sp)
   42850:	003a9706 	br	412b0 <__alt_data_end+0xfffcf2b0>
   42854:	d8c02b03 	ldbu	r3,172(sp)
   42858:	d8c02785 	stb	r3,158(sp)
   4285c:	003a1806 	br	410c0 <__alt_data_end+0xfffcf0c0>
   42860:	d8c02b03 	ldbu	r3,172(sp)
   42864:	d8c02785 	stb	r3,158(sp)
   42868:	003abe06 	br	41364 <__alt_data_end+0xfffcf364>

0004286c <__vfprintf_internal>:
   4286c:	00800174 	movhi	r2,5
   42870:	10863c04 	addi	r2,r2,6384
   42874:	300f883a 	mov	r7,r6
   42878:	280d883a 	mov	r6,r5
   4287c:	200b883a 	mov	r5,r4
   42880:	11000017 	ldw	r4,0(r2)
   42884:	00405901 	jmpi	40590 <___vfprintf_internal_r>

00042888 <__sbprintf>:
   42888:	2880030b 	ldhu	r2,12(r5)
   4288c:	2ac01917 	ldw	r11,100(r5)
   42890:	2a80038b 	ldhu	r10,14(r5)
   42894:	2a400717 	ldw	r9,28(r5)
   42898:	2a000917 	ldw	r8,36(r5)
   4289c:	defee204 	addi	sp,sp,-1144
   428a0:	00c10004 	movi	r3,1024
   428a4:	dc011a15 	stw	r16,1128(sp)
   428a8:	10bfff4c 	andi	r2,r2,65533
   428ac:	2821883a 	mov	r16,r5
   428b0:	d8cb883a 	add	r5,sp,r3
   428b4:	dc811c15 	stw	r18,1136(sp)
   428b8:	dc411b15 	stw	r17,1132(sp)
   428bc:	dfc11d15 	stw	ra,1140(sp)
   428c0:	2025883a 	mov	r18,r4
   428c4:	d881030d 	sth	r2,1036(sp)
   428c8:	dac11915 	stw	r11,1124(sp)
   428cc:	da81038d 	sth	r10,1038(sp)
   428d0:	da410715 	stw	r9,1052(sp)
   428d4:	da010915 	stw	r8,1060(sp)
   428d8:	dec10015 	stw	sp,1024(sp)
   428dc:	dec10415 	stw	sp,1040(sp)
   428e0:	d8c10215 	stw	r3,1032(sp)
   428e4:	d8c10515 	stw	r3,1044(sp)
   428e8:	d8010615 	stw	zero,1048(sp)
   428ec:	00405900 	call	40590 <___vfprintf_internal_r>
   428f0:	1023883a 	mov	r17,r2
   428f4:	10000416 	blt	r2,zero,42908 <__sbprintf+0x80>
   428f8:	d9410004 	addi	r5,sp,1024
   428fc:	9009883a 	mov	r4,r18
   42900:	00445640 	call	44564 <_fflush_r>
   42904:	10000d1e 	bne	r2,zero,4293c <__sbprintf+0xb4>
   42908:	d881030b 	ldhu	r2,1036(sp)
   4290c:	1080100c 	andi	r2,r2,64
   42910:	10000326 	beq	r2,zero,42920 <__sbprintf+0x98>
   42914:	8080030b 	ldhu	r2,12(r16)
   42918:	10801014 	ori	r2,r2,64
   4291c:	8080030d 	sth	r2,12(r16)
   42920:	8805883a 	mov	r2,r17
   42924:	dfc11d17 	ldw	ra,1140(sp)
   42928:	dc811c17 	ldw	r18,1136(sp)
   4292c:	dc411b17 	ldw	r17,1132(sp)
   42930:	dc011a17 	ldw	r16,1128(sp)
   42934:	dec11e04 	addi	sp,sp,1144
   42938:	f800283a 	ret
   4293c:	047fffc4 	movi	r17,-1
   42940:	003ff106 	br	42908 <__alt_data_end+0xfffd0908>

00042944 <__swsetup_r>:
   42944:	00800174 	movhi	r2,5
   42948:	defffd04 	addi	sp,sp,-12
   4294c:	10863c04 	addi	r2,r2,6384
   42950:	dc400115 	stw	r17,4(sp)
   42954:	2023883a 	mov	r17,r4
   42958:	11000017 	ldw	r4,0(r2)
   4295c:	dc000015 	stw	r16,0(sp)
   42960:	dfc00215 	stw	ra,8(sp)
   42964:	2821883a 	mov	r16,r5
   42968:	20000226 	beq	r4,zero,42974 <__swsetup_r+0x30>
   4296c:	20800e17 	ldw	r2,56(r4)
   42970:	10003126 	beq	r2,zero,42a38 <__swsetup_r+0xf4>
   42974:	8080030b 	ldhu	r2,12(r16)
   42978:	10c0020c 	andi	r3,r2,8
   4297c:	1009883a 	mov	r4,r2
   42980:	18000f26 	beq	r3,zero,429c0 <__swsetup_r+0x7c>
   42984:	80c00417 	ldw	r3,16(r16)
   42988:	18001526 	beq	r3,zero,429e0 <__swsetup_r+0x9c>
   4298c:	1100004c 	andi	r4,r2,1
   42990:	20001c1e 	bne	r4,zero,42a04 <__swsetup_r+0xc0>
   42994:	1080008c 	andi	r2,r2,2
   42998:	1000291e 	bne	r2,zero,42a40 <__swsetup_r+0xfc>
   4299c:	80800517 	ldw	r2,20(r16)
   429a0:	80800215 	stw	r2,8(r16)
   429a4:	18001c26 	beq	r3,zero,42a18 <__swsetup_r+0xd4>
   429a8:	0005883a 	mov	r2,zero
   429ac:	dfc00217 	ldw	ra,8(sp)
   429b0:	dc400117 	ldw	r17,4(sp)
   429b4:	dc000017 	ldw	r16,0(sp)
   429b8:	dec00304 	addi	sp,sp,12
   429bc:	f800283a 	ret
   429c0:	2080040c 	andi	r2,r4,16
   429c4:	10002e26 	beq	r2,zero,42a80 <__swsetup_r+0x13c>
   429c8:	2080010c 	andi	r2,r4,4
   429cc:	10001e1e 	bne	r2,zero,42a48 <__swsetup_r+0x104>
   429d0:	80c00417 	ldw	r3,16(r16)
   429d4:	20800214 	ori	r2,r4,8
   429d8:	8080030d 	sth	r2,12(r16)
   429dc:	183feb1e 	bne	r3,zero,4298c <__alt_data_end+0xfffd098c>
   429e0:	1100a00c 	andi	r4,r2,640
   429e4:	01408004 	movi	r5,512
   429e8:	217fe826 	beq	r4,r5,4298c <__alt_data_end+0xfffd098c>
   429ec:	800b883a 	mov	r5,r16
   429f0:	8809883a 	mov	r4,r17
   429f4:	00455000 	call	45500 <__smakebuf_r>
   429f8:	8080030b 	ldhu	r2,12(r16)
   429fc:	80c00417 	ldw	r3,16(r16)
   42a00:	003fe206 	br	4298c <__alt_data_end+0xfffd098c>
   42a04:	80800517 	ldw	r2,20(r16)
   42a08:	80000215 	stw	zero,8(r16)
   42a0c:	0085c83a 	sub	r2,zero,r2
   42a10:	80800615 	stw	r2,24(r16)
   42a14:	183fe41e 	bne	r3,zero,429a8 <__alt_data_end+0xfffd09a8>
   42a18:	80c0030b 	ldhu	r3,12(r16)
   42a1c:	0005883a 	mov	r2,zero
   42a20:	1900200c 	andi	r4,r3,128
   42a24:	203fe126 	beq	r4,zero,429ac <__alt_data_end+0xfffd09ac>
   42a28:	18c01014 	ori	r3,r3,64
   42a2c:	80c0030d 	sth	r3,12(r16)
   42a30:	00bfffc4 	movi	r2,-1
   42a34:	003fdd06 	br	429ac <__alt_data_end+0xfffd09ac>
   42a38:	00449500 	call	44950 <__sinit>
   42a3c:	003fcd06 	br	42974 <__alt_data_end+0xfffd0974>
   42a40:	0005883a 	mov	r2,zero
   42a44:	003fd606 	br	429a0 <__alt_data_end+0xfffd09a0>
   42a48:	81400c17 	ldw	r5,48(r16)
   42a4c:	28000626 	beq	r5,zero,42a68 <__swsetup_r+0x124>
   42a50:	80801004 	addi	r2,r16,64
   42a54:	28800326 	beq	r5,r2,42a64 <__swsetup_r+0x120>
   42a58:	8809883a 	mov	r4,r17
   42a5c:	0044ac40 	call	44ac4 <_free_r>
   42a60:	8100030b 	ldhu	r4,12(r16)
   42a64:	80000c15 	stw	zero,48(r16)
   42a68:	80c00417 	ldw	r3,16(r16)
   42a6c:	00bff6c4 	movi	r2,-37
   42a70:	1108703a 	and	r4,r2,r4
   42a74:	80000115 	stw	zero,4(r16)
   42a78:	80c00015 	stw	r3,0(r16)
   42a7c:	003fd506 	br	429d4 <__alt_data_end+0xfffd09d4>
   42a80:	00800244 	movi	r2,9
   42a84:	88800015 	stw	r2,0(r17)
   42a88:	20801014 	ori	r2,r4,64
   42a8c:	8080030d 	sth	r2,12(r16)
   42a90:	00bfffc4 	movi	r2,-1
   42a94:	003fc506 	br	429ac <__alt_data_end+0xfffd09ac>

00042a98 <quorem>:
   42a98:	defff204 	addi	sp,sp,-56
   42a9c:	ddc00b15 	stw	r23,44(sp)
   42aa0:	20800417 	ldw	r2,16(r4)
   42aa4:	2dc00417 	ldw	r23,16(r5)
   42aa8:	dfc00d15 	stw	ra,52(sp)
   42aac:	df000c15 	stw	fp,48(sp)
   42ab0:	dd800a15 	stw	r22,40(sp)
   42ab4:	dd400915 	stw	r21,36(sp)
   42ab8:	dd000815 	stw	r20,32(sp)
   42abc:	dcc00715 	stw	r19,28(sp)
   42ac0:	dc800615 	stw	r18,24(sp)
   42ac4:	dc400515 	stw	r17,20(sp)
   42ac8:	dc000415 	stw	r16,16(sp)
   42acc:	15c07a16 	blt	r2,r23,42cb8 <quorem+0x220>
   42ad0:	bdffffc4 	addi	r23,r23,-1
   42ad4:	bde9883a 	add	r20,r23,r23
   42ad8:	28c00504 	addi	r3,r5,20
   42adc:	a529883a 	add	r20,r20,r20
   42ae0:	1d39883a 	add	fp,r3,r20
   42ae4:	24c00504 	addi	r19,r4,20
   42ae8:	d9400215 	stw	r5,8(sp)
   42aec:	9d29883a 	add	r20,r19,r20
   42af0:	e1400017 	ldw	r5,0(fp)
   42af4:	d9000015 	stw	r4,0(sp)
   42af8:	a1000017 	ldw	r4,0(r20)
   42afc:	29400044 	addi	r5,r5,1
   42b00:	d8c00115 	stw	r3,4(sp)
   42b04:	dd000315 	stw	r20,12(sp)
   42b08:	004a9700 	call	4a970 <__udivsi3>
   42b0c:	1025883a 	mov	r18,r2
   42b10:	10003026 	beq	r2,zero,42bd4 <quorem+0x13c>
   42b14:	dc400117 	ldw	r17,4(sp)
   42b18:	9829883a 	mov	r20,r19
   42b1c:	002d883a 	mov	r22,zero
   42b20:	0021883a 	mov	r16,zero
   42b24:	8d400017 	ldw	r21,0(r17)
   42b28:	900b883a 	mov	r5,r18
   42b2c:	8c400104 	addi	r17,r17,4
   42b30:	a93fffcc 	andi	r4,r21,65535
   42b34:	004aa2c0 	call	4aa2c <__mulsi3>
   42b38:	a808d43a 	srli	r4,r21,16
   42b3c:	900b883a 	mov	r5,r18
   42b40:	15ad883a 	add	r22,r2,r22
   42b44:	004aa2c0 	call	4aa2c <__mulsi3>
   42b48:	a1000017 	ldw	r4,0(r20)
   42b4c:	b00cd43a 	srli	r6,r22,16
   42b50:	b0ffffcc 	andi	r3,r22,65535
   42b54:	217fffcc 	andi	r5,r4,65535
   42b58:	2c21883a 	add	r16,r5,r16
   42b5c:	80c7c83a 	sub	r3,r16,r3
   42b60:	2008d43a 	srli	r4,r4,16
   42b64:	1185883a 	add	r2,r2,r6
   42b68:	1821d43a 	srai	r16,r3,16
   42b6c:	117fffcc 	andi	r5,r2,65535
   42b70:	2149c83a 	sub	r4,r4,r5
   42b74:	2421883a 	add	r16,r4,r16
   42b78:	8008943a 	slli	r4,r16,16
   42b7c:	18ffffcc 	andi	r3,r3,65535
   42b80:	102cd43a 	srli	r22,r2,16
   42b84:	20c8b03a 	or	r4,r4,r3
   42b88:	a1000015 	stw	r4,0(r20)
   42b8c:	8021d43a 	srai	r16,r16,16
   42b90:	a5000104 	addi	r20,r20,4
   42b94:	e47fe32e 	bgeu	fp,r17,42b24 <__alt_data_end+0xfffd0b24>
   42b98:	d8c00317 	ldw	r3,12(sp)
   42b9c:	18800017 	ldw	r2,0(r3)
   42ba0:	10000c1e 	bne	r2,zero,42bd4 <quorem+0x13c>
   42ba4:	18bfff04 	addi	r2,r3,-4
   42ba8:	9880082e 	bgeu	r19,r2,42bcc <quorem+0x134>
   42bac:	18ffff17 	ldw	r3,-4(r3)
   42bb0:	18000326 	beq	r3,zero,42bc0 <quorem+0x128>
   42bb4:	00000506 	br	42bcc <quorem+0x134>
   42bb8:	10c00017 	ldw	r3,0(r2)
   42bbc:	1800031e 	bne	r3,zero,42bcc <quorem+0x134>
   42bc0:	10bfff04 	addi	r2,r2,-4
   42bc4:	bdffffc4 	addi	r23,r23,-1
   42bc8:	98bffb36 	bltu	r19,r2,42bb8 <__alt_data_end+0xfffd0bb8>
   42bcc:	d8c00017 	ldw	r3,0(sp)
   42bd0:	1dc00415 	stw	r23,16(r3)
   42bd4:	d9400217 	ldw	r5,8(sp)
   42bd8:	d9000017 	ldw	r4,0(sp)
   42bdc:	0046cfc0 	call	46cfc <__mcmp>
   42be0:	10002816 	blt	r2,zero,42c84 <quorem+0x1ec>
   42be4:	dc400117 	ldw	r17,4(sp)
   42be8:	94800044 	addi	r18,r18,1
   42bec:	980d883a 	mov	r6,r19
   42bf0:	0007883a 	mov	r3,zero
   42bf4:	31000017 	ldw	r4,0(r6)
   42bf8:	89400017 	ldw	r5,0(r17)
   42bfc:	31800104 	addi	r6,r6,4
   42c00:	20bfffcc 	andi	r2,r4,65535
   42c04:	10c7883a 	add	r3,r2,r3
   42c08:	28bfffcc 	andi	r2,r5,65535
   42c0c:	1885c83a 	sub	r2,r3,r2
   42c10:	280ad43a 	srli	r5,r5,16
   42c14:	2008d43a 	srli	r4,r4,16
   42c18:	1007d43a 	srai	r3,r2,16
   42c1c:	10bfffcc 	andi	r2,r2,65535
   42c20:	2149c83a 	sub	r4,r4,r5
   42c24:	20c9883a 	add	r4,r4,r3
   42c28:	200a943a 	slli	r5,r4,16
   42c2c:	8c400104 	addi	r17,r17,4
   42c30:	2007d43a 	srai	r3,r4,16
   42c34:	2884b03a 	or	r2,r5,r2
   42c38:	30bfff15 	stw	r2,-4(r6)
   42c3c:	e47fed2e 	bgeu	fp,r17,42bf4 <__alt_data_end+0xfffd0bf4>
   42c40:	bdc5883a 	add	r2,r23,r23
   42c44:	1085883a 	add	r2,r2,r2
   42c48:	9887883a 	add	r3,r19,r2
   42c4c:	18800017 	ldw	r2,0(r3)
   42c50:	10000c1e 	bne	r2,zero,42c84 <quorem+0x1ec>
   42c54:	18bfff04 	addi	r2,r3,-4
   42c58:	9880082e 	bgeu	r19,r2,42c7c <quorem+0x1e4>
   42c5c:	18ffff17 	ldw	r3,-4(r3)
   42c60:	18000326 	beq	r3,zero,42c70 <quorem+0x1d8>
   42c64:	00000506 	br	42c7c <quorem+0x1e4>
   42c68:	10c00017 	ldw	r3,0(r2)
   42c6c:	1800031e 	bne	r3,zero,42c7c <quorem+0x1e4>
   42c70:	10bfff04 	addi	r2,r2,-4
   42c74:	bdffffc4 	addi	r23,r23,-1
   42c78:	98bffb36 	bltu	r19,r2,42c68 <__alt_data_end+0xfffd0c68>
   42c7c:	d8c00017 	ldw	r3,0(sp)
   42c80:	1dc00415 	stw	r23,16(r3)
   42c84:	9005883a 	mov	r2,r18
   42c88:	dfc00d17 	ldw	ra,52(sp)
   42c8c:	df000c17 	ldw	fp,48(sp)
   42c90:	ddc00b17 	ldw	r23,44(sp)
   42c94:	dd800a17 	ldw	r22,40(sp)
   42c98:	dd400917 	ldw	r21,36(sp)
   42c9c:	dd000817 	ldw	r20,32(sp)
   42ca0:	dcc00717 	ldw	r19,28(sp)
   42ca4:	dc800617 	ldw	r18,24(sp)
   42ca8:	dc400517 	ldw	r17,20(sp)
   42cac:	dc000417 	ldw	r16,16(sp)
   42cb0:	dec00e04 	addi	sp,sp,56
   42cb4:	f800283a 	ret
   42cb8:	0005883a 	mov	r2,zero
   42cbc:	003ff206 	br	42c88 <__alt_data_end+0xfffd0c88>

00042cc0 <_dtoa_r>:
   42cc0:	20801017 	ldw	r2,64(r4)
   42cc4:	deffde04 	addi	sp,sp,-136
   42cc8:	df002015 	stw	fp,128(sp)
   42ccc:	dcc01b15 	stw	r19,108(sp)
   42cd0:	dc801a15 	stw	r18,104(sp)
   42cd4:	dc401915 	stw	r17,100(sp)
   42cd8:	dc001815 	stw	r16,96(sp)
   42cdc:	dfc02115 	stw	ra,132(sp)
   42ce0:	ddc01f15 	stw	r23,124(sp)
   42ce4:	dd801e15 	stw	r22,120(sp)
   42ce8:	dd401d15 	stw	r21,116(sp)
   42cec:	dd001c15 	stw	r20,112(sp)
   42cf0:	d9c00315 	stw	r7,12(sp)
   42cf4:	2039883a 	mov	fp,r4
   42cf8:	3023883a 	mov	r17,r6
   42cfc:	2825883a 	mov	r18,r5
   42d00:	dc002417 	ldw	r16,144(sp)
   42d04:	3027883a 	mov	r19,r6
   42d08:	10000826 	beq	r2,zero,42d2c <_dtoa_r+0x6c>
   42d0c:	21801117 	ldw	r6,68(r4)
   42d10:	00c00044 	movi	r3,1
   42d14:	100b883a 	mov	r5,r2
   42d18:	1986983a 	sll	r3,r3,r6
   42d1c:	11800115 	stw	r6,4(r2)
   42d20:	10c00215 	stw	r3,8(r2)
   42d24:	00464200 	call	46420 <_Bfree>
   42d28:	e0001015 	stw	zero,64(fp)
   42d2c:	88002e16 	blt	r17,zero,42de8 <_dtoa_r+0x128>
   42d30:	80000015 	stw	zero,0(r16)
   42d34:	889ffc2c 	andhi	r2,r17,32752
   42d38:	00dffc34 	movhi	r3,32752
   42d3c:	10c01c26 	beq	r2,r3,42db0 <_dtoa_r+0xf0>
   42d40:	000d883a 	mov	r6,zero
   42d44:	000f883a 	mov	r7,zero
   42d48:	9009883a 	mov	r4,r18
   42d4c:	980b883a 	mov	r5,r19
   42d50:	004bcd00 	call	4bcd0 <__eqdf2>
   42d54:	10002b1e 	bne	r2,zero,42e04 <_dtoa_r+0x144>
   42d58:	d9c02317 	ldw	r7,140(sp)
   42d5c:	00800044 	movi	r2,1
   42d60:	38800015 	stw	r2,0(r7)
   42d64:	d8802517 	ldw	r2,148(sp)
   42d68:	10019e26 	beq	r2,zero,433e4 <_dtoa_r+0x724>
   42d6c:	d8c02517 	ldw	r3,148(sp)
   42d70:	00800174 	movhi	r2,5
   42d74:	10bee544 	addi	r2,r2,-1131
   42d78:	18800015 	stw	r2,0(r3)
   42d7c:	10bfffc4 	addi	r2,r2,-1
   42d80:	dfc02117 	ldw	ra,132(sp)
   42d84:	df002017 	ldw	fp,128(sp)
   42d88:	ddc01f17 	ldw	r23,124(sp)
   42d8c:	dd801e17 	ldw	r22,120(sp)
   42d90:	dd401d17 	ldw	r21,116(sp)
   42d94:	dd001c17 	ldw	r20,112(sp)
   42d98:	dcc01b17 	ldw	r19,108(sp)
   42d9c:	dc801a17 	ldw	r18,104(sp)
   42da0:	dc401917 	ldw	r17,100(sp)
   42da4:	dc001817 	ldw	r16,96(sp)
   42da8:	dec02204 	addi	sp,sp,136
   42dac:	f800283a 	ret
   42db0:	d8c02317 	ldw	r3,140(sp)
   42db4:	0089c3c4 	movi	r2,9999
   42db8:	18800015 	stw	r2,0(r3)
   42dbc:	90017726 	beq	r18,zero,4339c <_dtoa_r+0x6dc>
   42dc0:	00800174 	movhi	r2,5
   42dc4:	10bef104 	addi	r2,r2,-1084
   42dc8:	d9002517 	ldw	r4,148(sp)
   42dcc:	203fec26 	beq	r4,zero,42d80 <__alt_data_end+0xfffd0d80>
   42dd0:	10c000c7 	ldb	r3,3(r2)
   42dd4:	1801781e 	bne	r3,zero,433b8 <_dtoa_r+0x6f8>
   42dd8:	10c000c4 	addi	r3,r2,3
   42ddc:	d9802517 	ldw	r6,148(sp)
   42de0:	30c00015 	stw	r3,0(r6)
   42de4:	003fe606 	br	42d80 <__alt_data_end+0xfffd0d80>
   42de8:	04e00034 	movhi	r19,32768
   42dec:	9cffffc4 	addi	r19,r19,-1
   42df0:	00800044 	movi	r2,1
   42df4:	8ce6703a 	and	r19,r17,r19
   42df8:	80800015 	stw	r2,0(r16)
   42dfc:	9823883a 	mov	r17,r19
   42e00:	003fcc06 	br	42d34 <__alt_data_end+0xfffd0d34>
   42e04:	d8800204 	addi	r2,sp,8
   42e08:	d8800015 	stw	r2,0(sp)
   42e0c:	d9c00104 	addi	r7,sp,4
   42e10:	900b883a 	mov	r5,r18
   42e14:	980d883a 	mov	r6,r19
   42e18:	e009883a 	mov	r4,fp
   42e1c:	8820d53a 	srli	r16,r17,20
   42e20:	00470c80 	call	470c8 <__d2b>
   42e24:	d8800915 	stw	r2,36(sp)
   42e28:	8001651e 	bne	r16,zero,433c0 <_dtoa_r+0x700>
   42e2c:	dd800217 	ldw	r22,8(sp)
   42e30:	dc000117 	ldw	r16,4(sp)
   42e34:	00800804 	movi	r2,32
   42e38:	b421883a 	add	r16,r22,r16
   42e3c:	80c10c84 	addi	r3,r16,1074
   42e40:	10c2d10e 	bge	r2,r3,43988 <_dtoa_r+0xcc8>
   42e44:	00801004 	movi	r2,64
   42e48:	81010484 	addi	r4,r16,1042
   42e4c:	10c7c83a 	sub	r3,r2,r3
   42e50:	9108d83a 	srl	r4,r18,r4
   42e54:	88e2983a 	sll	r17,r17,r3
   42e58:	2448b03a 	or	r4,r4,r17
   42e5c:	004d1ec0 	call	4d1ec <__floatunsidf>
   42e60:	017f8434 	movhi	r5,65040
   42e64:	01800044 	movi	r6,1
   42e68:	1009883a 	mov	r4,r2
   42e6c:	194b883a 	add	r5,r3,r5
   42e70:	843fffc4 	addi	r16,r16,-1
   42e74:	d9801115 	stw	r6,68(sp)
   42e78:	000d883a 	mov	r6,zero
   42e7c:	01cffe34 	movhi	r7,16376
   42e80:	004c7940 	call	4c794 <__subdf3>
   42e84:	0198dbf4 	movhi	r6,25455
   42e88:	01cff4f4 	movhi	r7,16339
   42e8c:	3190d844 	addi	r6,r6,17249
   42e90:	39e1e9c4 	addi	r7,r7,-30809
   42e94:	1009883a 	mov	r4,r2
   42e98:	180b883a 	mov	r5,r3
   42e9c:	004bf280 	call	4bf28 <__muldf3>
   42ea0:	01a2d874 	movhi	r6,35681
   42ea4:	01cff1f4 	movhi	r7,16327
   42ea8:	31b22cc4 	addi	r6,r6,-14157
   42eac:	39e28a04 	addi	r7,r7,-30168
   42eb0:	180b883a 	mov	r5,r3
   42eb4:	1009883a 	mov	r4,r2
   42eb8:	004aa540 	call	4aa54 <__adddf3>
   42ebc:	8009883a 	mov	r4,r16
   42ec0:	1029883a 	mov	r20,r2
   42ec4:	1823883a 	mov	r17,r3
   42ec8:	004d1100 	call	4d110 <__floatsidf>
   42ecc:	019427f4 	movhi	r6,20639
   42ed0:	01cff4f4 	movhi	r7,16339
   42ed4:	319e7ec4 	addi	r6,r6,31227
   42ed8:	39d104c4 	addi	r7,r7,17427
   42edc:	1009883a 	mov	r4,r2
   42ee0:	180b883a 	mov	r5,r3
   42ee4:	004bf280 	call	4bf28 <__muldf3>
   42ee8:	100d883a 	mov	r6,r2
   42eec:	180f883a 	mov	r7,r3
   42ef0:	a009883a 	mov	r4,r20
   42ef4:	880b883a 	mov	r5,r17
   42ef8:	004aa540 	call	4aa54 <__adddf3>
   42efc:	1009883a 	mov	r4,r2
   42f00:	180b883a 	mov	r5,r3
   42f04:	1029883a 	mov	r20,r2
   42f08:	1823883a 	mov	r17,r3
   42f0c:	004d0900 	call	4d090 <__fixdfsi>
   42f10:	000d883a 	mov	r6,zero
   42f14:	000f883a 	mov	r7,zero
   42f18:	a009883a 	mov	r4,r20
   42f1c:	880b883a 	mov	r5,r17
   42f20:	d8800515 	stw	r2,20(sp)
   42f24:	004be340 	call	4be34 <__ledf2>
   42f28:	10028716 	blt	r2,zero,43948 <_dtoa_r+0xc88>
   42f2c:	d8c00517 	ldw	r3,20(sp)
   42f30:	00800584 	movi	r2,22
   42f34:	10c27536 	bltu	r2,r3,4390c <_dtoa_r+0xc4c>
   42f38:	180490fa 	slli	r2,r3,3
   42f3c:	00c00174 	movhi	r3,5
   42f40:	18ff0d04 	addi	r3,r3,-972
   42f44:	1885883a 	add	r2,r3,r2
   42f48:	11000017 	ldw	r4,0(r2)
   42f4c:	11400117 	ldw	r5,4(r2)
   42f50:	900d883a 	mov	r6,r18
   42f54:	980f883a 	mov	r7,r19
   42f58:	004bd580 	call	4bd58 <__gedf2>
   42f5c:	00828d0e 	bge	zero,r2,43994 <_dtoa_r+0xcd4>
   42f60:	d9000517 	ldw	r4,20(sp)
   42f64:	d8000e15 	stw	zero,56(sp)
   42f68:	213fffc4 	addi	r4,r4,-1
   42f6c:	d9000515 	stw	r4,20(sp)
   42f70:	b42dc83a 	sub	r22,r22,r16
   42f74:	b5bfffc4 	addi	r22,r22,-1
   42f78:	b0026f16 	blt	r22,zero,43938 <_dtoa_r+0xc78>
   42f7c:	d8000815 	stw	zero,32(sp)
   42f80:	d9c00517 	ldw	r7,20(sp)
   42f84:	38026416 	blt	r7,zero,43918 <_dtoa_r+0xc58>
   42f88:	b1ed883a 	add	r22,r22,r7
   42f8c:	d9c00d15 	stw	r7,52(sp)
   42f90:	d8000a15 	stw	zero,40(sp)
   42f94:	d9800317 	ldw	r6,12(sp)
   42f98:	00800244 	movi	r2,9
   42f9c:	11811436 	bltu	r2,r6,433f0 <_dtoa_r+0x730>
   42fa0:	00800144 	movi	r2,5
   42fa4:	1184e10e 	bge	r2,r6,4432c <_dtoa_r+0x166c>
   42fa8:	31bfff04 	addi	r6,r6,-4
   42fac:	d9800315 	stw	r6,12(sp)
   42fb0:	0023883a 	mov	r17,zero
   42fb4:	d9800317 	ldw	r6,12(sp)
   42fb8:	008000c4 	movi	r2,3
   42fbc:	30836726 	beq	r6,r2,43d5c <_dtoa_r+0x109c>
   42fc0:	1183410e 	bge	r2,r6,43cc8 <_dtoa_r+0x1008>
   42fc4:	d9c00317 	ldw	r7,12(sp)
   42fc8:	00800104 	movi	r2,4
   42fcc:	38827c26 	beq	r7,r2,439c0 <_dtoa_r+0xd00>
   42fd0:	00800144 	movi	r2,5
   42fd4:	3884c41e 	bne	r7,r2,442e8 <_dtoa_r+0x1628>
   42fd8:	00800044 	movi	r2,1
   42fdc:	d8800b15 	stw	r2,44(sp)
   42fe0:	d8c00517 	ldw	r3,20(sp)
   42fe4:	d9002217 	ldw	r4,136(sp)
   42fe8:	1907883a 	add	r3,r3,r4
   42fec:	19800044 	addi	r6,r3,1
   42ff0:	d8c00c15 	stw	r3,48(sp)
   42ff4:	d9800615 	stw	r6,24(sp)
   42ff8:	0183a40e 	bge	zero,r6,43e8c <_dtoa_r+0x11cc>
   42ffc:	d9800617 	ldw	r6,24(sp)
   43000:	3021883a 	mov	r16,r6
   43004:	e0001115 	stw	zero,68(fp)
   43008:	008005c4 	movi	r2,23
   4300c:	1184c92e 	bgeu	r2,r6,44334 <_dtoa_r+0x1674>
   43010:	00c00044 	movi	r3,1
   43014:	00800104 	movi	r2,4
   43018:	1085883a 	add	r2,r2,r2
   4301c:	11000504 	addi	r4,r2,20
   43020:	180b883a 	mov	r5,r3
   43024:	18c00044 	addi	r3,r3,1
   43028:	313ffb2e 	bgeu	r6,r4,43018 <__alt_data_end+0xfffd1018>
   4302c:	e1401115 	stw	r5,68(fp)
   43030:	e009883a 	mov	r4,fp
   43034:	00463780 	call	46378 <_Balloc>
   43038:	d8800715 	stw	r2,28(sp)
   4303c:	e0801015 	stw	r2,64(fp)
   43040:	00800384 	movi	r2,14
   43044:	1400f736 	bltu	r2,r16,43424 <_dtoa_r+0x764>
   43048:	8800f626 	beq	r17,zero,43424 <_dtoa_r+0x764>
   4304c:	d9c00517 	ldw	r7,20(sp)
   43050:	01c39a0e 	bge	zero,r7,43ebc <_dtoa_r+0x11fc>
   43054:	388003cc 	andi	r2,r7,15
   43058:	100490fa 	slli	r2,r2,3
   4305c:	382bd13a 	srai	r21,r7,4
   43060:	00c00174 	movhi	r3,5
   43064:	18ff0d04 	addi	r3,r3,-972
   43068:	1885883a 	add	r2,r3,r2
   4306c:	a8c0040c 	andi	r3,r21,16
   43070:	12400017 	ldw	r9,0(r2)
   43074:	12000117 	ldw	r8,4(r2)
   43078:	18037926 	beq	r3,zero,43e60 <_dtoa_r+0x11a0>
   4307c:	00800174 	movhi	r2,5
   43080:	10bf0304 	addi	r2,r2,-1012
   43084:	11800817 	ldw	r6,32(r2)
   43088:	11c00917 	ldw	r7,36(r2)
   4308c:	9009883a 	mov	r4,r18
   43090:	980b883a 	mov	r5,r19
   43094:	da001715 	stw	r8,92(sp)
   43098:	da401615 	stw	r9,88(sp)
   4309c:	004b3000 	call	4b300 <__divdf3>
   430a0:	da001717 	ldw	r8,92(sp)
   430a4:	da401617 	ldw	r9,88(sp)
   430a8:	ad4003cc 	andi	r21,r21,15
   430ac:	040000c4 	movi	r16,3
   430b0:	1023883a 	mov	r17,r2
   430b4:	1829883a 	mov	r20,r3
   430b8:	a8001126 	beq	r21,zero,43100 <_dtoa_r+0x440>
   430bc:	05c00174 	movhi	r23,5
   430c0:	bdff0304 	addi	r23,r23,-1012
   430c4:	4805883a 	mov	r2,r9
   430c8:	4007883a 	mov	r3,r8
   430cc:	a980004c 	andi	r6,r21,1
   430d0:	1009883a 	mov	r4,r2
   430d4:	a82bd07a 	srai	r21,r21,1
   430d8:	180b883a 	mov	r5,r3
   430dc:	30000426 	beq	r6,zero,430f0 <_dtoa_r+0x430>
   430e0:	b9800017 	ldw	r6,0(r23)
   430e4:	b9c00117 	ldw	r7,4(r23)
   430e8:	84000044 	addi	r16,r16,1
   430ec:	004bf280 	call	4bf28 <__muldf3>
   430f0:	bdc00204 	addi	r23,r23,8
   430f4:	a83ff51e 	bne	r21,zero,430cc <__alt_data_end+0xfffd10cc>
   430f8:	1013883a 	mov	r9,r2
   430fc:	1811883a 	mov	r8,r3
   43100:	480d883a 	mov	r6,r9
   43104:	400f883a 	mov	r7,r8
   43108:	8809883a 	mov	r4,r17
   4310c:	a00b883a 	mov	r5,r20
   43110:	004b3000 	call	4b300 <__divdf3>
   43114:	d8800f15 	stw	r2,60(sp)
   43118:	d8c01015 	stw	r3,64(sp)
   4311c:	d8c00e17 	ldw	r3,56(sp)
   43120:	18000626 	beq	r3,zero,4313c <_dtoa_r+0x47c>
   43124:	d9000f17 	ldw	r4,60(sp)
   43128:	d9401017 	ldw	r5,64(sp)
   4312c:	000d883a 	mov	r6,zero
   43130:	01cffc34 	movhi	r7,16368
   43134:	004be340 	call	4be34 <__ledf2>
   43138:	10040b16 	blt	r2,zero,44168 <_dtoa_r+0x14a8>
   4313c:	8009883a 	mov	r4,r16
   43140:	004d1100 	call	4d110 <__floatsidf>
   43144:	d9800f17 	ldw	r6,60(sp)
   43148:	d9c01017 	ldw	r7,64(sp)
   4314c:	1009883a 	mov	r4,r2
   43150:	180b883a 	mov	r5,r3
   43154:	004bf280 	call	4bf28 <__muldf3>
   43158:	000d883a 	mov	r6,zero
   4315c:	01d00734 	movhi	r7,16412
   43160:	1009883a 	mov	r4,r2
   43164:	180b883a 	mov	r5,r3
   43168:	004aa540 	call	4aa54 <__adddf3>
   4316c:	1021883a 	mov	r16,r2
   43170:	d8800617 	ldw	r2,24(sp)
   43174:	047f3034 	movhi	r17,64704
   43178:	1c63883a 	add	r17,r3,r17
   4317c:	10031826 	beq	r2,zero,43de0 <_dtoa_r+0x1120>
   43180:	d8c00517 	ldw	r3,20(sp)
   43184:	db000617 	ldw	r12,24(sp)
   43188:	d8c01315 	stw	r3,76(sp)
   4318c:	d9000b17 	ldw	r4,44(sp)
   43190:	20038f26 	beq	r4,zero,43fd0 <_dtoa_r+0x1310>
   43194:	60bfffc4 	addi	r2,r12,-1
   43198:	100490fa 	slli	r2,r2,3
   4319c:	00c00174 	movhi	r3,5
   431a0:	18ff0d04 	addi	r3,r3,-972
   431a4:	1885883a 	add	r2,r3,r2
   431a8:	11800017 	ldw	r6,0(r2)
   431ac:	11c00117 	ldw	r7,4(r2)
   431b0:	d8800717 	ldw	r2,28(sp)
   431b4:	0009883a 	mov	r4,zero
   431b8:	014ff834 	movhi	r5,16352
   431bc:	db001615 	stw	r12,88(sp)
   431c0:	15c00044 	addi	r23,r2,1
   431c4:	004b3000 	call	4b300 <__divdf3>
   431c8:	800d883a 	mov	r6,r16
   431cc:	880f883a 	mov	r7,r17
   431d0:	1009883a 	mov	r4,r2
   431d4:	180b883a 	mov	r5,r3
   431d8:	004c7940 	call	4c794 <__subdf3>
   431dc:	d9401017 	ldw	r5,64(sp)
   431e0:	d9000f17 	ldw	r4,60(sp)
   431e4:	102b883a 	mov	r21,r2
   431e8:	d8c01215 	stw	r3,72(sp)
   431ec:	004d0900 	call	4d090 <__fixdfsi>
   431f0:	1009883a 	mov	r4,r2
   431f4:	1029883a 	mov	r20,r2
   431f8:	004d1100 	call	4d110 <__floatsidf>
   431fc:	d9000f17 	ldw	r4,60(sp)
   43200:	d9401017 	ldw	r5,64(sp)
   43204:	100d883a 	mov	r6,r2
   43208:	180f883a 	mov	r7,r3
   4320c:	004c7940 	call	4c794 <__subdf3>
   43210:	1823883a 	mov	r17,r3
   43214:	d8c00717 	ldw	r3,28(sp)
   43218:	d9401217 	ldw	r5,72(sp)
   4321c:	a2000c04 	addi	r8,r20,48
   43220:	1021883a 	mov	r16,r2
   43224:	1a000005 	stb	r8,0(r3)
   43228:	800d883a 	mov	r6,r16
   4322c:	880f883a 	mov	r7,r17
   43230:	a809883a 	mov	r4,r21
   43234:	4029883a 	mov	r20,r8
   43238:	004bd580 	call	4bd58 <__gedf2>
   4323c:	00841d16 	blt	zero,r2,442b4 <_dtoa_r+0x15f4>
   43240:	800d883a 	mov	r6,r16
   43244:	880f883a 	mov	r7,r17
   43248:	0009883a 	mov	r4,zero
   4324c:	014ffc34 	movhi	r5,16368
   43250:	004c7940 	call	4c794 <__subdf3>
   43254:	d9401217 	ldw	r5,72(sp)
   43258:	100d883a 	mov	r6,r2
   4325c:	180f883a 	mov	r7,r3
   43260:	a809883a 	mov	r4,r21
   43264:	004bd580 	call	4bd58 <__gedf2>
   43268:	db001617 	ldw	r12,88(sp)
   4326c:	00840e16 	blt	zero,r2,442a8 <_dtoa_r+0x15e8>
   43270:	00800044 	movi	r2,1
   43274:	13006b0e 	bge	r2,r12,43424 <_dtoa_r+0x764>
   43278:	d9000717 	ldw	r4,28(sp)
   4327c:	dd800f15 	stw	r22,60(sp)
   43280:	dcc01015 	stw	r19,64(sp)
   43284:	2319883a 	add	r12,r4,r12
   43288:	dcc01217 	ldw	r19,72(sp)
   4328c:	602d883a 	mov	r22,r12
   43290:	dc801215 	stw	r18,72(sp)
   43294:	b825883a 	mov	r18,r23
   43298:	00000906 	br	432c0 <_dtoa_r+0x600>
   4329c:	004c7940 	call	4c794 <__subdf3>
   432a0:	a80d883a 	mov	r6,r21
   432a4:	980f883a 	mov	r7,r19
   432a8:	1009883a 	mov	r4,r2
   432ac:	180b883a 	mov	r5,r3
   432b0:	004be340 	call	4be34 <__ledf2>
   432b4:	1003e816 	blt	r2,zero,44258 <_dtoa_r+0x1598>
   432b8:	b825883a 	mov	r18,r23
   432bc:	bd83e926 	beq	r23,r22,44264 <_dtoa_r+0x15a4>
   432c0:	a809883a 	mov	r4,r21
   432c4:	980b883a 	mov	r5,r19
   432c8:	000d883a 	mov	r6,zero
   432cc:	01d00934 	movhi	r7,16420
   432d0:	004bf280 	call	4bf28 <__muldf3>
   432d4:	000d883a 	mov	r6,zero
   432d8:	01d00934 	movhi	r7,16420
   432dc:	8009883a 	mov	r4,r16
   432e0:	880b883a 	mov	r5,r17
   432e4:	102b883a 	mov	r21,r2
   432e8:	1827883a 	mov	r19,r3
   432ec:	004bf280 	call	4bf28 <__muldf3>
   432f0:	180b883a 	mov	r5,r3
   432f4:	1009883a 	mov	r4,r2
   432f8:	1821883a 	mov	r16,r3
   432fc:	1023883a 	mov	r17,r2
   43300:	004d0900 	call	4d090 <__fixdfsi>
   43304:	1009883a 	mov	r4,r2
   43308:	1029883a 	mov	r20,r2
   4330c:	004d1100 	call	4d110 <__floatsidf>
   43310:	8809883a 	mov	r4,r17
   43314:	800b883a 	mov	r5,r16
   43318:	100d883a 	mov	r6,r2
   4331c:	180f883a 	mov	r7,r3
   43320:	004c7940 	call	4c794 <__subdf3>
   43324:	a5000c04 	addi	r20,r20,48
   43328:	a80d883a 	mov	r6,r21
   4332c:	980f883a 	mov	r7,r19
   43330:	1009883a 	mov	r4,r2
   43334:	180b883a 	mov	r5,r3
   43338:	95000005 	stb	r20,0(r18)
   4333c:	1021883a 	mov	r16,r2
   43340:	1823883a 	mov	r17,r3
   43344:	004be340 	call	4be34 <__ledf2>
   43348:	bdc00044 	addi	r23,r23,1
   4334c:	800d883a 	mov	r6,r16
   43350:	880f883a 	mov	r7,r17
   43354:	0009883a 	mov	r4,zero
   43358:	014ffc34 	movhi	r5,16368
   4335c:	103fcf0e 	bge	r2,zero,4329c <__alt_data_end+0xfffd129c>
   43360:	d8c01317 	ldw	r3,76(sp)
   43364:	d8c00515 	stw	r3,20(sp)
   43368:	d9400917 	ldw	r5,36(sp)
   4336c:	e009883a 	mov	r4,fp
   43370:	00464200 	call	46420 <_Bfree>
   43374:	d9000517 	ldw	r4,20(sp)
   43378:	d9802317 	ldw	r6,140(sp)
   4337c:	d9c02517 	ldw	r7,148(sp)
   43380:	b8000005 	stb	zero,0(r23)
   43384:	20800044 	addi	r2,r4,1
   43388:	30800015 	stw	r2,0(r6)
   4338c:	3802aa26 	beq	r7,zero,43e38 <_dtoa_r+0x1178>
   43390:	3dc00015 	stw	r23,0(r7)
   43394:	d8800717 	ldw	r2,28(sp)
   43398:	003e7906 	br	42d80 <__alt_data_end+0xfffd0d80>
   4339c:	00800434 	movhi	r2,16
   433a0:	10bfffc4 	addi	r2,r2,-1
   433a4:	88a2703a 	and	r17,r17,r2
   433a8:	883e851e 	bne	r17,zero,42dc0 <__alt_data_end+0xfffd0dc0>
   433ac:	00800174 	movhi	r2,5
   433b0:	10beee04 	addi	r2,r2,-1096
   433b4:	003e8406 	br	42dc8 <__alt_data_end+0xfffd0dc8>
   433b8:	10c00204 	addi	r3,r2,8
   433bc:	003e8706 	br	42ddc <__alt_data_end+0xfffd0ddc>
   433c0:	01400434 	movhi	r5,16
   433c4:	297fffc4 	addi	r5,r5,-1
   433c8:	994a703a 	and	r5,r19,r5
   433cc:	9009883a 	mov	r4,r18
   433d0:	843f0044 	addi	r16,r16,-1023
   433d4:	294ffc34 	orhi	r5,r5,16368
   433d8:	dd800217 	ldw	r22,8(sp)
   433dc:	d8001115 	stw	zero,68(sp)
   433e0:	003ea506 	br	42e78 <__alt_data_end+0xfffd0e78>
   433e4:	00800174 	movhi	r2,5
   433e8:	10bee504 	addi	r2,r2,-1132
   433ec:	003e6406 	br	42d80 <__alt_data_end+0xfffd0d80>
   433f0:	e0001115 	stw	zero,68(fp)
   433f4:	000b883a 	mov	r5,zero
   433f8:	e009883a 	mov	r4,fp
   433fc:	00463780 	call	46378 <_Balloc>
   43400:	01bfffc4 	movi	r6,-1
   43404:	01c00044 	movi	r7,1
   43408:	d8800715 	stw	r2,28(sp)
   4340c:	d9800c15 	stw	r6,48(sp)
   43410:	e0801015 	stw	r2,64(fp)
   43414:	d8000315 	stw	zero,12(sp)
   43418:	d9c00b15 	stw	r7,44(sp)
   4341c:	d9800615 	stw	r6,24(sp)
   43420:	d8002215 	stw	zero,136(sp)
   43424:	d8800117 	ldw	r2,4(sp)
   43428:	10008916 	blt	r2,zero,43650 <_dtoa_r+0x990>
   4342c:	d9000517 	ldw	r4,20(sp)
   43430:	00c00384 	movi	r3,14
   43434:	19008616 	blt	r3,r4,43650 <_dtoa_r+0x990>
   43438:	200490fa 	slli	r2,r4,3
   4343c:	00c00174 	movhi	r3,5
   43440:	d9802217 	ldw	r6,136(sp)
   43444:	18ff0d04 	addi	r3,r3,-972
   43448:	1885883a 	add	r2,r3,r2
   4344c:	14000017 	ldw	r16,0(r2)
   43450:	14400117 	ldw	r17,4(r2)
   43454:	30016316 	blt	r6,zero,439e4 <_dtoa_r+0xd24>
   43458:	800d883a 	mov	r6,r16
   4345c:	880f883a 	mov	r7,r17
   43460:	9009883a 	mov	r4,r18
   43464:	980b883a 	mov	r5,r19
   43468:	004b3000 	call	4b300 <__divdf3>
   4346c:	180b883a 	mov	r5,r3
   43470:	1009883a 	mov	r4,r2
   43474:	004d0900 	call	4d090 <__fixdfsi>
   43478:	1009883a 	mov	r4,r2
   4347c:	102b883a 	mov	r21,r2
   43480:	004d1100 	call	4d110 <__floatsidf>
   43484:	800d883a 	mov	r6,r16
   43488:	880f883a 	mov	r7,r17
   4348c:	1009883a 	mov	r4,r2
   43490:	180b883a 	mov	r5,r3
   43494:	004bf280 	call	4bf28 <__muldf3>
   43498:	100d883a 	mov	r6,r2
   4349c:	180f883a 	mov	r7,r3
   434a0:	9009883a 	mov	r4,r18
   434a4:	980b883a 	mov	r5,r19
   434a8:	004c7940 	call	4c794 <__subdf3>
   434ac:	d9c00717 	ldw	r7,28(sp)
   434b0:	1009883a 	mov	r4,r2
   434b4:	a8800c04 	addi	r2,r21,48
   434b8:	38800005 	stb	r2,0(r7)
   434bc:	3dc00044 	addi	r23,r7,1
   434c0:	d9c00617 	ldw	r7,24(sp)
   434c4:	01800044 	movi	r6,1
   434c8:	180b883a 	mov	r5,r3
   434cc:	2005883a 	mov	r2,r4
   434d0:	39803826 	beq	r7,r6,435b4 <_dtoa_r+0x8f4>
   434d4:	000d883a 	mov	r6,zero
   434d8:	01d00934 	movhi	r7,16420
   434dc:	004bf280 	call	4bf28 <__muldf3>
   434e0:	000d883a 	mov	r6,zero
   434e4:	000f883a 	mov	r7,zero
   434e8:	1009883a 	mov	r4,r2
   434ec:	180b883a 	mov	r5,r3
   434f0:	1025883a 	mov	r18,r2
   434f4:	1827883a 	mov	r19,r3
   434f8:	004bcd00 	call	4bcd0 <__eqdf2>
   434fc:	103f9a26 	beq	r2,zero,43368 <__alt_data_end+0xfffd1368>
   43500:	d9c00617 	ldw	r7,24(sp)
   43504:	d8c00717 	ldw	r3,28(sp)
   43508:	b829883a 	mov	r20,r23
   4350c:	38bfffc4 	addi	r2,r7,-1
   43510:	18ad883a 	add	r22,r3,r2
   43514:	00000a06 	br	43540 <_dtoa_r+0x880>
   43518:	004bf280 	call	4bf28 <__muldf3>
   4351c:	000d883a 	mov	r6,zero
   43520:	000f883a 	mov	r7,zero
   43524:	1009883a 	mov	r4,r2
   43528:	180b883a 	mov	r5,r3
   4352c:	1025883a 	mov	r18,r2
   43530:	1827883a 	mov	r19,r3
   43534:	b829883a 	mov	r20,r23
   43538:	004bcd00 	call	4bcd0 <__eqdf2>
   4353c:	103f8a26 	beq	r2,zero,43368 <__alt_data_end+0xfffd1368>
   43540:	800d883a 	mov	r6,r16
   43544:	880f883a 	mov	r7,r17
   43548:	9009883a 	mov	r4,r18
   4354c:	980b883a 	mov	r5,r19
   43550:	004b3000 	call	4b300 <__divdf3>
   43554:	180b883a 	mov	r5,r3
   43558:	1009883a 	mov	r4,r2
   4355c:	004d0900 	call	4d090 <__fixdfsi>
   43560:	1009883a 	mov	r4,r2
   43564:	102b883a 	mov	r21,r2
   43568:	004d1100 	call	4d110 <__floatsidf>
   4356c:	800d883a 	mov	r6,r16
   43570:	880f883a 	mov	r7,r17
   43574:	1009883a 	mov	r4,r2
   43578:	180b883a 	mov	r5,r3
   4357c:	004bf280 	call	4bf28 <__muldf3>
   43580:	100d883a 	mov	r6,r2
   43584:	180f883a 	mov	r7,r3
   43588:	9009883a 	mov	r4,r18
   4358c:	980b883a 	mov	r5,r19
   43590:	004c7940 	call	4c794 <__subdf3>
   43594:	aa000c04 	addi	r8,r21,48
   43598:	a2000005 	stb	r8,0(r20)
   4359c:	000d883a 	mov	r6,zero
   435a0:	01d00934 	movhi	r7,16420
   435a4:	1009883a 	mov	r4,r2
   435a8:	180b883a 	mov	r5,r3
   435ac:	a5c00044 	addi	r23,r20,1
   435b0:	b53fd91e 	bne	r22,r20,43518 <__alt_data_end+0xfffd1518>
   435b4:	100d883a 	mov	r6,r2
   435b8:	180f883a 	mov	r7,r3
   435bc:	1009883a 	mov	r4,r2
   435c0:	180b883a 	mov	r5,r3
   435c4:	004aa540 	call	4aa54 <__adddf3>
   435c8:	100d883a 	mov	r6,r2
   435cc:	180f883a 	mov	r7,r3
   435d0:	8009883a 	mov	r4,r16
   435d4:	880b883a 	mov	r5,r17
   435d8:	1027883a 	mov	r19,r2
   435dc:	1825883a 	mov	r18,r3
   435e0:	004be340 	call	4be34 <__ledf2>
   435e4:	10000816 	blt	r2,zero,43608 <_dtoa_r+0x948>
   435e8:	980d883a 	mov	r6,r19
   435ec:	900f883a 	mov	r7,r18
   435f0:	8009883a 	mov	r4,r16
   435f4:	880b883a 	mov	r5,r17
   435f8:	004bcd00 	call	4bcd0 <__eqdf2>
   435fc:	103f5a1e 	bne	r2,zero,43368 <__alt_data_end+0xfffd1368>
   43600:	ad40004c 	andi	r21,r21,1
   43604:	a83f5826 	beq	r21,zero,43368 <__alt_data_end+0xfffd1368>
   43608:	bd3fffc3 	ldbu	r20,-1(r23)
   4360c:	b8bfffc4 	addi	r2,r23,-1
   43610:	1007883a 	mov	r3,r2
   43614:	01400e44 	movi	r5,57
   43618:	d9800717 	ldw	r6,28(sp)
   4361c:	00000506 	br	43634 <_dtoa_r+0x974>
   43620:	18ffffc4 	addi	r3,r3,-1
   43624:	11824726 	beq	r2,r6,43f44 <_dtoa_r+0x1284>
   43628:	1d000003 	ldbu	r20,0(r3)
   4362c:	102f883a 	mov	r23,r2
   43630:	10bfffc4 	addi	r2,r2,-1
   43634:	a1003fcc 	andi	r4,r20,255
   43638:	2100201c 	xori	r4,r4,128
   4363c:	213fe004 	addi	r4,r4,-128
   43640:	217ff726 	beq	r4,r5,43620 <__alt_data_end+0xfffd1620>
   43644:	a2000044 	addi	r8,r20,1
   43648:	12000005 	stb	r8,0(r2)
   4364c:	003f4606 	br	43368 <__alt_data_end+0xfffd1368>
   43650:	d9000b17 	ldw	r4,44(sp)
   43654:	2000c826 	beq	r4,zero,43978 <_dtoa_r+0xcb8>
   43658:	d9800317 	ldw	r6,12(sp)
   4365c:	00c00044 	movi	r3,1
   43660:	1980f90e 	bge	r3,r6,43a48 <_dtoa_r+0xd88>
   43664:	d8800617 	ldw	r2,24(sp)
   43668:	d8c00a17 	ldw	r3,40(sp)
   4366c:	157fffc4 	addi	r21,r2,-1
   43670:	1d41f316 	blt	r3,r21,43e40 <_dtoa_r+0x1180>
   43674:	1d6bc83a 	sub	r21,r3,r21
   43678:	d9c00617 	ldw	r7,24(sp)
   4367c:	3802aa16 	blt	r7,zero,44128 <_dtoa_r+0x1468>
   43680:	dd000817 	ldw	r20,32(sp)
   43684:	d8800617 	ldw	r2,24(sp)
   43688:	d8c00817 	ldw	r3,32(sp)
   4368c:	01400044 	movi	r5,1
   43690:	e009883a 	mov	r4,fp
   43694:	1887883a 	add	r3,r3,r2
   43698:	d8c00815 	stw	r3,32(sp)
   4369c:	b0ad883a 	add	r22,r22,r2
   436a0:	00467ac0 	call	467ac <__i2b>
   436a4:	1023883a 	mov	r17,r2
   436a8:	a0000826 	beq	r20,zero,436cc <_dtoa_r+0xa0c>
   436ac:	0580070e 	bge	zero,r22,436cc <_dtoa_r+0xa0c>
   436b0:	a005883a 	mov	r2,r20
   436b4:	b500b916 	blt	r22,r20,4399c <_dtoa_r+0xcdc>
   436b8:	d9000817 	ldw	r4,32(sp)
   436bc:	a0a9c83a 	sub	r20,r20,r2
   436c0:	b0adc83a 	sub	r22,r22,r2
   436c4:	2089c83a 	sub	r4,r4,r2
   436c8:	d9000815 	stw	r4,32(sp)
   436cc:	d9800a17 	ldw	r6,40(sp)
   436d0:	0181810e 	bge	zero,r6,43cd8 <_dtoa_r+0x1018>
   436d4:	d9c00b17 	ldw	r7,44(sp)
   436d8:	3800b326 	beq	r7,zero,439a8 <_dtoa_r+0xce8>
   436dc:	a800b226 	beq	r21,zero,439a8 <_dtoa_r+0xce8>
   436e0:	880b883a 	mov	r5,r17
   436e4:	a80d883a 	mov	r6,r21
   436e8:	e009883a 	mov	r4,fp
   436ec:	0046a740 	call	46a74 <__pow5mult>
   436f0:	d9800917 	ldw	r6,36(sp)
   436f4:	100b883a 	mov	r5,r2
   436f8:	e009883a 	mov	r4,fp
   436fc:	1023883a 	mov	r17,r2
   43700:	00467e80 	call	467e8 <__multiply>
   43704:	1021883a 	mov	r16,r2
   43708:	d8800a17 	ldw	r2,40(sp)
   4370c:	d9400917 	ldw	r5,36(sp)
   43710:	e009883a 	mov	r4,fp
   43714:	1545c83a 	sub	r2,r2,r21
   43718:	d8800a15 	stw	r2,40(sp)
   4371c:	00464200 	call	46420 <_Bfree>
   43720:	d8c00a17 	ldw	r3,40(sp)
   43724:	18009f1e 	bne	r3,zero,439a4 <_dtoa_r+0xce4>
   43728:	05c00044 	movi	r23,1
   4372c:	e009883a 	mov	r4,fp
   43730:	b80b883a 	mov	r5,r23
   43734:	00467ac0 	call	467ac <__i2b>
   43738:	d9000d17 	ldw	r4,52(sp)
   4373c:	102b883a 	mov	r21,r2
   43740:	2000ce26 	beq	r4,zero,43a7c <_dtoa_r+0xdbc>
   43744:	200d883a 	mov	r6,r4
   43748:	100b883a 	mov	r5,r2
   4374c:	e009883a 	mov	r4,fp
   43750:	0046a740 	call	46a74 <__pow5mult>
   43754:	d9800317 	ldw	r6,12(sp)
   43758:	102b883a 	mov	r21,r2
   4375c:	b981810e 	bge	r23,r6,43d64 <_dtoa_r+0x10a4>
   43760:	0027883a 	mov	r19,zero
   43764:	a8800417 	ldw	r2,16(r21)
   43768:	05c00804 	movi	r23,32
   4376c:	10800104 	addi	r2,r2,4
   43770:	1085883a 	add	r2,r2,r2
   43774:	1085883a 	add	r2,r2,r2
   43778:	a885883a 	add	r2,r21,r2
   4377c:	11000017 	ldw	r4,0(r2)
   43780:	00466940 	call	46694 <__hi0bits>
   43784:	b885c83a 	sub	r2,r23,r2
   43788:	1585883a 	add	r2,r2,r22
   4378c:	108007cc 	andi	r2,r2,31
   43790:	1000b326 	beq	r2,zero,43a60 <_dtoa_r+0xda0>
   43794:	00c00804 	movi	r3,32
   43798:	1887c83a 	sub	r3,r3,r2
   4379c:	01000104 	movi	r4,4
   437a0:	20c2cd0e 	bge	r4,r3,442d8 <_dtoa_r+0x1618>
   437a4:	00c00704 	movi	r3,28
   437a8:	1885c83a 	sub	r2,r3,r2
   437ac:	d8c00817 	ldw	r3,32(sp)
   437b0:	a0a9883a 	add	r20,r20,r2
   437b4:	b0ad883a 	add	r22,r22,r2
   437b8:	1887883a 	add	r3,r3,r2
   437bc:	d8c00815 	stw	r3,32(sp)
   437c0:	d9800817 	ldw	r6,32(sp)
   437c4:	0180040e 	bge	zero,r6,437d8 <_dtoa_r+0xb18>
   437c8:	800b883a 	mov	r5,r16
   437cc:	e009883a 	mov	r4,fp
   437d0:	0046bb40 	call	46bb4 <__lshift>
   437d4:	1021883a 	mov	r16,r2
   437d8:	0580050e 	bge	zero,r22,437f0 <_dtoa_r+0xb30>
   437dc:	a80b883a 	mov	r5,r21
   437e0:	b00d883a 	mov	r6,r22
   437e4:	e009883a 	mov	r4,fp
   437e8:	0046bb40 	call	46bb4 <__lshift>
   437ec:	102b883a 	mov	r21,r2
   437f0:	d9c00e17 	ldw	r7,56(sp)
   437f4:	3801211e 	bne	r7,zero,43c7c <_dtoa_r+0xfbc>
   437f8:	d9800617 	ldw	r6,24(sp)
   437fc:	0181380e 	bge	zero,r6,43ce0 <_dtoa_r+0x1020>
   43800:	d8c00b17 	ldw	r3,44(sp)
   43804:	1800ab1e 	bne	r3,zero,43ab4 <_dtoa_r+0xdf4>
   43808:	dc800717 	ldw	r18,28(sp)
   4380c:	dcc00617 	ldw	r19,24(sp)
   43810:	9029883a 	mov	r20,r18
   43814:	00000206 	br	43820 <_dtoa_r+0xb60>
   43818:	00464480 	call	46448 <__multadd>
   4381c:	1021883a 	mov	r16,r2
   43820:	a80b883a 	mov	r5,r21
   43824:	8009883a 	mov	r4,r16
   43828:	0042a980 	call	42a98 <quorem>
   4382c:	10800c04 	addi	r2,r2,48
   43830:	90800005 	stb	r2,0(r18)
   43834:	94800044 	addi	r18,r18,1
   43838:	9507c83a 	sub	r3,r18,r20
   4383c:	000f883a 	mov	r7,zero
   43840:	01800284 	movi	r6,10
   43844:	800b883a 	mov	r5,r16
   43848:	e009883a 	mov	r4,fp
   4384c:	1cfff216 	blt	r3,r19,43818 <__alt_data_end+0xfffd1818>
   43850:	1011883a 	mov	r8,r2
   43854:	d8800617 	ldw	r2,24(sp)
   43858:	0082370e 	bge	zero,r2,44138 <_dtoa_r+0x1478>
   4385c:	d9000717 	ldw	r4,28(sp)
   43860:	0025883a 	mov	r18,zero
   43864:	20af883a 	add	r23,r4,r2
   43868:	01800044 	movi	r6,1
   4386c:	800b883a 	mov	r5,r16
   43870:	e009883a 	mov	r4,fp
   43874:	da001715 	stw	r8,92(sp)
   43878:	0046bb40 	call	46bb4 <__lshift>
   4387c:	a80b883a 	mov	r5,r21
   43880:	1009883a 	mov	r4,r2
   43884:	d8800915 	stw	r2,36(sp)
   43888:	0046cfc0 	call	46cfc <__mcmp>
   4388c:	da001717 	ldw	r8,92(sp)
   43890:	0081800e 	bge	zero,r2,43e94 <_dtoa_r+0x11d4>
   43894:	b93fffc3 	ldbu	r4,-1(r23)
   43898:	b8bfffc4 	addi	r2,r23,-1
   4389c:	1007883a 	mov	r3,r2
   438a0:	01800e44 	movi	r6,57
   438a4:	d9c00717 	ldw	r7,28(sp)
   438a8:	00000506 	br	438c0 <_dtoa_r+0xc00>
   438ac:	18ffffc4 	addi	r3,r3,-1
   438b0:	11c12326 	beq	r2,r7,43d40 <_dtoa_r+0x1080>
   438b4:	19000003 	ldbu	r4,0(r3)
   438b8:	102f883a 	mov	r23,r2
   438bc:	10bfffc4 	addi	r2,r2,-1
   438c0:	21403fcc 	andi	r5,r4,255
   438c4:	2940201c 	xori	r5,r5,128
   438c8:	297fe004 	addi	r5,r5,-128
   438cc:	29bff726 	beq	r5,r6,438ac <__alt_data_end+0xfffd18ac>
   438d0:	21000044 	addi	r4,r4,1
   438d4:	11000005 	stb	r4,0(r2)
   438d8:	a80b883a 	mov	r5,r21
   438dc:	e009883a 	mov	r4,fp
   438e0:	00464200 	call	46420 <_Bfree>
   438e4:	883ea026 	beq	r17,zero,43368 <__alt_data_end+0xfffd1368>
   438e8:	90000426 	beq	r18,zero,438fc <_dtoa_r+0xc3c>
   438ec:	94400326 	beq	r18,r17,438fc <_dtoa_r+0xc3c>
   438f0:	900b883a 	mov	r5,r18
   438f4:	e009883a 	mov	r4,fp
   438f8:	00464200 	call	46420 <_Bfree>
   438fc:	880b883a 	mov	r5,r17
   43900:	e009883a 	mov	r4,fp
   43904:	00464200 	call	46420 <_Bfree>
   43908:	003e9706 	br	43368 <__alt_data_end+0xfffd1368>
   4390c:	01800044 	movi	r6,1
   43910:	d9800e15 	stw	r6,56(sp)
   43914:	003d9606 	br	42f70 <__alt_data_end+0xfffd0f70>
   43918:	d8800817 	ldw	r2,32(sp)
   4391c:	d8c00517 	ldw	r3,20(sp)
   43920:	d8000d15 	stw	zero,52(sp)
   43924:	10c5c83a 	sub	r2,r2,r3
   43928:	00c9c83a 	sub	r4,zero,r3
   4392c:	d8800815 	stw	r2,32(sp)
   43930:	d9000a15 	stw	r4,40(sp)
   43934:	003d9706 	br	42f94 <__alt_data_end+0xfffd0f94>
   43938:	05adc83a 	sub	r22,zero,r22
   4393c:	dd800815 	stw	r22,32(sp)
   43940:	002d883a 	mov	r22,zero
   43944:	003d8e06 	br	42f80 <__alt_data_end+0xfffd0f80>
   43948:	d9000517 	ldw	r4,20(sp)
   4394c:	004d1100 	call	4d110 <__floatsidf>
   43950:	100d883a 	mov	r6,r2
   43954:	180f883a 	mov	r7,r3
   43958:	a009883a 	mov	r4,r20
   4395c:	880b883a 	mov	r5,r17
   43960:	004bcd00 	call	4bcd0 <__eqdf2>
   43964:	103d7126 	beq	r2,zero,42f2c <__alt_data_end+0xfffd0f2c>
   43968:	d9c00517 	ldw	r7,20(sp)
   4396c:	39ffffc4 	addi	r7,r7,-1
   43970:	d9c00515 	stw	r7,20(sp)
   43974:	003d6d06 	br	42f2c <__alt_data_end+0xfffd0f2c>
   43978:	dd400a17 	ldw	r21,40(sp)
   4397c:	dd000817 	ldw	r20,32(sp)
   43980:	0023883a 	mov	r17,zero
   43984:	003f4806 	br	436a8 <__alt_data_end+0xfffd16a8>
   43988:	10e3c83a 	sub	r17,r2,r3
   4398c:	9448983a 	sll	r4,r18,r17
   43990:	003d3206 	br	42e5c <__alt_data_end+0xfffd0e5c>
   43994:	d8000e15 	stw	zero,56(sp)
   43998:	003d7506 	br	42f70 <__alt_data_end+0xfffd0f70>
   4399c:	b005883a 	mov	r2,r22
   439a0:	003f4506 	br	436b8 <__alt_data_end+0xfffd16b8>
   439a4:	dc000915 	stw	r16,36(sp)
   439a8:	d9800a17 	ldw	r6,40(sp)
   439ac:	d9400917 	ldw	r5,36(sp)
   439b0:	e009883a 	mov	r4,fp
   439b4:	0046a740 	call	46a74 <__pow5mult>
   439b8:	1021883a 	mov	r16,r2
   439bc:	003f5a06 	br	43728 <__alt_data_end+0xfffd1728>
   439c0:	01c00044 	movi	r7,1
   439c4:	d9c00b15 	stw	r7,44(sp)
   439c8:	d8802217 	ldw	r2,136(sp)
   439cc:	0081280e 	bge	zero,r2,43e70 <_dtoa_r+0x11b0>
   439d0:	100d883a 	mov	r6,r2
   439d4:	1021883a 	mov	r16,r2
   439d8:	d8800c15 	stw	r2,48(sp)
   439dc:	d8800615 	stw	r2,24(sp)
   439e0:	003d8806 	br	43004 <__alt_data_end+0xfffd1004>
   439e4:	d8800617 	ldw	r2,24(sp)
   439e8:	00be9b16 	blt	zero,r2,43458 <__alt_data_end+0xfffd1458>
   439ec:	10010f1e 	bne	r2,zero,43e2c <_dtoa_r+0x116c>
   439f0:	880b883a 	mov	r5,r17
   439f4:	000d883a 	mov	r6,zero
   439f8:	01d00534 	movhi	r7,16404
   439fc:	8009883a 	mov	r4,r16
   43a00:	004bf280 	call	4bf28 <__muldf3>
   43a04:	900d883a 	mov	r6,r18
   43a08:	980f883a 	mov	r7,r19
   43a0c:	1009883a 	mov	r4,r2
   43a10:	180b883a 	mov	r5,r3
   43a14:	004bd580 	call	4bd58 <__gedf2>
   43a18:	002b883a 	mov	r21,zero
   43a1c:	0023883a 	mov	r17,zero
   43a20:	1000bf16 	blt	r2,zero,43d20 <_dtoa_r+0x1060>
   43a24:	d9802217 	ldw	r6,136(sp)
   43a28:	ddc00717 	ldw	r23,28(sp)
   43a2c:	018c303a 	nor	r6,zero,r6
   43a30:	d9800515 	stw	r6,20(sp)
   43a34:	a80b883a 	mov	r5,r21
   43a38:	e009883a 	mov	r4,fp
   43a3c:	00464200 	call	46420 <_Bfree>
   43a40:	883e4926 	beq	r17,zero,43368 <__alt_data_end+0xfffd1368>
   43a44:	003fad06 	br	438fc <__alt_data_end+0xfffd18fc>
   43a48:	d9c01117 	ldw	r7,68(sp)
   43a4c:	3801bc26 	beq	r7,zero,44140 <_dtoa_r+0x1480>
   43a50:	10810cc4 	addi	r2,r2,1075
   43a54:	dd400a17 	ldw	r21,40(sp)
   43a58:	dd000817 	ldw	r20,32(sp)
   43a5c:	003f0a06 	br	43688 <__alt_data_end+0xfffd1688>
   43a60:	00800704 	movi	r2,28
   43a64:	d9000817 	ldw	r4,32(sp)
   43a68:	a0a9883a 	add	r20,r20,r2
   43a6c:	b0ad883a 	add	r22,r22,r2
   43a70:	2089883a 	add	r4,r4,r2
   43a74:	d9000815 	stw	r4,32(sp)
   43a78:	003f5106 	br	437c0 <__alt_data_end+0xfffd17c0>
   43a7c:	d8c00317 	ldw	r3,12(sp)
   43a80:	b8c1fc0e 	bge	r23,r3,44274 <_dtoa_r+0x15b4>
   43a84:	0027883a 	mov	r19,zero
   43a88:	b805883a 	mov	r2,r23
   43a8c:	003f3e06 	br	43788 <__alt_data_end+0xfffd1788>
   43a90:	880b883a 	mov	r5,r17
   43a94:	e009883a 	mov	r4,fp
   43a98:	000f883a 	mov	r7,zero
   43a9c:	01800284 	movi	r6,10
   43aa0:	00464480 	call	46448 <__multadd>
   43aa4:	d9000c17 	ldw	r4,48(sp)
   43aa8:	1023883a 	mov	r17,r2
   43aac:	0102040e 	bge	zero,r4,442c0 <_dtoa_r+0x1600>
   43ab0:	d9000615 	stw	r4,24(sp)
   43ab4:	0500050e 	bge	zero,r20,43acc <_dtoa_r+0xe0c>
   43ab8:	880b883a 	mov	r5,r17
   43abc:	a00d883a 	mov	r6,r20
   43ac0:	e009883a 	mov	r4,fp
   43ac4:	0046bb40 	call	46bb4 <__lshift>
   43ac8:	1023883a 	mov	r17,r2
   43acc:	9801241e 	bne	r19,zero,43f60 <_dtoa_r+0x12a0>
   43ad0:	8829883a 	mov	r20,r17
   43ad4:	d9000617 	ldw	r4,24(sp)
   43ad8:	dcc00717 	ldw	r19,28(sp)
   43adc:	9480004c 	andi	r18,r18,1
   43ae0:	20bfffc4 	addi	r2,r4,-1
   43ae4:	9885883a 	add	r2,r19,r2
   43ae8:	d8800415 	stw	r2,16(sp)
   43aec:	dc800615 	stw	r18,24(sp)
   43af0:	a80b883a 	mov	r5,r21
   43af4:	8009883a 	mov	r4,r16
   43af8:	0042a980 	call	42a98 <quorem>
   43afc:	880b883a 	mov	r5,r17
   43b00:	8009883a 	mov	r4,r16
   43b04:	102f883a 	mov	r23,r2
   43b08:	0046cfc0 	call	46cfc <__mcmp>
   43b0c:	a80b883a 	mov	r5,r21
   43b10:	a00d883a 	mov	r6,r20
   43b14:	e009883a 	mov	r4,fp
   43b18:	102d883a 	mov	r22,r2
   43b1c:	0046d5c0 	call	46d5c <__mdiff>
   43b20:	1007883a 	mov	r3,r2
   43b24:	10800317 	ldw	r2,12(r2)
   43b28:	bc800c04 	addi	r18,r23,48
   43b2c:	180b883a 	mov	r5,r3
   43b30:	10004e1e 	bne	r2,zero,43c6c <_dtoa_r+0xfac>
   43b34:	8009883a 	mov	r4,r16
   43b38:	d8c01615 	stw	r3,88(sp)
   43b3c:	0046cfc0 	call	46cfc <__mcmp>
   43b40:	d8c01617 	ldw	r3,88(sp)
   43b44:	e009883a 	mov	r4,fp
   43b48:	d8801615 	stw	r2,88(sp)
   43b4c:	180b883a 	mov	r5,r3
   43b50:	00464200 	call	46420 <_Bfree>
   43b54:	d8801617 	ldw	r2,88(sp)
   43b58:	1000041e 	bne	r2,zero,43b6c <_dtoa_r+0xeac>
   43b5c:	d9800317 	ldw	r6,12(sp)
   43b60:	3000021e 	bne	r6,zero,43b6c <_dtoa_r+0xeac>
   43b64:	d8c00617 	ldw	r3,24(sp)
   43b68:	18003726 	beq	r3,zero,43c48 <_dtoa_r+0xf88>
   43b6c:	b0002016 	blt	r22,zero,43bf0 <_dtoa_r+0xf30>
   43b70:	b000041e 	bne	r22,zero,43b84 <_dtoa_r+0xec4>
   43b74:	d9000317 	ldw	r4,12(sp)
   43b78:	2000021e 	bne	r4,zero,43b84 <_dtoa_r+0xec4>
   43b7c:	d8c00617 	ldw	r3,24(sp)
   43b80:	18001b26 	beq	r3,zero,43bf0 <_dtoa_r+0xf30>
   43b84:	00810716 	blt	zero,r2,43fa4 <_dtoa_r+0x12e4>
   43b88:	d8c00417 	ldw	r3,16(sp)
   43b8c:	9d800044 	addi	r22,r19,1
   43b90:	9c800005 	stb	r18,0(r19)
   43b94:	b02f883a 	mov	r23,r22
   43b98:	98c10626 	beq	r19,r3,43fb4 <_dtoa_r+0x12f4>
   43b9c:	800b883a 	mov	r5,r16
   43ba0:	000f883a 	mov	r7,zero
   43ba4:	01800284 	movi	r6,10
   43ba8:	e009883a 	mov	r4,fp
   43bac:	00464480 	call	46448 <__multadd>
   43bb0:	1021883a 	mov	r16,r2
   43bb4:	000f883a 	mov	r7,zero
   43bb8:	01800284 	movi	r6,10
   43bbc:	880b883a 	mov	r5,r17
   43bc0:	e009883a 	mov	r4,fp
   43bc4:	8d002526 	beq	r17,r20,43c5c <_dtoa_r+0xf9c>
   43bc8:	00464480 	call	46448 <__multadd>
   43bcc:	a00b883a 	mov	r5,r20
   43bd0:	000f883a 	mov	r7,zero
   43bd4:	01800284 	movi	r6,10
   43bd8:	e009883a 	mov	r4,fp
   43bdc:	1023883a 	mov	r17,r2
   43be0:	00464480 	call	46448 <__multadd>
   43be4:	1029883a 	mov	r20,r2
   43be8:	b027883a 	mov	r19,r22
   43bec:	003fc006 	br	43af0 <__alt_data_end+0xfffd1af0>
   43bf0:	9011883a 	mov	r8,r18
   43bf4:	00800e0e 	bge	zero,r2,43c30 <_dtoa_r+0xf70>
   43bf8:	800b883a 	mov	r5,r16
   43bfc:	01800044 	movi	r6,1
   43c00:	e009883a 	mov	r4,fp
   43c04:	da001715 	stw	r8,92(sp)
   43c08:	0046bb40 	call	46bb4 <__lshift>
   43c0c:	a80b883a 	mov	r5,r21
   43c10:	1009883a 	mov	r4,r2
   43c14:	1021883a 	mov	r16,r2
   43c18:	0046cfc0 	call	46cfc <__mcmp>
   43c1c:	da001717 	ldw	r8,92(sp)
   43c20:	0081960e 	bge	zero,r2,4427c <_dtoa_r+0x15bc>
   43c24:	00800e44 	movi	r2,57
   43c28:	40817026 	beq	r8,r2,441ec <_dtoa_r+0x152c>
   43c2c:	ba000c44 	addi	r8,r23,49
   43c30:	8825883a 	mov	r18,r17
   43c34:	9dc00044 	addi	r23,r19,1
   43c38:	9a000005 	stb	r8,0(r19)
   43c3c:	a023883a 	mov	r17,r20
   43c40:	dc000915 	stw	r16,36(sp)
   43c44:	003f2406 	br	438d8 <__alt_data_end+0xfffd18d8>
   43c48:	00800e44 	movi	r2,57
   43c4c:	9011883a 	mov	r8,r18
   43c50:	90816626 	beq	r18,r2,441ec <_dtoa_r+0x152c>
   43c54:	05bff516 	blt	zero,r22,43c2c <__alt_data_end+0xfffd1c2c>
   43c58:	003ff506 	br	43c30 <__alt_data_end+0xfffd1c30>
   43c5c:	00464480 	call	46448 <__multadd>
   43c60:	1023883a 	mov	r17,r2
   43c64:	1029883a 	mov	r20,r2
   43c68:	003fdf06 	br	43be8 <__alt_data_end+0xfffd1be8>
   43c6c:	e009883a 	mov	r4,fp
   43c70:	00464200 	call	46420 <_Bfree>
   43c74:	00800044 	movi	r2,1
   43c78:	003fbc06 	br	43b6c <__alt_data_end+0xfffd1b6c>
   43c7c:	a80b883a 	mov	r5,r21
   43c80:	8009883a 	mov	r4,r16
   43c84:	0046cfc0 	call	46cfc <__mcmp>
   43c88:	103edb0e 	bge	r2,zero,437f8 <__alt_data_end+0xfffd17f8>
   43c8c:	800b883a 	mov	r5,r16
   43c90:	000f883a 	mov	r7,zero
   43c94:	01800284 	movi	r6,10
   43c98:	e009883a 	mov	r4,fp
   43c9c:	00464480 	call	46448 <__multadd>
   43ca0:	1021883a 	mov	r16,r2
   43ca4:	d8800517 	ldw	r2,20(sp)
   43ca8:	d8c00b17 	ldw	r3,44(sp)
   43cac:	10bfffc4 	addi	r2,r2,-1
   43cb0:	d8800515 	stw	r2,20(sp)
   43cb4:	183f761e 	bne	r3,zero,43a90 <__alt_data_end+0xfffd1a90>
   43cb8:	d9000c17 	ldw	r4,48(sp)
   43cbc:	0101730e 	bge	zero,r4,4428c <_dtoa_r+0x15cc>
   43cc0:	d9000615 	stw	r4,24(sp)
   43cc4:	003ed006 	br	43808 <__alt_data_end+0xfffd1808>
   43cc8:	00800084 	movi	r2,2
   43ccc:	3081861e 	bne	r6,r2,442e8 <_dtoa_r+0x1628>
   43cd0:	d8000b15 	stw	zero,44(sp)
   43cd4:	003f3c06 	br	439c8 <__alt_data_end+0xfffd19c8>
   43cd8:	dc000917 	ldw	r16,36(sp)
   43cdc:	003e9206 	br	43728 <__alt_data_end+0xfffd1728>
   43ce0:	d9c00317 	ldw	r7,12(sp)
   43ce4:	00800084 	movi	r2,2
   43ce8:	11fec50e 	bge	r2,r7,43800 <__alt_data_end+0xfffd1800>
   43cec:	d9000617 	ldw	r4,24(sp)
   43cf0:	20013c1e 	bne	r4,zero,441e4 <_dtoa_r+0x1524>
   43cf4:	a80b883a 	mov	r5,r21
   43cf8:	000f883a 	mov	r7,zero
   43cfc:	01800144 	movi	r6,5
   43d00:	e009883a 	mov	r4,fp
   43d04:	00464480 	call	46448 <__multadd>
   43d08:	100b883a 	mov	r5,r2
   43d0c:	8009883a 	mov	r4,r16
   43d10:	102b883a 	mov	r21,r2
   43d14:	0046cfc0 	call	46cfc <__mcmp>
   43d18:	dc000915 	stw	r16,36(sp)
   43d1c:	00bf410e 	bge	zero,r2,43a24 <__alt_data_end+0xfffd1a24>
   43d20:	d9c00717 	ldw	r7,28(sp)
   43d24:	00800c44 	movi	r2,49
   43d28:	38800005 	stb	r2,0(r7)
   43d2c:	d8800517 	ldw	r2,20(sp)
   43d30:	3dc00044 	addi	r23,r7,1
   43d34:	10800044 	addi	r2,r2,1
   43d38:	d8800515 	stw	r2,20(sp)
   43d3c:	003f3d06 	br	43a34 <__alt_data_end+0xfffd1a34>
   43d40:	d9800517 	ldw	r6,20(sp)
   43d44:	d9c00717 	ldw	r7,28(sp)
   43d48:	00800c44 	movi	r2,49
   43d4c:	31800044 	addi	r6,r6,1
   43d50:	d9800515 	stw	r6,20(sp)
   43d54:	38800005 	stb	r2,0(r7)
   43d58:	003edf06 	br	438d8 <__alt_data_end+0xfffd18d8>
   43d5c:	d8000b15 	stw	zero,44(sp)
   43d60:	003c9f06 	br	42fe0 <__alt_data_end+0xfffd0fe0>
   43d64:	903e7e1e 	bne	r18,zero,43760 <__alt_data_end+0xfffd1760>
   43d68:	00800434 	movhi	r2,16
   43d6c:	10bfffc4 	addi	r2,r2,-1
   43d70:	9884703a 	and	r2,r19,r2
   43d74:	1000ea1e 	bne	r2,zero,44120 <_dtoa_r+0x1460>
   43d78:	9cdffc2c 	andhi	r19,r19,32752
   43d7c:	9800e826 	beq	r19,zero,44120 <_dtoa_r+0x1460>
   43d80:	d9c00817 	ldw	r7,32(sp)
   43d84:	b5800044 	addi	r22,r22,1
   43d88:	04c00044 	movi	r19,1
   43d8c:	39c00044 	addi	r7,r7,1
   43d90:	d9c00815 	stw	r7,32(sp)
   43d94:	d8800d17 	ldw	r2,52(sp)
   43d98:	103e721e 	bne	r2,zero,43764 <__alt_data_end+0xfffd1764>
   43d9c:	00800044 	movi	r2,1
   43da0:	003e7906 	br	43788 <__alt_data_end+0xfffd1788>
   43da4:	8009883a 	mov	r4,r16
   43da8:	004d1100 	call	4d110 <__floatsidf>
   43dac:	d9800f17 	ldw	r6,60(sp)
   43db0:	d9c01017 	ldw	r7,64(sp)
   43db4:	1009883a 	mov	r4,r2
   43db8:	180b883a 	mov	r5,r3
   43dbc:	004bf280 	call	4bf28 <__muldf3>
   43dc0:	000d883a 	mov	r6,zero
   43dc4:	01d00734 	movhi	r7,16412
   43dc8:	1009883a 	mov	r4,r2
   43dcc:	180b883a 	mov	r5,r3
   43dd0:	004aa540 	call	4aa54 <__adddf3>
   43dd4:	047f3034 	movhi	r17,64704
   43dd8:	1021883a 	mov	r16,r2
   43ddc:	1c63883a 	add	r17,r3,r17
   43de0:	d9000f17 	ldw	r4,60(sp)
   43de4:	d9401017 	ldw	r5,64(sp)
   43de8:	000d883a 	mov	r6,zero
   43dec:	01d00534 	movhi	r7,16404
   43df0:	004c7940 	call	4c794 <__subdf3>
   43df4:	800d883a 	mov	r6,r16
   43df8:	880f883a 	mov	r7,r17
   43dfc:	1009883a 	mov	r4,r2
   43e00:	180b883a 	mov	r5,r3
   43e04:	102b883a 	mov	r21,r2
   43e08:	1829883a 	mov	r20,r3
   43e0c:	004bd580 	call	4bd58 <__gedf2>
   43e10:	00806c16 	blt	zero,r2,43fc4 <_dtoa_r+0x1304>
   43e14:	89e0003c 	xorhi	r7,r17,32768
   43e18:	800d883a 	mov	r6,r16
   43e1c:	a809883a 	mov	r4,r21
   43e20:	a00b883a 	mov	r5,r20
   43e24:	004be340 	call	4be34 <__ledf2>
   43e28:	103d7e0e 	bge	r2,zero,43424 <__alt_data_end+0xfffd1424>
   43e2c:	002b883a 	mov	r21,zero
   43e30:	0023883a 	mov	r17,zero
   43e34:	003efb06 	br	43a24 <__alt_data_end+0xfffd1a24>
   43e38:	d8800717 	ldw	r2,28(sp)
   43e3c:	003bd006 	br	42d80 <__alt_data_end+0xfffd0d80>
   43e40:	d9000a17 	ldw	r4,40(sp)
   43e44:	d9800d17 	ldw	r6,52(sp)
   43e48:	dd400a15 	stw	r21,40(sp)
   43e4c:	a905c83a 	sub	r2,r21,r4
   43e50:	308d883a 	add	r6,r6,r2
   43e54:	d9800d15 	stw	r6,52(sp)
   43e58:	002b883a 	mov	r21,zero
   43e5c:	003e0606 	br	43678 <__alt_data_end+0xfffd1678>
   43e60:	9023883a 	mov	r17,r18
   43e64:	9829883a 	mov	r20,r19
   43e68:	04000084 	movi	r16,2
   43e6c:	003c9206 	br	430b8 <__alt_data_end+0xfffd10b8>
   43e70:	04000044 	movi	r16,1
   43e74:	dc000c15 	stw	r16,48(sp)
   43e78:	dc000615 	stw	r16,24(sp)
   43e7c:	dc002215 	stw	r16,136(sp)
   43e80:	e0001115 	stw	zero,68(fp)
   43e84:	000b883a 	mov	r5,zero
   43e88:	003c6906 	br	43030 <__alt_data_end+0xfffd1030>
   43e8c:	3021883a 	mov	r16,r6
   43e90:	003ffb06 	br	43e80 <__alt_data_end+0xfffd1e80>
   43e94:	1000021e 	bne	r2,zero,43ea0 <_dtoa_r+0x11e0>
   43e98:	4200004c 	andi	r8,r8,1
   43e9c:	403e7d1e 	bne	r8,zero,43894 <__alt_data_end+0xfffd1894>
   43ea0:	01000c04 	movi	r4,48
   43ea4:	00000106 	br	43eac <_dtoa_r+0x11ec>
   43ea8:	102f883a 	mov	r23,r2
   43eac:	b8bfffc4 	addi	r2,r23,-1
   43eb0:	10c00007 	ldb	r3,0(r2)
   43eb4:	193ffc26 	beq	r3,r4,43ea8 <__alt_data_end+0xfffd1ea8>
   43eb8:	003e8706 	br	438d8 <__alt_data_end+0xfffd18d8>
   43ebc:	d8800517 	ldw	r2,20(sp)
   43ec0:	00a3c83a 	sub	r17,zero,r2
   43ec4:	8800a426 	beq	r17,zero,44158 <_dtoa_r+0x1498>
   43ec8:	888003cc 	andi	r2,r17,15
   43ecc:	100490fa 	slli	r2,r2,3
   43ed0:	00c00174 	movhi	r3,5
   43ed4:	18ff0d04 	addi	r3,r3,-972
   43ed8:	1885883a 	add	r2,r3,r2
   43edc:	11800017 	ldw	r6,0(r2)
   43ee0:	11c00117 	ldw	r7,4(r2)
   43ee4:	9009883a 	mov	r4,r18
   43ee8:	980b883a 	mov	r5,r19
   43eec:	8823d13a 	srai	r17,r17,4
   43ef0:	004bf280 	call	4bf28 <__muldf3>
   43ef4:	d8800f15 	stw	r2,60(sp)
   43ef8:	d8c01015 	stw	r3,64(sp)
   43efc:	8800e826 	beq	r17,zero,442a0 <_dtoa_r+0x15e0>
   43f00:	05000174 	movhi	r20,5
   43f04:	a53f0304 	addi	r20,r20,-1012
   43f08:	04000084 	movi	r16,2
   43f0c:	8980004c 	andi	r6,r17,1
   43f10:	1009883a 	mov	r4,r2
   43f14:	8823d07a 	srai	r17,r17,1
   43f18:	180b883a 	mov	r5,r3
   43f1c:	30000426 	beq	r6,zero,43f30 <_dtoa_r+0x1270>
   43f20:	a1800017 	ldw	r6,0(r20)
   43f24:	a1c00117 	ldw	r7,4(r20)
   43f28:	84000044 	addi	r16,r16,1
   43f2c:	004bf280 	call	4bf28 <__muldf3>
   43f30:	a5000204 	addi	r20,r20,8
   43f34:	883ff51e 	bne	r17,zero,43f0c <__alt_data_end+0xfffd1f0c>
   43f38:	d8800f15 	stw	r2,60(sp)
   43f3c:	d8c01015 	stw	r3,64(sp)
   43f40:	003c7606 	br	4311c <__alt_data_end+0xfffd111c>
   43f44:	00c00c04 	movi	r3,48
   43f48:	10c00005 	stb	r3,0(r2)
   43f4c:	d8c00517 	ldw	r3,20(sp)
   43f50:	bd3fffc3 	ldbu	r20,-1(r23)
   43f54:	18c00044 	addi	r3,r3,1
   43f58:	d8c00515 	stw	r3,20(sp)
   43f5c:	003db906 	br	43644 <__alt_data_end+0xfffd1644>
   43f60:	89400117 	ldw	r5,4(r17)
   43f64:	e009883a 	mov	r4,fp
   43f68:	00463780 	call	46378 <_Balloc>
   43f6c:	89800417 	ldw	r6,16(r17)
   43f70:	89400304 	addi	r5,r17,12
   43f74:	11000304 	addi	r4,r2,12
   43f78:	31800084 	addi	r6,r6,2
   43f7c:	318d883a 	add	r6,r6,r6
   43f80:	318d883a 	add	r6,r6,r6
   43f84:	1027883a 	mov	r19,r2
   43f88:	0045fac0 	call	45fac <memcpy>
   43f8c:	01800044 	movi	r6,1
   43f90:	980b883a 	mov	r5,r19
   43f94:	e009883a 	mov	r4,fp
   43f98:	0046bb40 	call	46bb4 <__lshift>
   43f9c:	1029883a 	mov	r20,r2
   43fa0:	003ecc06 	br	43ad4 <__alt_data_end+0xfffd1ad4>
   43fa4:	00800e44 	movi	r2,57
   43fa8:	90809026 	beq	r18,r2,441ec <_dtoa_r+0x152c>
   43fac:	92000044 	addi	r8,r18,1
   43fb0:	003f1f06 	br	43c30 <__alt_data_end+0xfffd1c30>
   43fb4:	9011883a 	mov	r8,r18
   43fb8:	8825883a 	mov	r18,r17
   43fbc:	a023883a 	mov	r17,r20
   43fc0:	003e2906 	br	43868 <__alt_data_end+0xfffd1868>
   43fc4:	002b883a 	mov	r21,zero
   43fc8:	0023883a 	mov	r17,zero
   43fcc:	003f5406 	br	43d20 <__alt_data_end+0xfffd1d20>
   43fd0:	61bfffc4 	addi	r6,r12,-1
   43fd4:	300490fa 	slli	r2,r6,3
   43fd8:	00c00174 	movhi	r3,5
   43fdc:	18ff0d04 	addi	r3,r3,-972
   43fe0:	1885883a 	add	r2,r3,r2
   43fe4:	11000017 	ldw	r4,0(r2)
   43fe8:	11400117 	ldw	r5,4(r2)
   43fec:	d8800717 	ldw	r2,28(sp)
   43ff0:	880f883a 	mov	r7,r17
   43ff4:	d9801215 	stw	r6,72(sp)
   43ff8:	800d883a 	mov	r6,r16
   43ffc:	db001615 	stw	r12,88(sp)
   44000:	15c00044 	addi	r23,r2,1
   44004:	004bf280 	call	4bf28 <__muldf3>
   44008:	d9401017 	ldw	r5,64(sp)
   4400c:	d9000f17 	ldw	r4,60(sp)
   44010:	d8c01515 	stw	r3,84(sp)
   44014:	d8801415 	stw	r2,80(sp)
   44018:	004d0900 	call	4d090 <__fixdfsi>
   4401c:	1009883a 	mov	r4,r2
   44020:	1021883a 	mov	r16,r2
   44024:	004d1100 	call	4d110 <__floatsidf>
   44028:	d9000f17 	ldw	r4,60(sp)
   4402c:	d9401017 	ldw	r5,64(sp)
   44030:	100d883a 	mov	r6,r2
   44034:	180f883a 	mov	r7,r3
   44038:	004c7940 	call	4c794 <__subdf3>
   4403c:	1829883a 	mov	r20,r3
   44040:	d8c00717 	ldw	r3,28(sp)
   44044:	84000c04 	addi	r16,r16,48
   44048:	1023883a 	mov	r17,r2
   4404c:	1c000005 	stb	r16,0(r3)
   44050:	db001617 	ldw	r12,88(sp)
   44054:	00800044 	movi	r2,1
   44058:	60802226 	beq	r12,r2,440e4 <_dtoa_r+0x1424>
   4405c:	d9c00717 	ldw	r7,28(sp)
   44060:	8805883a 	mov	r2,r17
   44064:	b82b883a 	mov	r21,r23
   44068:	3b19883a 	add	r12,r7,r12
   4406c:	6023883a 	mov	r17,r12
   44070:	a007883a 	mov	r3,r20
   44074:	dc800f15 	stw	r18,60(sp)
   44078:	000d883a 	mov	r6,zero
   4407c:	01d00934 	movhi	r7,16420
   44080:	1009883a 	mov	r4,r2
   44084:	180b883a 	mov	r5,r3
   44088:	004bf280 	call	4bf28 <__muldf3>
   4408c:	180b883a 	mov	r5,r3
   44090:	1009883a 	mov	r4,r2
   44094:	1829883a 	mov	r20,r3
   44098:	1025883a 	mov	r18,r2
   4409c:	004d0900 	call	4d090 <__fixdfsi>
   440a0:	1009883a 	mov	r4,r2
   440a4:	1021883a 	mov	r16,r2
   440a8:	004d1100 	call	4d110 <__floatsidf>
   440ac:	100d883a 	mov	r6,r2
   440b0:	180f883a 	mov	r7,r3
   440b4:	9009883a 	mov	r4,r18
   440b8:	a00b883a 	mov	r5,r20
   440bc:	84000c04 	addi	r16,r16,48
   440c0:	004c7940 	call	4c794 <__subdf3>
   440c4:	ad400044 	addi	r21,r21,1
   440c8:	ac3fffc5 	stb	r16,-1(r21)
   440cc:	ac7fea1e 	bne	r21,r17,44078 <__alt_data_end+0xfffd2078>
   440d0:	1023883a 	mov	r17,r2
   440d4:	d8801217 	ldw	r2,72(sp)
   440d8:	dc800f17 	ldw	r18,60(sp)
   440dc:	1829883a 	mov	r20,r3
   440e0:	b8af883a 	add	r23,r23,r2
   440e4:	d9001417 	ldw	r4,80(sp)
   440e8:	d9401517 	ldw	r5,84(sp)
   440ec:	000d883a 	mov	r6,zero
   440f0:	01cff834 	movhi	r7,16352
   440f4:	004aa540 	call	4aa54 <__adddf3>
   440f8:	880d883a 	mov	r6,r17
   440fc:	a00f883a 	mov	r7,r20
   44100:	1009883a 	mov	r4,r2
   44104:	180b883a 	mov	r5,r3
   44108:	004be340 	call	4be34 <__ledf2>
   4410c:	10003e0e 	bge	r2,zero,44208 <_dtoa_r+0x1548>
   44110:	d9001317 	ldw	r4,76(sp)
   44114:	bd3fffc3 	ldbu	r20,-1(r23)
   44118:	d9000515 	stw	r4,20(sp)
   4411c:	003d3b06 	br	4360c <__alt_data_end+0xfffd160c>
   44120:	0027883a 	mov	r19,zero
   44124:	003f1b06 	br	43d94 <__alt_data_end+0xfffd1d94>
   44128:	d8800817 	ldw	r2,32(sp)
   4412c:	11e9c83a 	sub	r20,r2,r7
   44130:	0005883a 	mov	r2,zero
   44134:	003d5406 	br	43688 <__alt_data_end+0xfffd1688>
   44138:	00800044 	movi	r2,1
   4413c:	003dc706 	br	4385c <__alt_data_end+0xfffd185c>
   44140:	d8c00217 	ldw	r3,8(sp)
   44144:	00800d84 	movi	r2,54
   44148:	dd400a17 	ldw	r21,40(sp)
   4414c:	10c5c83a 	sub	r2,r2,r3
   44150:	dd000817 	ldw	r20,32(sp)
   44154:	003d4c06 	br	43688 <__alt_data_end+0xfffd1688>
   44158:	dc800f15 	stw	r18,60(sp)
   4415c:	dcc01015 	stw	r19,64(sp)
   44160:	04000084 	movi	r16,2
   44164:	003bed06 	br	4311c <__alt_data_end+0xfffd111c>
   44168:	d9000617 	ldw	r4,24(sp)
   4416c:	203f0d26 	beq	r4,zero,43da4 <__alt_data_end+0xfffd1da4>
   44170:	d9800c17 	ldw	r6,48(sp)
   44174:	01bcab0e 	bge	zero,r6,43424 <__alt_data_end+0xfffd1424>
   44178:	d9401017 	ldw	r5,64(sp)
   4417c:	d9000f17 	ldw	r4,60(sp)
   44180:	000d883a 	mov	r6,zero
   44184:	01d00934 	movhi	r7,16420
   44188:	004bf280 	call	4bf28 <__muldf3>
   4418c:	81000044 	addi	r4,r16,1
   44190:	d8800f15 	stw	r2,60(sp)
   44194:	d8c01015 	stw	r3,64(sp)
   44198:	004d1100 	call	4d110 <__floatsidf>
   4419c:	d9800f17 	ldw	r6,60(sp)
   441a0:	d9c01017 	ldw	r7,64(sp)
   441a4:	1009883a 	mov	r4,r2
   441a8:	180b883a 	mov	r5,r3
   441ac:	004bf280 	call	4bf28 <__muldf3>
   441b0:	01d00734 	movhi	r7,16412
   441b4:	000d883a 	mov	r6,zero
   441b8:	1009883a 	mov	r4,r2
   441bc:	180b883a 	mov	r5,r3
   441c0:	004aa540 	call	4aa54 <__adddf3>
   441c4:	d9c00517 	ldw	r7,20(sp)
   441c8:	047f3034 	movhi	r17,64704
   441cc:	1021883a 	mov	r16,r2
   441d0:	39ffffc4 	addi	r7,r7,-1
   441d4:	d9c01315 	stw	r7,76(sp)
   441d8:	1c63883a 	add	r17,r3,r17
   441dc:	db000c17 	ldw	r12,48(sp)
   441e0:	003bea06 	br	4318c <__alt_data_end+0xfffd118c>
   441e4:	dc000915 	stw	r16,36(sp)
   441e8:	003e0e06 	br	43a24 <__alt_data_end+0xfffd1a24>
   441ec:	01000e44 	movi	r4,57
   441f0:	8825883a 	mov	r18,r17
   441f4:	9dc00044 	addi	r23,r19,1
   441f8:	99000005 	stb	r4,0(r19)
   441fc:	a023883a 	mov	r17,r20
   44200:	dc000915 	stw	r16,36(sp)
   44204:	003da406 	br	43898 <__alt_data_end+0xfffd1898>
   44208:	d9801417 	ldw	r6,80(sp)
   4420c:	d9c01517 	ldw	r7,84(sp)
   44210:	0009883a 	mov	r4,zero
   44214:	014ff834 	movhi	r5,16352
   44218:	004c7940 	call	4c794 <__subdf3>
   4421c:	880d883a 	mov	r6,r17
   44220:	a00f883a 	mov	r7,r20
   44224:	1009883a 	mov	r4,r2
   44228:	180b883a 	mov	r5,r3
   4422c:	004bd580 	call	4bd58 <__gedf2>
   44230:	00bc7c0e 	bge	zero,r2,43424 <__alt_data_end+0xfffd1424>
   44234:	01000c04 	movi	r4,48
   44238:	00000106 	br	44240 <_dtoa_r+0x1580>
   4423c:	102f883a 	mov	r23,r2
   44240:	b8bfffc4 	addi	r2,r23,-1
   44244:	10c00007 	ldb	r3,0(r2)
   44248:	193ffc26 	beq	r3,r4,4423c <__alt_data_end+0xfffd223c>
   4424c:	d9801317 	ldw	r6,76(sp)
   44250:	d9800515 	stw	r6,20(sp)
   44254:	003c4406 	br	43368 <__alt_data_end+0xfffd1368>
   44258:	d9801317 	ldw	r6,76(sp)
   4425c:	d9800515 	stw	r6,20(sp)
   44260:	003cea06 	br	4360c <__alt_data_end+0xfffd160c>
   44264:	dd800f17 	ldw	r22,60(sp)
   44268:	dcc01017 	ldw	r19,64(sp)
   4426c:	dc801217 	ldw	r18,72(sp)
   44270:	003c6c06 	br	43424 <__alt_data_end+0xfffd1424>
   44274:	903e031e 	bne	r18,zero,43a84 <__alt_data_end+0xfffd1a84>
   44278:	003ebb06 	br	43d68 <__alt_data_end+0xfffd1d68>
   4427c:	103e6c1e 	bne	r2,zero,43c30 <__alt_data_end+0xfffd1c30>
   44280:	4080004c 	andi	r2,r8,1
   44284:	103e6a26 	beq	r2,zero,43c30 <__alt_data_end+0xfffd1c30>
   44288:	003e6606 	br	43c24 <__alt_data_end+0xfffd1c24>
   4428c:	d8c00317 	ldw	r3,12(sp)
   44290:	00800084 	movi	r2,2
   44294:	10c02916 	blt	r2,r3,4433c <_dtoa_r+0x167c>
   44298:	d9000c17 	ldw	r4,48(sp)
   4429c:	003e8806 	br	43cc0 <__alt_data_end+0xfffd1cc0>
   442a0:	04000084 	movi	r16,2
   442a4:	003b9d06 	br	4311c <__alt_data_end+0xfffd111c>
   442a8:	d9001317 	ldw	r4,76(sp)
   442ac:	d9000515 	stw	r4,20(sp)
   442b0:	003cd606 	br	4360c <__alt_data_end+0xfffd160c>
   442b4:	d8801317 	ldw	r2,76(sp)
   442b8:	d8800515 	stw	r2,20(sp)
   442bc:	003c2a06 	br	43368 <__alt_data_end+0xfffd1368>
   442c0:	d9800317 	ldw	r6,12(sp)
   442c4:	00800084 	movi	r2,2
   442c8:	11801516 	blt	r2,r6,44320 <_dtoa_r+0x1660>
   442cc:	d9c00c17 	ldw	r7,48(sp)
   442d0:	d9c00615 	stw	r7,24(sp)
   442d4:	003df706 	br	43ab4 <__alt_data_end+0xfffd1ab4>
   442d8:	193d3926 	beq	r3,r4,437c0 <__alt_data_end+0xfffd17c0>
   442dc:	00c00f04 	movi	r3,60
   442e0:	1885c83a 	sub	r2,r3,r2
   442e4:	003ddf06 	br	43a64 <__alt_data_end+0xfffd1a64>
   442e8:	e009883a 	mov	r4,fp
   442ec:	e0001115 	stw	zero,68(fp)
   442f0:	000b883a 	mov	r5,zero
   442f4:	00463780 	call	46378 <_Balloc>
   442f8:	d8800715 	stw	r2,28(sp)
   442fc:	d8c00717 	ldw	r3,28(sp)
   44300:	00bfffc4 	movi	r2,-1
   44304:	01000044 	movi	r4,1
   44308:	d8800c15 	stw	r2,48(sp)
   4430c:	e0c01015 	stw	r3,64(fp)
   44310:	d9000b15 	stw	r4,44(sp)
   44314:	d8800615 	stw	r2,24(sp)
   44318:	d8002215 	stw	zero,136(sp)
   4431c:	003c4106 	br	43424 <__alt_data_end+0xfffd1424>
   44320:	d8c00c17 	ldw	r3,48(sp)
   44324:	d8c00615 	stw	r3,24(sp)
   44328:	003e7006 	br	43cec <__alt_data_end+0xfffd1cec>
   4432c:	04400044 	movi	r17,1
   44330:	003b2006 	br	42fb4 <__alt_data_end+0xfffd0fb4>
   44334:	000b883a 	mov	r5,zero
   44338:	003b3d06 	br	43030 <__alt_data_end+0xfffd1030>
   4433c:	d8800c17 	ldw	r2,48(sp)
   44340:	d8800615 	stw	r2,24(sp)
   44344:	003e6906 	br	43cec <__alt_data_end+0xfffd1cec>

00044348 <__sflush_r>:
   44348:	2880030b 	ldhu	r2,12(r5)
   4434c:	defffb04 	addi	sp,sp,-20
   44350:	dcc00315 	stw	r19,12(sp)
   44354:	dc400115 	stw	r17,4(sp)
   44358:	dfc00415 	stw	ra,16(sp)
   4435c:	dc800215 	stw	r18,8(sp)
   44360:	dc000015 	stw	r16,0(sp)
   44364:	10c0020c 	andi	r3,r2,8
   44368:	2823883a 	mov	r17,r5
   4436c:	2027883a 	mov	r19,r4
   44370:	1800311e 	bne	r3,zero,44438 <__sflush_r+0xf0>
   44374:	28c00117 	ldw	r3,4(r5)
   44378:	10820014 	ori	r2,r2,2048
   4437c:	2880030d 	sth	r2,12(r5)
   44380:	00c04b0e 	bge	zero,r3,444b0 <__sflush_r+0x168>
   44384:	8a000a17 	ldw	r8,40(r17)
   44388:	40002326 	beq	r8,zero,44418 <__sflush_r+0xd0>
   4438c:	9c000017 	ldw	r16,0(r19)
   44390:	10c4000c 	andi	r3,r2,4096
   44394:	98000015 	stw	zero,0(r19)
   44398:	18004826 	beq	r3,zero,444bc <__sflush_r+0x174>
   4439c:	89801417 	ldw	r6,80(r17)
   443a0:	10c0010c 	andi	r3,r2,4
   443a4:	18000626 	beq	r3,zero,443c0 <__sflush_r+0x78>
   443a8:	88c00117 	ldw	r3,4(r17)
   443ac:	88800c17 	ldw	r2,48(r17)
   443b0:	30cdc83a 	sub	r6,r6,r3
   443b4:	10000226 	beq	r2,zero,443c0 <__sflush_r+0x78>
   443b8:	88800f17 	ldw	r2,60(r17)
   443bc:	308dc83a 	sub	r6,r6,r2
   443c0:	89400717 	ldw	r5,28(r17)
   443c4:	000f883a 	mov	r7,zero
   443c8:	9809883a 	mov	r4,r19
   443cc:	403ee83a 	callr	r8
   443d0:	00ffffc4 	movi	r3,-1
   443d4:	10c04426 	beq	r2,r3,444e8 <__sflush_r+0x1a0>
   443d8:	88c0030b 	ldhu	r3,12(r17)
   443dc:	89000417 	ldw	r4,16(r17)
   443e0:	88000115 	stw	zero,4(r17)
   443e4:	197dffcc 	andi	r5,r3,63487
   443e8:	8940030d 	sth	r5,12(r17)
   443ec:	89000015 	stw	r4,0(r17)
   443f0:	18c4000c 	andi	r3,r3,4096
   443f4:	18002c1e 	bne	r3,zero,444a8 <__sflush_r+0x160>
   443f8:	89400c17 	ldw	r5,48(r17)
   443fc:	9c000015 	stw	r16,0(r19)
   44400:	28000526 	beq	r5,zero,44418 <__sflush_r+0xd0>
   44404:	88801004 	addi	r2,r17,64
   44408:	28800226 	beq	r5,r2,44414 <__sflush_r+0xcc>
   4440c:	9809883a 	mov	r4,r19
   44410:	0044ac40 	call	44ac4 <_free_r>
   44414:	88000c15 	stw	zero,48(r17)
   44418:	0005883a 	mov	r2,zero
   4441c:	dfc00417 	ldw	ra,16(sp)
   44420:	dcc00317 	ldw	r19,12(sp)
   44424:	dc800217 	ldw	r18,8(sp)
   44428:	dc400117 	ldw	r17,4(sp)
   4442c:	dc000017 	ldw	r16,0(sp)
   44430:	dec00504 	addi	sp,sp,20
   44434:	f800283a 	ret
   44438:	2c800417 	ldw	r18,16(r5)
   4443c:	903ff626 	beq	r18,zero,44418 <__alt_data_end+0xfffd2418>
   44440:	2c000017 	ldw	r16,0(r5)
   44444:	108000cc 	andi	r2,r2,3
   44448:	2c800015 	stw	r18,0(r5)
   4444c:	84a1c83a 	sub	r16,r16,r18
   44450:	1000131e 	bne	r2,zero,444a0 <__sflush_r+0x158>
   44454:	28800517 	ldw	r2,20(r5)
   44458:	88800215 	stw	r2,8(r17)
   4445c:	04000316 	blt	zero,r16,4446c <__sflush_r+0x124>
   44460:	003fed06 	br	44418 <__alt_data_end+0xfffd2418>
   44464:	90a5883a 	add	r18,r18,r2
   44468:	043feb0e 	bge	zero,r16,44418 <__alt_data_end+0xfffd2418>
   4446c:	88800917 	ldw	r2,36(r17)
   44470:	89400717 	ldw	r5,28(r17)
   44474:	800f883a 	mov	r7,r16
   44478:	900d883a 	mov	r6,r18
   4447c:	9809883a 	mov	r4,r19
   44480:	103ee83a 	callr	r2
   44484:	80a1c83a 	sub	r16,r16,r2
   44488:	00bff616 	blt	zero,r2,44464 <__alt_data_end+0xfffd2464>
   4448c:	88c0030b 	ldhu	r3,12(r17)
   44490:	00bfffc4 	movi	r2,-1
   44494:	18c01014 	ori	r3,r3,64
   44498:	88c0030d 	sth	r3,12(r17)
   4449c:	003fdf06 	br	4441c <__alt_data_end+0xfffd241c>
   444a0:	0005883a 	mov	r2,zero
   444a4:	003fec06 	br	44458 <__alt_data_end+0xfffd2458>
   444a8:	88801415 	stw	r2,80(r17)
   444ac:	003fd206 	br	443f8 <__alt_data_end+0xfffd23f8>
   444b0:	28c00f17 	ldw	r3,60(r5)
   444b4:	00ffb316 	blt	zero,r3,44384 <__alt_data_end+0xfffd2384>
   444b8:	003fd706 	br	44418 <__alt_data_end+0xfffd2418>
   444bc:	89400717 	ldw	r5,28(r17)
   444c0:	000d883a 	mov	r6,zero
   444c4:	01c00044 	movi	r7,1
   444c8:	9809883a 	mov	r4,r19
   444cc:	403ee83a 	callr	r8
   444d0:	100d883a 	mov	r6,r2
   444d4:	00bfffc4 	movi	r2,-1
   444d8:	30801426 	beq	r6,r2,4452c <__sflush_r+0x1e4>
   444dc:	8880030b 	ldhu	r2,12(r17)
   444e0:	8a000a17 	ldw	r8,40(r17)
   444e4:	003fae06 	br	443a0 <__alt_data_end+0xfffd23a0>
   444e8:	98c00017 	ldw	r3,0(r19)
   444ec:	183fba26 	beq	r3,zero,443d8 <__alt_data_end+0xfffd23d8>
   444f0:	01000744 	movi	r4,29
   444f4:	19000626 	beq	r3,r4,44510 <__sflush_r+0x1c8>
   444f8:	01000584 	movi	r4,22
   444fc:	19000426 	beq	r3,r4,44510 <__sflush_r+0x1c8>
   44500:	88c0030b 	ldhu	r3,12(r17)
   44504:	18c01014 	ori	r3,r3,64
   44508:	88c0030d 	sth	r3,12(r17)
   4450c:	003fc306 	br	4441c <__alt_data_end+0xfffd241c>
   44510:	8880030b 	ldhu	r2,12(r17)
   44514:	88c00417 	ldw	r3,16(r17)
   44518:	88000115 	stw	zero,4(r17)
   4451c:	10bdffcc 	andi	r2,r2,63487
   44520:	8880030d 	sth	r2,12(r17)
   44524:	88c00015 	stw	r3,0(r17)
   44528:	003fb306 	br	443f8 <__alt_data_end+0xfffd23f8>
   4452c:	98800017 	ldw	r2,0(r19)
   44530:	103fea26 	beq	r2,zero,444dc <__alt_data_end+0xfffd24dc>
   44534:	00c00744 	movi	r3,29
   44538:	10c00226 	beq	r2,r3,44544 <__sflush_r+0x1fc>
   4453c:	00c00584 	movi	r3,22
   44540:	10c0031e 	bne	r2,r3,44550 <__sflush_r+0x208>
   44544:	9c000015 	stw	r16,0(r19)
   44548:	0005883a 	mov	r2,zero
   4454c:	003fb306 	br	4441c <__alt_data_end+0xfffd241c>
   44550:	88c0030b 	ldhu	r3,12(r17)
   44554:	3005883a 	mov	r2,r6
   44558:	18c01014 	ori	r3,r3,64
   4455c:	88c0030d 	sth	r3,12(r17)
   44560:	003fae06 	br	4441c <__alt_data_end+0xfffd241c>

00044564 <_fflush_r>:
   44564:	defffd04 	addi	sp,sp,-12
   44568:	dc000115 	stw	r16,4(sp)
   4456c:	dfc00215 	stw	ra,8(sp)
   44570:	2021883a 	mov	r16,r4
   44574:	20000226 	beq	r4,zero,44580 <_fflush_r+0x1c>
   44578:	20800e17 	ldw	r2,56(r4)
   4457c:	10000c26 	beq	r2,zero,445b0 <_fflush_r+0x4c>
   44580:	2880030f 	ldh	r2,12(r5)
   44584:	1000051e 	bne	r2,zero,4459c <_fflush_r+0x38>
   44588:	0005883a 	mov	r2,zero
   4458c:	dfc00217 	ldw	ra,8(sp)
   44590:	dc000117 	ldw	r16,4(sp)
   44594:	dec00304 	addi	sp,sp,12
   44598:	f800283a 	ret
   4459c:	8009883a 	mov	r4,r16
   445a0:	dfc00217 	ldw	ra,8(sp)
   445a4:	dc000117 	ldw	r16,4(sp)
   445a8:	dec00304 	addi	sp,sp,12
   445ac:	00443481 	jmpi	44348 <__sflush_r>
   445b0:	d9400015 	stw	r5,0(sp)
   445b4:	00449500 	call	44950 <__sinit>
   445b8:	d9400017 	ldw	r5,0(sp)
   445bc:	003ff006 	br	44580 <__alt_data_end+0xfffd2580>

000445c0 <fflush>:
   445c0:	20000526 	beq	r4,zero,445d8 <fflush+0x18>
   445c4:	00800174 	movhi	r2,5
   445c8:	10863c04 	addi	r2,r2,6384
   445cc:	200b883a 	mov	r5,r4
   445d0:	11000017 	ldw	r4,0(r2)
   445d4:	00445641 	jmpi	44564 <_fflush_r>
   445d8:	00800174 	movhi	r2,5
   445dc:	10863b04 	addi	r2,r2,6380
   445e0:	11000017 	ldw	r4,0(r2)
   445e4:	01400134 	movhi	r5,4
   445e8:	29515904 	addi	r5,r5,17764
   445ec:	00453601 	jmpi	45360 <_fwalk_reent>

000445f0 <__fp_unlock>:
   445f0:	0005883a 	mov	r2,zero
   445f4:	f800283a 	ret

000445f8 <_cleanup_r>:
   445f8:	01400174 	movhi	r5,5
   445fc:	29653f04 	addi	r5,r5,-27396
   44600:	00453601 	jmpi	45360 <_fwalk_reent>

00044604 <__sinit.part.1>:
   44604:	defff704 	addi	sp,sp,-36
   44608:	00c00134 	movhi	r3,4
   4460c:	dfc00815 	stw	ra,32(sp)
   44610:	ddc00715 	stw	r23,28(sp)
   44614:	dd800615 	stw	r22,24(sp)
   44618:	dd400515 	stw	r21,20(sp)
   4461c:	dd000415 	stw	r20,16(sp)
   44620:	dcc00315 	stw	r19,12(sp)
   44624:	dc800215 	stw	r18,8(sp)
   44628:	dc400115 	stw	r17,4(sp)
   4462c:	dc000015 	stw	r16,0(sp)
   44630:	18d17e04 	addi	r3,r3,17912
   44634:	24000117 	ldw	r16,4(r4)
   44638:	20c00f15 	stw	r3,60(r4)
   4463c:	2080bb04 	addi	r2,r4,748
   44640:	00c000c4 	movi	r3,3
   44644:	20c0b915 	stw	r3,740(r4)
   44648:	2080ba15 	stw	r2,744(r4)
   4464c:	2000b815 	stw	zero,736(r4)
   44650:	05c00204 	movi	r23,8
   44654:	00800104 	movi	r2,4
   44658:	2025883a 	mov	r18,r4
   4465c:	b80d883a 	mov	r6,r23
   44660:	81001704 	addi	r4,r16,92
   44664:	000b883a 	mov	r5,zero
   44668:	80000015 	stw	zero,0(r16)
   4466c:	80000115 	stw	zero,4(r16)
   44670:	80000215 	stw	zero,8(r16)
   44674:	8080030d 	sth	r2,12(r16)
   44678:	80001915 	stw	zero,100(r16)
   4467c:	8000038d 	sth	zero,14(r16)
   44680:	80000415 	stw	zero,16(r16)
   44684:	80000515 	stw	zero,20(r16)
   44688:	80000615 	stw	zero,24(r16)
   4468c:	00462500 	call	46250 <memset>
   44690:	05800134 	movhi	r22,4
   44694:	94400217 	ldw	r17,8(r18)
   44698:	05400134 	movhi	r21,4
   4469c:	05000134 	movhi	r20,4
   446a0:	04c00134 	movhi	r19,4
   446a4:	b59e9704 	addi	r22,r22,31324
   446a8:	ad5eae04 	addi	r21,r21,31416
   446ac:	a51ecd04 	addi	r20,r20,31540
   446b0:	9cdee404 	addi	r19,r19,31632
   446b4:	85800815 	stw	r22,32(r16)
   446b8:	85400915 	stw	r21,36(r16)
   446bc:	85000a15 	stw	r20,40(r16)
   446c0:	84c00b15 	stw	r19,44(r16)
   446c4:	84000715 	stw	r16,28(r16)
   446c8:	00800284 	movi	r2,10
   446cc:	8880030d 	sth	r2,12(r17)
   446d0:	00800044 	movi	r2,1
   446d4:	b80d883a 	mov	r6,r23
   446d8:	89001704 	addi	r4,r17,92
   446dc:	000b883a 	mov	r5,zero
   446e0:	88000015 	stw	zero,0(r17)
   446e4:	88000115 	stw	zero,4(r17)
   446e8:	88000215 	stw	zero,8(r17)
   446ec:	88001915 	stw	zero,100(r17)
   446f0:	8880038d 	sth	r2,14(r17)
   446f4:	88000415 	stw	zero,16(r17)
   446f8:	88000515 	stw	zero,20(r17)
   446fc:	88000615 	stw	zero,24(r17)
   44700:	00462500 	call	46250 <memset>
   44704:	94000317 	ldw	r16,12(r18)
   44708:	00800484 	movi	r2,18
   4470c:	8c400715 	stw	r17,28(r17)
   44710:	8d800815 	stw	r22,32(r17)
   44714:	8d400915 	stw	r21,36(r17)
   44718:	8d000a15 	stw	r20,40(r17)
   4471c:	8cc00b15 	stw	r19,44(r17)
   44720:	8080030d 	sth	r2,12(r16)
   44724:	00800084 	movi	r2,2
   44728:	80000015 	stw	zero,0(r16)
   4472c:	80000115 	stw	zero,4(r16)
   44730:	80000215 	stw	zero,8(r16)
   44734:	80001915 	stw	zero,100(r16)
   44738:	8080038d 	sth	r2,14(r16)
   4473c:	80000415 	stw	zero,16(r16)
   44740:	80000515 	stw	zero,20(r16)
   44744:	80000615 	stw	zero,24(r16)
   44748:	b80d883a 	mov	r6,r23
   4474c:	000b883a 	mov	r5,zero
   44750:	81001704 	addi	r4,r16,92
   44754:	00462500 	call	46250 <memset>
   44758:	00800044 	movi	r2,1
   4475c:	84000715 	stw	r16,28(r16)
   44760:	85800815 	stw	r22,32(r16)
   44764:	85400915 	stw	r21,36(r16)
   44768:	85000a15 	stw	r20,40(r16)
   4476c:	84c00b15 	stw	r19,44(r16)
   44770:	90800e15 	stw	r2,56(r18)
   44774:	dfc00817 	ldw	ra,32(sp)
   44778:	ddc00717 	ldw	r23,28(sp)
   4477c:	dd800617 	ldw	r22,24(sp)
   44780:	dd400517 	ldw	r21,20(sp)
   44784:	dd000417 	ldw	r20,16(sp)
   44788:	dcc00317 	ldw	r19,12(sp)
   4478c:	dc800217 	ldw	r18,8(sp)
   44790:	dc400117 	ldw	r17,4(sp)
   44794:	dc000017 	ldw	r16,0(sp)
   44798:	dec00904 	addi	sp,sp,36
   4479c:	f800283a 	ret

000447a0 <__fp_lock>:
   447a0:	0005883a 	mov	r2,zero
   447a4:	f800283a 	ret

000447a8 <__sfmoreglue>:
   447a8:	defffc04 	addi	sp,sp,-16
   447ac:	dc800215 	stw	r18,8(sp)
   447b0:	2825883a 	mov	r18,r5
   447b4:	dc000015 	stw	r16,0(sp)
   447b8:	01401a04 	movi	r5,104
   447bc:	2021883a 	mov	r16,r4
   447c0:	913fffc4 	addi	r4,r18,-1
   447c4:	dfc00315 	stw	ra,12(sp)
   447c8:	dc400115 	stw	r17,4(sp)
   447cc:	004aa2c0 	call	4aa2c <__mulsi3>
   447d0:	8009883a 	mov	r4,r16
   447d4:	11401d04 	addi	r5,r2,116
   447d8:	1023883a 	mov	r17,r2
   447dc:	00456bc0 	call	456bc <_malloc_r>
   447e0:	1021883a 	mov	r16,r2
   447e4:	10000726 	beq	r2,zero,44804 <__sfmoreglue+0x5c>
   447e8:	11000304 	addi	r4,r2,12
   447ec:	10000015 	stw	zero,0(r2)
   447f0:	14800115 	stw	r18,4(r2)
   447f4:	11000215 	stw	r4,8(r2)
   447f8:	89801a04 	addi	r6,r17,104
   447fc:	000b883a 	mov	r5,zero
   44800:	00462500 	call	46250 <memset>
   44804:	8005883a 	mov	r2,r16
   44808:	dfc00317 	ldw	ra,12(sp)
   4480c:	dc800217 	ldw	r18,8(sp)
   44810:	dc400117 	ldw	r17,4(sp)
   44814:	dc000017 	ldw	r16,0(sp)
   44818:	dec00404 	addi	sp,sp,16
   4481c:	f800283a 	ret

00044820 <__sfp>:
   44820:	defffb04 	addi	sp,sp,-20
   44824:	dc000015 	stw	r16,0(sp)
   44828:	04000174 	movhi	r16,5
   4482c:	84063b04 	addi	r16,r16,6380
   44830:	dcc00315 	stw	r19,12(sp)
   44834:	2027883a 	mov	r19,r4
   44838:	81000017 	ldw	r4,0(r16)
   4483c:	dfc00415 	stw	ra,16(sp)
   44840:	dc800215 	stw	r18,8(sp)
   44844:	20800e17 	ldw	r2,56(r4)
   44848:	dc400115 	stw	r17,4(sp)
   4484c:	1000021e 	bne	r2,zero,44858 <__sfp+0x38>
   44850:	00446040 	call	44604 <__sinit.part.1>
   44854:	81000017 	ldw	r4,0(r16)
   44858:	2480b804 	addi	r18,r4,736
   4485c:	047fffc4 	movi	r17,-1
   44860:	91000117 	ldw	r4,4(r18)
   44864:	94000217 	ldw	r16,8(r18)
   44868:	213fffc4 	addi	r4,r4,-1
   4486c:	20000a16 	blt	r4,zero,44898 <__sfp+0x78>
   44870:	8080030f 	ldh	r2,12(r16)
   44874:	10000c26 	beq	r2,zero,448a8 <__sfp+0x88>
   44878:	80c01d04 	addi	r3,r16,116
   4487c:	00000206 	br	44888 <__sfp+0x68>
   44880:	18bfe60f 	ldh	r2,-104(r3)
   44884:	10000826 	beq	r2,zero,448a8 <__sfp+0x88>
   44888:	213fffc4 	addi	r4,r4,-1
   4488c:	1c3ffd04 	addi	r16,r3,-12
   44890:	18c01a04 	addi	r3,r3,104
   44894:	247ffa1e 	bne	r4,r17,44880 <__alt_data_end+0xfffd2880>
   44898:	90800017 	ldw	r2,0(r18)
   4489c:	10001d26 	beq	r2,zero,44914 <__sfp+0xf4>
   448a0:	1025883a 	mov	r18,r2
   448a4:	003fee06 	br	44860 <__alt_data_end+0xfffd2860>
   448a8:	00bfffc4 	movi	r2,-1
   448ac:	8080038d 	sth	r2,14(r16)
   448b0:	00800044 	movi	r2,1
   448b4:	8080030d 	sth	r2,12(r16)
   448b8:	80001915 	stw	zero,100(r16)
   448bc:	80000015 	stw	zero,0(r16)
   448c0:	80000215 	stw	zero,8(r16)
   448c4:	80000115 	stw	zero,4(r16)
   448c8:	80000415 	stw	zero,16(r16)
   448cc:	80000515 	stw	zero,20(r16)
   448d0:	80000615 	stw	zero,24(r16)
   448d4:	01800204 	movi	r6,8
   448d8:	000b883a 	mov	r5,zero
   448dc:	81001704 	addi	r4,r16,92
   448e0:	00462500 	call	46250 <memset>
   448e4:	8005883a 	mov	r2,r16
   448e8:	80000c15 	stw	zero,48(r16)
   448ec:	80000d15 	stw	zero,52(r16)
   448f0:	80001115 	stw	zero,68(r16)
   448f4:	80001215 	stw	zero,72(r16)
   448f8:	dfc00417 	ldw	ra,16(sp)
   448fc:	dcc00317 	ldw	r19,12(sp)
   44900:	dc800217 	ldw	r18,8(sp)
   44904:	dc400117 	ldw	r17,4(sp)
   44908:	dc000017 	ldw	r16,0(sp)
   4490c:	dec00504 	addi	sp,sp,20
   44910:	f800283a 	ret
   44914:	01400104 	movi	r5,4
   44918:	9809883a 	mov	r4,r19
   4491c:	00447a80 	call	447a8 <__sfmoreglue>
   44920:	90800015 	stw	r2,0(r18)
   44924:	103fde1e 	bne	r2,zero,448a0 <__alt_data_end+0xfffd28a0>
   44928:	00800304 	movi	r2,12
   4492c:	98800015 	stw	r2,0(r19)
   44930:	0005883a 	mov	r2,zero
   44934:	003ff006 	br	448f8 <__alt_data_end+0xfffd28f8>

00044938 <_cleanup>:
   44938:	00800174 	movhi	r2,5
   4493c:	10863b04 	addi	r2,r2,6380
   44940:	11000017 	ldw	r4,0(r2)
   44944:	01400174 	movhi	r5,5
   44948:	29653f04 	addi	r5,r5,-27396
   4494c:	00453601 	jmpi	45360 <_fwalk_reent>

00044950 <__sinit>:
   44950:	20800e17 	ldw	r2,56(r4)
   44954:	10000126 	beq	r2,zero,4495c <__sinit+0xc>
   44958:	f800283a 	ret
   4495c:	00446041 	jmpi	44604 <__sinit.part.1>

00044960 <__sfp_lock_acquire>:
   44960:	f800283a 	ret

00044964 <__sfp_lock_release>:
   44964:	f800283a 	ret

00044968 <__sinit_lock_acquire>:
   44968:	f800283a 	ret

0004496c <__sinit_lock_release>:
   4496c:	f800283a 	ret

00044970 <__fp_lock_all>:
   44970:	00800174 	movhi	r2,5
   44974:	10863c04 	addi	r2,r2,6384
   44978:	11000017 	ldw	r4,0(r2)
   4497c:	01400134 	movhi	r5,4
   44980:	2951e804 	addi	r5,r5,18336
   44984:	004529c1 	jmpi	4529c <_fwalk>

00044988 <__fp_unlock_all>:
   44988:	00800174 	movhi	r2,5
   4498c:	10863c04 	addi	r2,r2,6384
   44990:	11000017 	ldw	r4,0(r2)
   44994:	01400134 	movhi	r5,4
   44998:	29517c04 	addi	r5,r5,17904
   4499c:	004529c1 	jmpi	4529c <_fwalk>

000449a0 <_malloc_trim_r>:
   449a0:	defffb04 	addi	sp,sp,-20
   449a4:	dcc00315 	stw	r19,12(sp)
   449a8:	04c00174 	movhi	r19,5
   449ac:	dc800215 	stw	r18,8(sp)
   449b0:	dc400115 	stw	r17,4(sp)
   449b4:	dc000015 	stw	r16,0(sp)
   449b8:	dfc00415 	stw	ra,16(sp)
   449bc:	2821883a 	mov	r16,r5
   449c0:	9cc0b704 	addi	r19,r19,732
   449c4:	2025883a 	mov	r18,r4
   449c8:	004db340 	call	4db34 <__malloc_lock>
   449cc:	98800217 	ldw	r2,8(r19)
   449d0:	14400117 	ldw	r17,4(r2)
   449d4:	00bfff04 	movi	r2,-4
   449d8:	88a2703a 	and	r17,r17,r2
   449dc:	8c21c83a 	sub	r16,r17,r16
   449e0:	8403fbc4 	addi	r16,r16,4079
   449e4:	8020d33a 	srli	r16,r16,12
   449e8:	0083ffc4 	movi	r2,4095
   449ec:	843fffc4 	addi	r16,r16,-1
   449f0:	8020933a 	slli	r16,r16,12
   449f4:	1400060e 	bge	r2,r16,44a10 <_malloc_trim_r+0x70>
   449f8:	000b883a 	mov	r5,zero
   449fc:	9009883a 	mov	r4,r18
   44a00:	0047a080 	call	47a08 <_sbrk_r>
   44a04:	98c00217 	ldw	r3,8(r19)
   44a08:	1c47883a 	add	r3,r3,r17
   44a0c:	10c00a26 	beq	r2,r3,44a38 <_malloc_trim_r+0x98>
   44a10:	9009883a 	mov	r4,r18
   44a14:	004db580 	call	4db58 <__malloc_unlock>
   44a18:	0005883a 	mov	r2,zero
   44a1c:	dfc00417 	ldw	ra,16(sp)
   44a20:	dcc00317 	ldw	r19,12(sp)
   44a24:	dc800217 	ldw	r18,8(sp)
   44a28:	dc400117 	ldw	r17,4(sp)
   44a2c:	dc000017 	ldw	r16,0(sp)
   44a30:	dec00504 	addi	sp,sp,20
   44a34:	f800283a 	ret
   44a38:	040bc83a 	sub	r5,zero,r16
   44a3c:	9009883a 	mov	r4,r18
   44a40:	0047a080 	call	47a08 <_sbrk_r>
   44a44:	00ffffc4 	movi	r3,-1
   44a48:	10c00d26 	beq	r2,r3,44a80 <_malloc_trim_r+0xe0>
   44a4c:	00c00174 	movhi	r3,5
   44a50:	18cd1604 	addi	r3,r3,13400
   44a54:	18800017 	ldw	r2,0(r3)
   44a58:	99000217 	ldw	r4,8(r19)
   44a5c:	8c23c83a 	sub	r17,r17,r16
   44a60:	8c400054 	ori	r17,r17,1
   44a64:	1421c83a 	sub	r16,r2,r16
   44a68:	24400115 	stw	r17,4(r4)
   44a6c:	9009883a 	mov	r4,r18
   44a70:	1c000015 	stw	r16,0(r3)
   44a74:	004db580 	call	4db58 <__malloc_unlock>
   44a78:	00800044 	movi	r2,1
   44a7c:	003fe706 	br	44a1c <__alt_data_end+0xfffd2a1c>
   44a80:	000b883a 	mov	r5,zero
   44a84:	9009883a 	mov	r4,r18
   44a88:	0047a080 	call	47a08 <_sbrk_r>
   44a8c:	99000217 	ldw	r4,8(r19)
   44a90:	014003c4 	movi	r5,15
   44a94:	1107c83a 	sub	r3,r2,r4
   44a98:	28ffdd0e 	bge	r5,r3,44a10 <__alt_data_end+0xfffd2a10>
   44a9c:	01400174 	movhi	r5,5
   44aa0:	29463e04 	addi	r5,r5,6392
   44aa4:	29400017 	ldw	r5,0(r5)
   44aa8:	18c00054 	ori	r3,r3,1
   44aac:	20c00115 	stw	r3,4(r4)
   44ab0:	00c00174 	movhi	r3,5
   44ab4:	1145c83a 	sub	r2,r2,r5
   44ab8:	18cd1604 	addi	r3,r3,13400
   44abc:	18800015 	stw	r2,0(r3)
   44ac0:	003fd306 	br	44a10 <__alt_data_end+0xfffd2a10>

00044ac4 <_free_r>:
   44ac4:	28004126 	beq	r5,zero,44bcc <_free_r+0x108>
   44ac8:	defffd04 	addi	sp,sp,-12
   44acc:	dc400115 	stw	r17,4(sp)
   44ad0:	dc000015 	stw	r16,0(sp)
   44ad4:	2023883a 	mov	r17,r4
   44ad8:	2821883a 	mov	r16,r5
   44adc:	dfc00215 	stw	ra,8(sp)
   44ae0:	004db340 	call	4db34 <__malloc_lock>
   44ae4:	81ffff17 	ldw	r7,-4(r16)
   44ae8:	00bfff84 	movi	r2,-2
   44aec:	01000174 	movhi	r4,5
   44af0:	81bffe04 	addi	r6,r16,-8
   44af4:	3884703a 	and	r2,r7,r2
   44af8:	2100b704 	addi	r4,r4,732
   44afc:	308b883a 	add	r5,r6,r2
   44b00:	2a400117 	ldw	r9,4(r5)
   44b04:	22000217 	ldw	r8,8(r4)
   44b08:	00ffff04 	movi	r3,-4
   44b0c:	48c6703a 	and	r3,r9,r3
   44b10:	2a005726 	beq	r5,r8,44c70 <_free_r+0x1ac>
   44b14:	28c00115 	stw	r3,4(r5)
   44b18:	39c0004c 	andi	r7,r7,1
   44b1c:	3800091e 	bne	r7,zero,44b44 <_free_r+0x80>
   44b20:	823ffe17 	ldw	r8,-8(r16)
   44b24:	22400204 	addi	r9,r4,8
   44b28:	320dc83a 	sub	r6,r6,r8
   44b2c:	31c00217 	ldw	r7,8(r6)
   44b30:	1205883a 	add	r2,r2,r8
   44b34:	3a406526 	beq	r7,r9,44ccc <_free_r+0x208>
   44b38:	32000317 	ldw	r8,12(r6)
   44b3c:	3a000315 	stw	r8,12(r7)
   44b40:	41c00215 	stw	r7,8(r8)
   44b44:	28cf883a 	add	r7,r5,r3
   44b48:	39c00117 	ldw	r7,4(r7)
   44b4c:	39c0004c 	andi	r7,r7,1
   44b50:	38003a26 	beq	r7,zero,44c3c <_free_r+0x178>
   44b54:	10c00054 	ori	r3,r2,1
   44b58:	30c00115 	stw	r3,4(r6)
   44b5c:	3087883a 	add	r3,r6,r2
   44b60:	18800015 	stw	r2,0(r3)
   44b64:	00c07fc4 	movi	r3,511
   44b68:	18801936 	bltu	r3,r2,44bd0 <_free_r+0x10c>
   44b6c:	1004d0fa 	srli	r2,r2,3
   44b70:	01c00044 	movi	r7,1
   44b74:	21400117 	ldw	r5,4(r4)
   44b78:	10c00044 	addi	r3,r2,1
   44b7c:	18c7883a 	add	r3,r3,r3
   44b80:	1005d0ba 	srai	r2,r2,2
   44b84:	18c7883a 	add	r3,r3,r3
   44b88:	18c7883a 	add	r3,r3,r3
   44b8c:	1907883a 	add	r3,r3,r4
   44b90:	3884983a 	sll	r2,r7,r2
   44b94:	19c00017 	ldw	r7,0(r3)
   44b98:	1a3ffe04 	addi	r8,r3,-8
   44b9c:	1144b03a 	or	r2,r2,r5
   44ba0:	32000315 	stw	r8,12(r6)
   44ba4:	31c00215 	stw	r7,8(r6)
   44ba8:	20800115 	stw	r2,4(r4)
   44bac:	19800015 	stw	r6,0(r3)
   44bb0:	39800315 	stw	r6,12(r7)
   44bb4:	8809883a 	mov	r4,r17
   44bb8:	dfc00217 	ldw	ra,8(sp)
   44bbc:	dc400117 	ldw	r17,4(sp)
   44bc0:	dc000017 	ldw	r16,0(sp)
   44bc4:	dec00304 	addi	sp,sp,12
   44bc8:	004db581 	jmpi	4db58 <__malloc_unlock>
   44bcc:	f800283a 	ret
   44bd0:	100ad27a 	srli	r5,r2,9
   44bd4:	00c00104 	movi	r3,4
   44bd8:	19404a36 	bltu	r3,r5,44d04 <_free_r+0x240>
   44bdc:	100ad1ba 	srli	r5,r2,6
   44be0:	28c00e44 	addi	r3,r5,57
   44be4:	18c7883a 	add	r3,r3,r3
   44be8:	29400e04 	addi	r5,r5,56
   44bec:	18c7883a 	add	r3,r3,r3
   44bf0:	18c7883a 	add	r3,r3,r3
   44bf4:	1909883a 	add	r4,r3,r4
   44bf8:	20c00017 	ldw	r3,0(r4)
   44bfc:	01c00174 	movhi	r7,5
   44c00:	213ffe04 	addi	r4,r4,-8
   44c04:	39c0b704 	addi	r7,r7,732
   44c08:	20c04426 	beq	r4,r3,44d1c <_free_r+0x258>
   44c0c:	01ffff04 	movi	r7,-4
   44c10:	19400117 	ldw	r5,4(r3)
   44c14:	29ca703a 	and	r5,r5,r7
   44c18:	1140022e 	bgeu	r2,r5,44c24 <_free_r+0x160>
   44c1c:	18c00217 	ldw	r3,8(r3)
   44c20:	20fffb1e 	bne	r4,r3,44c10 <__alt_data_end+0xfffd2c10>
   44c24:	19000317 	ldw	r4,12(r3)
   44c28:	31000315 	stw	r4,12(r6)
   44c2c:	30c00215 	stw	r3,8(r6)
   44c30:	21800215 	stw	r6,8(r4)
   44c34:	19800315 	stw	r6,12(r3)
   44c38:	003fde06 	br	44bb4 <__alt_data_end+0xfffd2bb4>
   44c3c:	29c00217 	ldw	r7,8(r5)
   44c40:	10c5883a 	add	r2,r2,r3
   44c44:	00c00174 	movhi	r3,5
   44c48:	18c0b904 	addi	r3,r3,740
   44c4c:	38c03b26 	beq	r7,r3,44d3c <_free_r+0x278>
   44c50:	2a000317 	ldw	r8,12(r5)
   44c54:	11400054 	ori	r5,r2,1
   44c58:	3087883a 	add	r3,r6,r2
   44c5c:	3a000315 	stw	r8,12(r7)
   44c60:	41c00215 	stw	r7,8(r8)
   44c64:	31400115 	stw	r5,4(r6)
   44c68:	18800015 	stw	r2,0(r3)
   44c6c:	003fbd06 	br	44b64 <__alt_data_end+0xfffd2b64>
   44c70:	39c0004c 	andi	r7,r7,1
   44c74:	10c5883a 	add	r2,r2,r3
   44c78:	3800071e 	bne	r7,zero,44c98 <_free_r+0x1d4>
   44c7c:	81fffe17 	ldw	r7,-8(r16)
   44c80:	31cdc83a 	sub	r6,r6,r7
   44c84:	30c00317 	ldw	r3,12(r6)
   44c88:	31400217 	ldw	r5,8(r6)
   44c8c:	11c5883a 	add	r2,r2,r7
   44c90:	28c00315 	stw	r3,12(r5)
   44c94:	19400215 	stw	r5,8(r3)
   44c98:	10c00054 	ori	r3,r2,1
   44c9c:	30c00115 	stw	r3,4(r6)
   44ca0:	00c00174 	movhi	r3,5
   44ca4:	18c63f04 	addi	r3,r3,6396
   44ca8:	18c00017 	ldw	r3,0(r3)
   44cac:	21800215 	stw	r6,8(r4)
   44cb0:	10ffc036 	bltu	r2,r3,44bb4 <__alt_data_end+0xfffd2bb4>
   44cb4:	00800174 	movhi	r2,5
   44cb8:	108d0d04 	addi	r2,r2,13364
   44cbc:	11400017 	ldw	r5,0(r2)
   44cc0:	8809883a 	mov	r4,r17
   44cc4:	00449a00 	call	449a0 <_malloc_trim_r>
   44cc8:	003fba06 	br	44bb4 <__alt_data_end+0xfffd2bb4>
   44ccc:	28c9883a 	add	r4,r5,r3
   44cd0:	21000117 	ldw	r4,4(r4)
   44cd4:	2100004c 	andi	r4,r4,1
   44cd8:	2000391e 	bne	r4,zero,44dc0 <_free_r+0x2fc>
   44cdc:	29c00217 	ldw	r7,8(r5)
   44ce0:	29000317 	ldw	r4,12(r5)
   44ce4:	1885883a 	add	r2,r3,r2
   44ce8:	10c00054 	ori	r3,r2,1
   44cec:	39000315 	stw	r4,12(r7)
   44cf0:	21c00215 	stw	r7,8(r4)
   44cf4:	30c00115 	stw	r3,4(r6)
   44cf8:	308d883a 	add	r6,r6,r2
   44cfc:	30800015 	stw	r2,0(r6)
   44d00:	003fac06 	br	44bb4 <__alt_data_end+0xfffd2bb4>
   44d04:	00c00504 	movi	r3,20
   44d08:	19401536 	bltu	r3,r5,44d60 <_free_r+0x29c>
   44d0c:	28c01704 	addi	r3,r5,92
   44d10:	18c7883a 	add	r3,r3,r3
   44d14:	294016c4 	addi	r5,r5,91
   44d18:	003fb406 	br	44bec <__alt_data_end+0xfffd2bec>
   44d1c:	280bd0ba 	srai	r5,r5,2
   44d20:	00c00044 	movi	r3,1
   44d24:	38800117 	ldw	r2,4(r7)
   44d28:	194a983a 	sll	r5,r3,r5
   44d2c:	2007883a 	mov	r3,r4
   44d30:	2884b03a 	or	r2,r5,r2
   44d34:	38800115 	stw	r2,4(r7)
   44d38:	003fbb06 	br	44c28 <__alt_data_end+0xfffd2c28>
   44d3c:	21800515 	stw	r6,20(r4)
   44d40:	21800415 	stw	r6,16(r4)
   44d44:	10c00054 	ori	r3,r2,1
   44d48:	31c00315 	stw	r7,12(r6)
   44d4c:	31c00215 	stw	r7,8(r6)
   44d50:	30c00115 	stw	r3,4(r6)
   44d54:	308d883a 	add	r6,r6,r2
   44d58:	30800015 	stw	r2,0(r6)
   44d5c:	003f9506 	br	44bb4 <__alt_data_end+0xfffd2bb4>
   44d60:	00c01504 	movi	r3,84
   44d64:	19400536 	bltu	r3,r5,44d7c <_free_r+0x2b8>
   44d68:	100ad33a 	srli	r5,r2,12
   44d6c:	28c01bc4 	addi	r3,r5,111
   44d70:	18c7883a 	add	r3,r3,r3
   44d74:	29401b84 	addi	r5,r5,110
   44d78:	003f9c06 	br	44bec <__alt_data_end+0xfffd2bec>
   44d7c:	00c05504 	movi	r3,340
   44d80:	19400536 	bltu	r3,r5,44d98 <_free_r+0x2d4>
   44d84:	100ad3fa 	srli	r5,r2,15
   44d88:	28c01e04 	addi	r3,r5,120
   44d8c:	18c7883a 	add	r3,r3,r3
   44d90:	29401dc4 	addi	r5,r5,119
   44d94:	003f9506 	br	44bec <__alt_data_end+0xfffd2bec>
   44d98:	00c15504 	movi	r3,1364
   44d9c:	19400536 	bltu	r3,r5,44db4 <_free_r+0x2f0>
   44da0:	100ad4ba 	srli	r5,r2,18
   44da4:	28c01f44 	addi	r3,r5,125
   44da8:	18c7883a 	add	r3,r3,r3
   44dac:	29401f04 	addi	r5,r5,124
   44db0:	003f8e06 	br	44bec <__alt_data_end+0xfffd2bec>
   44db4:	00c03f84 	movi	r3,254
   44db8:	01401f84 	movi	r5,126
   44dbc:	003f8b06 	br	44bec <__alt_data_end+0xfffd2bec>
   44dc0:	10c00054 	ori	r3,r2,1
   44dc4:	30c00115 	stw	r3,4(r6)
   44dc8:	308d883a 	add	r6,r6,r2
   44dcc:	30800015 	stw	r2,0(r6)
   44dd0:	003f7806 	br	44bb4 <__alt_data_end+0xfffd2bb4>

00044dd4 <__sfvwrite_r>:
   44dd4:	30800217 	ldw	r2,8(r6)
   44dd8:	10006726 	beq	r2,zero,44f78 <__sfvwrite_r+0x1a4>
   44ddc:	28c0030b 	ldhu	r3,12(r5)
   44de0:	defff404 	addi	sp,sp,-48
   44de4:	dd400715 	stw	r21,28(sp)
   44de8:	dd000615 	stw	r20,24(sp)
   44dec:	dc000215 	stw	r16,8(sp)
   44df0:	dfc00b15 	stw	ra,44(sp)
   44df4:	df000a15 	stw	fp,40(sp)
   44df8:	ddc00915 	stw	r23,36(sp)
   44dfc:	dd800815 	stw	r22,32(sp)
   44e00:	dcc00515 	stw	r19,20(sp)
   44e04:	dc800415 	stw	r18,16(sp)
   44e08:	dc400315 	stw	r17,12(sp)
   44e0c:	1880020c 	andi	r2,r3,8
   44e10:	2821883a 	mov	r16,r5
   44e14:	202b883a 	mov	r21,r4
   44e18:	3029883a 	mov	r20,r6
   44e1c:	10002726 	beq	r2,zero,44ebc <__sfvwrite_r+0xe8>
   44e20:	28800417 	ldw	r2,16(r5)
   44e24:	10002526 	beq	r2,zero,44ebc <__sfvwrite_r+0xe8>
   44e28:	1880008c 	andi	r2,r3,2
   44e2c:	a4400017 	ldw	r17,0(r20)
   44e30:	10002a26 	beq	r2,zero,44edc <__sfvwrite_r+0x108>
   44e34:	05a00034 	movhi	r22,32768
   44e38:	0027883a 	mov	r19,zero
   44e3c:	0025883a 	mov	r18,zero
   44e40:	b5bf0004 	addi	r22,r22,-1024
   44e44:	980d883a 	mov	r6,r19
   44e48:	a809883a 	mov	r4,r21
   44e4c:	90004626 	beq	r18,zero,44f68 <__sfvwrite_r+0x194>
   44e50:	900f883a 	mov	r7,r18
   44e54:	b480022e 	bgeu	r22,r18,44e60 <__sfvwrite_r+0x8c>
   44e58:	01e00034 	movhi	r7,32768
   44e5c:	39ff0004 	addi	r7,r7,-1024
   44e60:	80800917 	ldw	r2,36(r16)
   44e64:	81400717 	ldw	r5,28(r16)
   44e68:	103ee83a 	callr	r2
   44e6c:	00805a0e 	bge	zero,r2,44fd8 <__sfvwrite_r+0x204>
   44e70:	a0c00217 	ldw	r3,8(r20)
   44e74:	98a7883a 	add	r19,r19,r2
   44e78:	90a5c83a 	sub	r18,r18,r2
   44e7c:	1885c83a 	sub	r2,r3,r2
   44e80:	a0800215 	stw	r2,8(r20)
   44e84:	103fef1e 	bne	r2,zero,44e44 <__alt_data_end+0xfffd2e44>
   44e88:	0005883a 	mov	r2,zero
   44e8c:	dfc00b17 	ldw	ra,44(sp)
   44e90:	df000a17 	ldw	fp,40(sp)
   44e94:	ddc00917 	ldw	r23,36(sp)
   44e98:	dd800817 	ldw	r22,32(sp)
   44e9c:	dd400717 	ldw	r21,28(sp)
   44ea0:	dd000617 	ldw	r20,24(sp)
   44ea4:	dcc00517 	ldw	r19,20(sp)
   44ea8:	dc800417 	ldw	r18,16(sp)
   44eac:	dc400317 	ldw	r17,12(sp)
   44eb0:	dc000217 	ldw	r16,8(sp)
   44eb4:	dec00c04 	addi	sp,sp,48
   44eb8:	f800283a 	ret
   44ebc:	800b883a 	mov	r5,r16
   44ec0:	a809883a 	mov	r4,r21
   44ec4:	00429440 	call	42944 <__swsetup_r>
   44ec8:	1000ee1e 	bne	r2,zero,45284 <__sfvwrite_r+0x4b0>
   44ecc:	80c0030b 	ldhu	r3,12(r16)
   44ed0:	a4400017 	ldw	r17,0(r20)
   44ed4:	1880008c 	andi	r2,r3,2
   44ed8:	103fd61e 	bne	r2,zero,44e34 <__alt_data_end+0xfffd2e34>
   44edc:	1880004c 	andi	r2,r3,1
   44ee0:	1000421e 	bne	r2,zero,44fec <__sfvwrite_r+0x218>
   44ee4:	0039883a 	mov	fp,zero
   44ee8:	0025883a 	mov	r18,zero
   44eec:	90001a26 	beq	r18,zero,44f58 <__sfvwrite_r+0x184>
   44ef0:	1880800c 	andi	r2,r3,512
   44ef4:	84c00217 	ldw	r19,8(r16)
   44ef8:	10002126 	beq	r2,zero,44f80 <__sfvwrite_r+0x1ac>
   44efc:	982f883a 	mov	r23,r19
   44f00:	94c09636 	bltu	r18,r19,4515c <__sfvwrite_r+0x388>
   44f04:	1881200c 	andi	r2,r3,1152
   44f08:	1000a11e 	bne	r2,zero,45190 <__sfvwrite_r+0x3bc>
   44f0c:	81000017 	ldw	r4,0(r16)
   44f10:	b80d883a 	mov	r6,r23
   44f14:	e00b883a 	mov	r5,fp
   44f18:	00460f40 	call	460f4 <memmove>
   44f1c:	80c00217 	ldw	r3,8(r16)
   44f20:	81000017 	ldw	r4,0(r16)
   44f24:	9005883a 	mov	r2,r18
   44f28:	1ce7c83a 	sub	r19,r3,r19
   44f2c:	25cf883a 	add	r7,r4,r23
   44f30:	84c00215 	stw	r19,8(r16)
   44f34:	81c00015 	stw	r7,0(r16)
   44f38:	a0c00217 	ldw	r3,8(r20)
   44f3c:	e0b9883a 	add	fp,fp,r2
   44f40:	90a5c83a 	sub	r18,r18,r2
   44f44:	18a7c83a 	sub	r19,r3,r2
   44f48:	a4c00215 	stw	r19,8(r20)
   44f4c:	983fce26 	beq	r19,zero,44e88 <__alt_data_end+0xfffd2e88>
   44f50:	80c0030b 	ldhu	r3,12(r16)
   44f54:	903fe61e 	bne	r18,zero,44ef0 <__alt_data_end+0xfffd2ef0>
   44f58:	8f000017 	ldw	fp,0(r17)
   44f5c:	8c800117 	ldw	r18,4(r17)
   44f60:	8c400204 	addi	r17,r17,8
   44f64:	003fe106 	br	44eec <__alt_data_end+0xfffd2eec>
   44f68:	8cc00017 	ldw	r19,0(r17)
   44f6c:	8c800117 	ldw	r18,4(r17)
   44f70:	8c400204 	addi	r17,r17,8
   44f74:	003fb306 	br	44e44 <__alt_data_end+0xfffd2e44>
   44f78:	0005883a 	mov	r2,zero
   44f7c:	f800283a 	ret
   44f80:	81000017 	ldw	r4,0(r16)
   44f84:	80800417 	ldw	r2,16(r16)
   44f88:	11005a36 	bltu	r2,r4,450f4 <__sfvwrite_r+0x320>
   44f8c:	85c00517 	ldw	r23,20(r16)
   44f90:	95c05836 	bltu	r18,r23,450f4 <__sfvwrite_r+0x320>
   44f94:	00a00034 	movhi	r2,32768
   44f98:	10bfffc4 	addi	r2,r2,-1
   44f9c:	9009883a 	mov	r4,r18
   44fa0:	1480012e 	bgeu	r2,r18,44fa8 <__sfvwrite_r+0x1d4>
   44fa4:	1009883a 	mov	r4,r2
   44fa8:	b80b883a 	mov	r5,r23
   44fac:	004a8780 	call	4a878 <__divsi3>
   44fb0:	b80b883a 	mov	r5,r23
   44fb4:	1009883a 	mov	r4,r2
   44fb8:	004aa2c0 	call	4aa2c <__mulsi3>
   44fbc:	81400717 	ldw	r5,28(r16)
   44fc0:	80c00917 	ldw	r3,36(r16)
   44fc4:	100f883a 	mov	r7,r2
   44fc8:	e00d883a 	mov	r6,fp
   44fcc:	a809883a 	mov	r4,r21
   44fd0:	183ee83a 	callr	r3
   44fd4:	00bfd816 	blt	zero,r2,44f38 <__alt_data_end+0xfffd2f38>
   44fd8:	8080030b 	ldhu	r2,12(r16)
   44fdc:	10801014 	ori	r2,r2,64
   44fe0:	8080030d 	sth	r2,12(r16)
   44fe4:	00bfffc4 	movi	r2,-1
   44fe8:	003fa806 	br	44e8c <__alt_data_end+0xfffd2e8c>
   44fec:	0027883a 	mov	r19,zero
   44ff0:	0011883a 	mov	r8,zero
   44ff4:	0039883a 	mov	fp,zero
   44ff8:	0025883a 	mov	r18,zero
   44ffc:	90001f26 	beq	r18,zero,4507c <__sfvwrite_r+0x2a8>
   45000:	40005a26 	beq	r8,zero,4516c <__sfvwrite_r+0x398>
   45004:	982d883a 	mov	r22,r19
   45008:	94c0012e 	bgeu	r18,r19,45010 <__sfvwrite_r+0x23c>
   4500c:	902d883a 	mov	r22,r18
   45010:	81000017 	ldw	r4,0(r16)
   45014:	80800417 	ldw	r2,16(r16)
   45018:	b02f883a 	mov	r23,r22
   4501c:	81c00517 	ldw	r7,20(r16)
   45020:	1100032e 	bgeu	r2,r4,45030 <__sfvwrite_r+0x25c>
   45024:	80c00217 	ldw	r3,8(r16)
   45028:	38c7883a 	add	r3,r7,r3
   4502c:	1d801816 	blt	r3,r22,45090 <__sfvwrite_r+0x2bc>
   45030:	b1c03e16 	blt	r22,r7,4512c <__sfvwrite_r+0x358>
   45034:	80800917 	ldw	r2,36(r16)
   45038:	81400717 	ldw	r5,28(r16)
   4503c:	e00d883a 	mov	r6,fp
   45040:	da000115 	stw	r8,4(sp)
   45044:	a809883a 	mov	r4,r21
   45048:	103ee83a 	callr	r2
   4504c:	102f883a 	mov	r23,r2
   45050:	da000117 	ldw	r8,4(sp)
   45054:	00bfe00e 	bge	zero,r2,44fd8 <__alt_data_end+0xfffd2fd8>
   45058:	9de7c83a 	sub	r19,r19,r23
   4505c:	98001f26 	beq	r19,zero,450dc <__sfvwrite_r+0x308>
   45060:	a0800217 	ldw	r2,8(r20)
   45064:	e5f9883a 	add	fp,fp,r23
   45068:	95e5c83a 	sub	r18,r18,r23
   4506c:	15efc83a 	sub	r23,r2,r23
   45070:	a5c00215 	stw	r23,8(r20)
   45074:	b83f8426 	beq	r23,zero,44e88 <__alt_data_end+0xfffd2e88>
   45078:	903fe11e 	bne	r18,zero,45000 <__alt_data_end+0xfffd3000>
   4507c:	8f000017 	ldw	fp,0(r17)
   45080:	8c800117 	ldw	r18,4(r17)
   45084:	0011883a 	mov	r8,zero
   45088:	8c400204 	addi	r17,r17,8
   4508c:	003fdb06 	br	44ffc <__alt_data_end+0xfffd2ffc>
   45090:	180d883a 	mov	r6,r3
   45094:	e00b883a 	mov	r5,fp
   45098:	da000115 	stw	r8,4(sp)
   4509c:	d8c00015 	stw	r3,0(sp)
   450a0:	00460f40 	call	460f4 <memmove>
   450a4:	d8c00017 	ldw	r3,0(sp)
   450a8:	80800017 	ldw	r2,0(r16)
   450ac:	800b883a 	mov	r5,r16
   450b0:	a809883a 	mov	r4,r21
   450b4:	10c5883a 	add	r2,r2,r3
   450b8:	80800015 	stw	r2,0(r16)
   450bc:	d8c00015 	stw	r3,0(sp)
   450c0:	00445640 	call	44564 <_fflush_r>
   450c4:	d8c00017 	ldw	r3,0(sp)
   450c8:	da000117 	ldw	r8,4(sp)
   450cc:	103fc21e 	bne	r2,zero,44fd8 <__alt_data_end+0xfffd2fd8>
   450d0:	182f883a 	mov	r23,r3
   450d4:	9de7c83a 	sub	r19,r19,r23
   450d8:	983fe11e 	bne	r19,zero,45060 <__alt_data_end+0xfffd3060>
   450dc:	800b883a 	mov	r5,r16
   450e0:	a809883a 	mov	r4,r21
   450e4:	00445640 	call	44564 <_fflush_r>
   450e8:	103fbb1e 	bne	r2,zero,44fd8 <__alt_data_end+0xfffd2fd8>
   450ec:	0011883a 	mov	r8,zero
   450f0:	003fdb06 	br	45060 <__alt_data_end+0xfffd3060>
   450f4:	94c0012e 	bgeu	r18,r19,450fc <__sfvwrite_r+0x328>
   450f8:	9027883a 	mov	r19,r18
   450fc:	980d883a 	mov	r6,r19
   45100:	e00b883a 	mov	r5,fp
   45104:	00460f40 	call	460f4 <memmove>
   45108:	80800217 	ldw	r2,8(r16)
   4510c:	80c00017 	ldw	r3,0(r16)
   45110:	14c5c83a 	sub	r2,r2,r19
   45114:	1cc7883a 	add	r3,r3,r19
   45118:	80800215 	stw	r2,8(r16)
   4511c:	80c00015 	stw	r3,0(r16)
   45120:	10004326 	beq	r2,zero,45230 <__sfvwrite_r+0x45c>
   45124:	9805883a 	mov	r2,r19
   45128:	003f8306 	br	44f38 <__alt_data_end+0xfffd2f38>
   4512c:	b00d883a 	mov	r6,r22
   45130:	e00b883a 	mov	r5,fp
   45134:	da000115 	stw	r8,4(sp)
   45138:	00460f40 	call	460f4 <memmove>
   4513c:	80800217 	ldw	r2,8(r16)
   45140:	80c00017 	ldw	r3,0(r16)
   45144:	da000117 	ldw	r8,4(sp)
   45148:	1585c83a 	sub	r2,r2,r22
   4514c:	1dad883a 	add	r22,r3,r22
   45150:	80800215 	stw	r2,8(r16)
   45154:	85800015 	stw	r22,0(r16)
   45158:	003fbf06 	br	45058 <__alt_data_end+0xfffd3058>
   4515c:	81000017 	ldw	r4,0(r16)
   45160:	9027883a 	mov	r19,r18
   45164:	902f883a 	mov	r23,r18
   45168:	003f6906 	br	44f10 <__alt_data_end+0xfffd2f10>
   4516c:	900d883a 	mov	r6,r18
   45170:	01400284 	movi	r5,10
   45174:	e009883a 	mov	r4,fp
   45178:	0045ec80 	call	45ec8 <memchr>
   4517c:	10003e26 	beq	r2,zero,45278 <__sfvwrite_r+0x4a4>
   45180:	10800044 	addi	r2,r2,1
   45184:	1727c83a 	sub	r19,r2,fp
   45188:	02000044 	movi	r8,1
   4518c:	003f9d06 	br	45004 <__alt_data_end+0xfffd3004>
   45190:	80800517 	ldw	r2,20(r16)
   45194:	81400417 	ldw	r5,16(r16)
   45198:	81c00017 	ldw	r7,0(r16)
   4519c:	10a7883a 	add	r19,r2,r2
   451a0:	9885883a 	add	r2,r19,r2
   451a4:	1026d7fa 	srli	r19,r2,31
   451a8:	396dc83a 	sub	r22,r7,r5
   451ac:	b1000044 	addi	r4,r22,1
   451b0:	9885883a 	add	r2,r19,r2
   451b4:	1027d07a 	srai	r19,r2,1
   451b8:	2485883a 	add	r2,r4,r18
   451bc:	980d883a 	mov	r6,r19
   451c0:	9880022e 	bgeu	r19,r2,451cc <__sfvwrite_r+0x3f8>
   451c4:	1027883a 	mov	r19,r2
   451c8:	100d883a 	mov	r6,r2
   451cc:	18c1000c 	andi	r3,r3,1024
   451d0:	18001c26 	beq	r3,zero,45244 <__sfvwrite_r+0x470>
   451d4:	300b883a 	mov	r5,r6
   451d8:	a809883a 	mov	r4,r21
   451dc:	00456bc0 	call	456bc <_malloc_r>
   451e0:	102f883a 	mov	r23,r2
   451e4:	10002926 	beq	r2,zero,4528c <__sfvwrite_r+0x4b8>
   451e8:	81400417 	ldw	r5,16(r16)
   451ec:	b00d883a 	mov	r6,r22
   451f0:	1009883a 	mov	r4,r2
   451f4:	0045fac0 	call	45fac <memcpy>
   451f8:	8080030b 	ldhu	r2,12(r16)
   451fc:	00fedfc4 	movi	r3,-1153
   45200:	10c4703a 	and	r2,r2,r3
   45204:	10802014 	ori	r2,r2,128
   45208:	8080030d 	sth	r2,12(r16)
   4520c:	bd89883a 	add	r4,r23,r22
   45210:	9d8fc83a 	sub	r7,r19,r22
   45214:	85c00415 	stw	r23,16(r16)
   45218:	84c00515 	stw	r19,20(r16)
   4521c:	81000015 	stw	r4,0(r16)
   45220:	9027883a 	mov	r19,r18
   45224:	81c00215 	stw	r7,8(r16)
   45228:	902f883a 	mov	r23,r18
   4522c:	003f3806 	br	44f10 <__alt_data_end+0xfffd2f10>
   45230:	800b883a 	mov	r5,r16
   45234:	a809883a 	mov	r4,r21
   45238:	00445640 	call	44564 <_fflush_r>
   4523c:	103fb926 	beq	r2,zero,45124 <__alt_data_end+0xfffd3124>
   45240:	003f6506 	br	44fd8 <__alt_data_end+0xfffd2fd8>
   45244:	a809883a 	mov	r4,r21
   45248:	00474300 	call	47430 <_realloc_r>
   4524c:	102f883a 	mov	r23,r2
   45250:	103fee1e 	bne	r2,zero,4520c <__alt_data_end+0xfffd320c>
   45254:	81400417 	ldw	r5,16(r16)
   45258:	a809883a 	mov	r4,r21
   4525c:	0044ac40 	call	44ac4 <_free_r>
   45260:	8080030b 	ldhu	r2,12(r16)
   45264:	00ffdfc4 	movi	r3,-129
   45268:	1884703a 	and	r2,r3,r2
   4526c:	00c00304 	movi	r3,12
   45270:	a8c00015 	stw	r3,0(r21)
   45274:	003f5906 	br	44fdc <__alt_data_end+0xfffd2fdc>
   45278:	94c00044 	addi	r19,r18,1
   4527c:	02000044 	movi	r8,1
   45280:	003f6006 	br	45004 <__alt_data_end+0xfffd3004>
   45284:	00bfffc4 	movi	r2,-1
   45288:	003f0006 	br	44e8c <__alt_data_end+0xfffd2e8c>
   4528c:	00800304 	movi	r2,12
   45290:	a8800015 	stw	r2,0(r21)
   45294:	8080030b 	ldhu	r2,12(r16)
   45298:	003f5006 	br	44fdc <__alt_data_end+0xfffd2fdc>

0004529c <_fwalk>:
   4529c:	defff704 	addi	sp,sp,-36
   452a0:	dd000415 	stw	r20,16(sp)
   452a4:	dfc00815 	stw	ra,32(sp)
   452a8:	ddc00715 	stw	r23,28(sp)
   452ac:	dd800615 	stw	r22,24(sp)
   452b0:	dd400515 	stw	r21,20(sp)
   452b4:	dcc00315 	stw	r19,12(sp)
   452b8:	dc800215 	stw	r18,8(sp)
   452bc:	dc400115 	stw	r17,4(sp)
   452c0:	dc000015 	stw	r16,0(sp)
   452c4:	2500b804 	addi	r20,r4,736
   452c8:	a0002326 	beq	r20,zero,45358 <_fwalk+0xbc>
   452cc:	282b883a 	mov	r21,r5
   452d0:	002f883a 	mov	r23,zero
   452d4:	05800044 	movi	r22,1
   452d8:	04ffffc4 	movi	r19,-1
   452dc:	a4400117 	ldw	r17,4(r20)
   452e0:	a4800217 	ldw	r18,8(r20)
   452e4:	8c7fffc4 	addi	r17,r17,-1
   452e8:	88000d16 	blt	r17,zero,45320 <_fwalk+0x84>
   452ec:	94000304 	addi	r16,r18,12
   452f0:	94800384 	addi	r18,r18,14
   452f4:	8080000b 	ldhu	r2,0(r16)
   452f8:	8c7fffc4 	addi	r17,r17,-1
   452fc:	813ffd04 	addi	r4,r16,-12
   45300:	b080042e 	bgeu	r22,r2,45314 <_fwalk+0x78>
   45304:	9080000f 	ldh	r2,0(r18)
   45308:	14c00226 	beq	r2,r19,45314 <_fwalk+0x78>
   4530c:	a83ee83a 	callr	r21
   45310:	b8aeb03a 	or	r23,r23,r2
   45314:	84001a04 	addi	r16,r16,104
   45318:	94801a04 	addi	r18,r18,104
   4531c:	8cfff51e 	bne	r17,r19,452f4 <__alt_data_end+0xfffd32f4>
   45320:	a5000017 	ldw	r20,0(r20)
   45324:	a03fed1e 	bne	r20,zero,452dc <__alt_data_end+0xfffd32dc>
   45328:	b805883a 	mov	r2,r23
   4532c:	dfc00817 	ldw	ra,32(sp)
   45330:	ddc00717 	ldw	r23,28(sp)
   45334:	dd800617 	ldw	r22,24(sp)
   45338:	dd400517 	ldw	r21,20(sp)
   4533c:	dd000417 	ldw	r20,16(sp)
   45340:	dcc00317 	ldw	r19,12(sp)
   45344:	dc800217 	ldw	r18,8(sp)
   45348:	dc400117 	ldw	r17,4(sp)
   4534c:	dc000017 	ldw	r16,0(sp)
   45350:	dec00904 	addi	sp,sp,36
   45354:	f800283a 	ret
   45358:	002f883a 	mov	r23,zero
   4535c:	003ff206 	br	45328 <__alt_data_end+0xfffd3328>

00045360 <_fwalk_reent>:
   45360:	defff704 	addi	sp,sp,-36
   45364:	dd000415 	stw	r20,16(sp)
   45368:	dfc00815 	stw	ra,32(sp)
   4536c:	ddc00715 	stw	r23,28(sp)
   45370:	dd800615 	stw	r22,24(sp)
   45374:	dd400515 	stw	r21,20(sp)
   45378:	dcc00315 	stw	r19,12(sp)
   4537c:	dc800215 	stw	r18,8(sp)
   45380:	dc400115 	stw	r17,4(sp)
   45384:	dc000015 	stw	r16,0(sp)
   45388:	2500b804 	addi	r20,r4,736
   4538c:	a0002326 	beq	r20,zero,4541c <_fwalk_reent+0xbc>
   45390:	282b883a 	mov	r21,r5
   45394:	2027883a 	mov	r19,r4
   45398:	002f883a 	mov	r23,zero
   4539c:	05800044 	movi	r22,1
   453a0:	04bfffc4 	movi	r18,-1
   453a4:	a4400117 	ldw	r17,4(r20)
   453a8:	a4000217 	ldw	r16,8(r20)
   453ac:	8c7fffc4 	addi	r17,r17,-1
   453b0:	88000c16 	blt	r17,zero,453e4 <_fwalk_reent+0x84>
   453b4:	84000304 	addi	r16,r16,12
   453b8:	8080000b 	ldhu	r2,0(r16)
   453bc:	8c7fffc4 	addi	r17,r17,-1
   453c0:	817ffd04 	addi	r5,r16,-12
   453c4:	b080052e 	bgeu	r22,r2,453dc <_fwalk_reent+0x7c>
   453c8:	8080008f 	ldh	r2,2(r16)
   453cc:	9809883a 	mov	r4,r19
   453d0:	14800226 	beq	r2,r18,453dc <_fwalk_reent+0x7c>
   453d4:	a83ee83a 	callr	r21
   453d8:	b8aeb03a 	or	r23,r23,r2
   453dc:	84001a04 	addi	r16,r16,104
   453e0:	8cbff51e 	bne	r17,r18,453b8 <__alt_data_end+0xfffd33b8>
   453e4:	a5000017 	ldw	r20,0(r20)
   453e8:	a03fee1e 	bne	r20,zero,453a4 <__alt_data_end+0xfffd33a4>
   453ec:	b805883a 	mov	r2,r23
   453f0:	dfc00817 	ldw	ra,32(sp)
   453f4:	ddc00717 	ldw	r23,28(sp)
   453f8:	dd800617 	ldw	r22,24(sp)
   453fc:	dd400517 	ldw	r21,20(sp)
   45400:	dd000417 	ldw	r20,16(sp)
   45404:	dcc00317 	ldw	r19,12(sp)
   45408:	dc800217 	ldw	r18,8(sp)
   4540c:	dc400117 	ldw	r17,4(sp)
   45410:	dc000017 	ldw	r16,0(sp)
   45414:	dec00904 	addi	sp,sp,36
   45418:	f800283a 	ret
   4541c:	002f883a 	mov	r23,zero
   45420:	003ff206 	br	453ec <__alt_data_end+0xfffd33ec>

00045424 <_setlocale_r>:
   45424:	30001b26 	beq	r6,zero,45494 <_setlocale_r+0x70>
   45428:	01400174 	movhi	r5,5
   4542c:	defffe04 	addi	sp,sp,-8
   45430:	297ef304 	addi	r5,r5,-1076
   45434:	3009883a 	mov	r4,r6
   45438:	dc000015 	stw	r16,0(sp)
   4543c:	dfc00115 	stw	ra,4(sp)
   45440:	3021883a 	mov	r16,r6
   45444:	0047b980 	call	47b98 <strcmp>
   45448:	1000061e 	bne	r2,zero,45464 <_setlocale_r+0x40>
   4544c:	00800174 	movhi	r2,5
   45450:	10bef204 	addi	r2,r2,-1080
   45454:	dfc00117 	ldw	ra,4(sp)
   45458:	dc000017 	ldw	r16,0(sp)
   4545c:	dec00204 	addi	sp,sp,8
   45460:	f800283a 	ret
   45464:	01400174 	movhi	r5,5
   45468:	297ef204 	addi	r5,r5,-1080
   4546c:	8009883a 	mov	r4,r16
   45470:	0047b980 	call	47b98 <strcmp>
   45474:	103ff526 	beq	r2,zero,4544c <__alt_data_end+0xfffd344c>
   45478:	01400174 	movhi	r5,5
   4547c:	297edd04 	addi	r5,r5,-1164
   45480:	8009883a 	mov	r4,r16
   45484:	0047b980 	call	47b98 <strcmp>
   45488:	103ff026 	beq	r2,zero,4544c <__alt_data_end+0xfffd344c>
   4548c:	0005883a 	mov	r2,zero
   45490:	003ff006 	br	45454 <__alt_data_end+0xfffd3454>
   45494:	00800174 	movhi	r2,5
   45498:	10bef204 	addi	r2,r2,-1080
   4549c:	f800283a 	ret

000454a0 <__locale_charset>:
   454a0:	00800174 	movhi	r2,5
   454a4:	1080a104 	addi	r2,r2,644
   454a8:	f800283a 	ret

000454ac <__locale_mb_cur_max>:
   454ac:	00800174 	movhi	r2,5
   454b0:	10863d04 	addi	r2,r2,6388
   454b4:	10800017 	ldw	r2,0(r2)
   454b8:	f800283a 	ret

000454bc <__locale_msgcharset>:
   454bc:	00800174 	movhi	r2,5
   454c0:	10809904 	addi	r2,r2,612
   454c4:	f800283a 	ret

000454c8 <__locale_cjk_lang>:
   454c8:	0005883a 	mov	r2,zero
   454cc:	f800283a 	ret

000454d0 <_localeconv_r>:
   454d0:	00800174 	movhi	r2,5
   454d4:	1080a904 	addi	r2,r2,676
   454d8:	f800283a 	ret

000454dc <setlocale>:
   454dc:	00800174 	movhi	r2,5
   454e0:	10863c04 	addi	r2,r2,6384
   454e4:	280d883a 	mov	r6,r5
   454e8:	200b883a 	mov	r5,r4
   454ec:	11000017 	ldw	r4,0(r2)
   454f0:	00454241 	jmpi	45424 <_setlocale_r>

000454f4 <localeconv>:
   454f4:	00800174 	movhi	r2,5
   454f8:	1080a904 	addi	r2,r2,676
   454fc:	f800283a 	ret

00045500 <__smakebuf_r>:
   45500:	2880030b 	ldhu	r2,12(r5)
   45504:	10c0008c 	andi	r3,r2,2
   45508:	1800411e 	bne	r3,zero,45610 <__smakebuf_r+0x110>
   4550c:	deffec04 	addi	sp,sp,-80
   45510:	dc000f15 	stw	r16,60(sp)
   45514:	2821883a 	mov	r16,r5
   45518:	2940038f 	ldh	r5,14(r5)
   4551c:	dc401015 	stw	r17,64(sp)
   45520:	dfc01315 	stw	ra,76(sp)
   45524:	dcc01215 	stw	r19,72(sp)
   45528:	dc801115 	stw	r18,68(sp)
   4552c:	2023883a 	mov	r17,r4
   45530:	28001c16 	blt	r5,zero,455a4 <__smakebuf_r+0xa4>
   45534:	d80d883a 	mov	r6,sp
   45538:	00498080 	call	49808 <_fstat_r>
   4553c:	10001816 	blt	r2,zero,455a0 <__smakebuf_r+0xa0>
   45540:	d8800117 	ldw	r2,4(sp)
   45544:	00e00014 	movui	r3,32768
   45548:	10bc000c 	andi	r2,r2,61440
   4554c:	14c80020 	cmpeqi	r19,r2,8192
   45550:	10c03726 	beq	r2,r3,45630 <__smakebuf_r+0x130>
   45554:	80c0030b 	ldhu	r3,12(r16)
   45558:	18c20014 	ori	r3,r3,2048
   4555c:	80c0030d 	sth	r3,12(r16)
   45560:	00c80004 	movi	r3,8192
   45564:	10c0521e 	bne	r2,r3,456b0 <__smakebuf_r+0x1b0>
   45568:	8140038f 	ldh	r5,14(r16)
   4556c:	8809883a 	mov	r4,r17
   45570:	00498640 	call	49864 <_isatty_r>
   45574:	10004c26 	beq	r2,zero,456a8 <__smakebuf_r+0x1a8>
   45578:	8080030b 	ldhu	r2,12(r16)
   4557c:	80c010c4 	addi	r3,r16,67
   45580:	80c00015 	stw	r3,0(r16)
   45584:	10800054 	ori	r2,r2,1
   45588:	8080030d 	sth	r2,12(r16)
   4558c:	00800044 	movi	r2,1
   45590:	80c00415 	stw	r3,16(r16)
   45594:	80800515 	stw	r2,20(r16)
   45598:	04810004 	movi	r18,1024
   4559c:	00000706 	br	455bc <__smakebuf_r+0xbc>
   455a0:	8080030b 	ldhu	r2,12(r16)
   455a4:	10c0200c 	andi	r3,r2,128
   455a8:	18001f1e 	bne	r3,zero,45628 <__smakebuf_r+0x128>
   455ac:	04810004 	movi	r18,1024
   455b0:	10820014 	ori	r2,r2,2048
   455b4:	8080030d 	sth	r2,12(r16)
   455b8:	0027883a 	mov	r19,zero
   455bc:	900b883a 	mov	r5,r18
   455c0:	8809883a 	mov	r4,r17
   455c4:	00456bc0 	call	456bc <_malloc_r>
   455c8:	10002c26 	beq	r2,zero,4567c <__smakebuf_r+0x17c>
   455cc:	80c0030b 	ldhu	r3,12(r16)
   455d0:	01000134 	movhi	r4,4
   455d4:	21117e04 	addi	r4,r4,17912
   455d8:	89000f15 	stw	r4,60(r17)
   455dc:	18c02014 	ori	r3,r3,128
   455e0:	80c0030d 	sth	r3,12(r16)
   455e4:	80800015 	stw	r2,0(r16)
   455e8:	80800415 	stw	r2,16(r16)
   455ec:	84800515 	stw	r18,20(r16)
   455f0:	98001a1e 	bne	r19,zero,4565c <__smakebuf_r+0x15c>
   455f4:	dfc01317 	ldw	ra,76(sp)
   455f8:	dcc01217 	ldw	r19,72(sp)
   455fc:	dc801117 	ldw	r18,68(sp)
   45600:	dc401017 	ldw	r17,64(sp)
   45604:	dc000f17 	ldw	r16,60(sp)
   45608:	dec01404 	addi	sp,sp,80
   4560c:	f800283a 	ret
   45610:	288010c4 	addi	r2,r5,67
   45614:	28800015 	stw	r2,0(r5)
   45618:	28800415 	stw	r2,16(r5)
   4561c:	00800044 	movi	r2,1
   45620:	28800515 	stw	r2,20(r5)
   45624:	f800283a 	ret
   45628:	04801004 	movi	r18,64
   4562c:	003fe006 	br	455b0 <__alt_data_end+0xfffd35b0>
   45630:	81000a17 	ldw	r4,40(r16)
   45634:	00c00134 	movhi	r3,4
   45638:	18decd04 	addi	r3,r3,31540
   4563c:	20ffc51e 	bne	r4,r3,45554 <__alt_data_end+0xfffd3554>
   45640:	8080030b 	ldhu	r2,12(r16)
   45644:	04810004 	movi	r18,1024
   45648:	84801315 	stw	r18,76(r16)
   4564c:	1484b03a 	or	r2,r2,r18
   45650:	8080030d 	sth	r2,12(r16)
   45654:	0027883a 	mov	r19,zero
   45658:	003fd806 	br	455bc <__alt_data_end+0xfffd35bc>
   4565c:	8140038f 	ldh	r5,14(r16)
   45660:	8809883a 	mov	r4,r17
   45664:	00498640 	call	49864 <_isatty_r>
   45668:	103fe226 	beq	r2,zero,455f4 <__alt_data_end+0xfffd35f4>
   4566c:	8080030b 	ldhu	r2,12(r16)
   45670:	10800054 	ori	r2,r2,1
   45674:	8080030d 	sth	r2,12(r16)
   45678:	003fde06 	br	455f4 <__alt_data_end+0xfffd35f4>
   4567c:	8080030b 	ldhu	r2,12(r16)
   45680:	10c0800c 	andi	r3,r2,512
   45684:	183fdb1e 	bne	r3,zero,455f4 <__alt_data_end+0xfffd35f4>
   45688:	10800094 	ori	r2,r2,2
   4568c:	80c010c4 	addi	r3,r16,67
   45690:	8080030d 	sth	r2,12(r16)
   45694:	00800044 	movi	r2,1
   45698:	80c00015 	stw	r3,0(r16)
   4569c:	80c00415 	stw	r3,16(r16)
   456a0:	80800515 	stw	r2,20(r16)
   456a4:	003fd306 	br	455f4 <__alt_data_end+0xfffd35f4>
   456a8:	04810004 	movi	r18,1024
   456ac:	003fc306 	br	455bc <__alt_data_end+0xfffd35bc>
   456b0:	0027883a 	mov	r19,zero
   456b4:	04810004 	movi	r18,1024
   456b8:	003fc006 	br	455bc <__alt_data_end+0xfffd35bc>

000456bc <_malloc_r>:
   456bc:	defff504 	addi	sp,sp,-44
   456c0:	dc800315 	stw	r18,12(sp)
   456c4:	dfc00a15 	stw	ra,40(sp)
   456c8:	df000915 	stw	fp,36(sp)
   456cc:	ddc00815 	stw	r23,32(sp)
   456d0:	dd800715 	stw	r22,28(sp)
   456d4:	dd400615 	stw	r21,24(sp)
   456d8:	dd000515 	stw	r20,20(sp)
   456dc:	dcc00415 	stw	r19,16(sp)
   456e0:	dc400215 	stw	r17,8(sp)
   456e4:	dc000115 	stw	r16,4(sp)
   456e8:	288002c4 	addi	r2,r5,11
   456ec:	00c00584 	movi	r3,22
   456f0:	2025883a 	mov	r18,r4
   456f4:	18807f2e 	bgeu	r3,r2,458f4 <_malloc_r+0x238>
   456f8:	047ffe04 	movi	r17,-8
   456fc:	1462703a 	and	r17,r2,r17
   45700:	8800a316 	blt	r17,zero,45990 <_malloc_r+0x2d4>
   45704:	8940a236 	bltu	r17,r5,45990 <_malloc_r+0x2d4>
   45708:	004db340 	call	4db34 <__malloc_lock>
   4570c:	00807dc4 	movi	r2,503
   45710:	1441e92e 	bgeu	r2,r17,45eb8 <_malloc_r+0x7fc>
   45714:	8804d27a 	srli	r2,r17,9
   45718:	1000a126 	beq	r2,zero,459a0 <_malloc_r+0x2e4>
   4571c:	00c00104 	movi	r3,4
   45720:	18811e36 	bltu	r3,r2,45b9c <_malloc_r+0x4e0>
   45724:	8804d1ba 	srli	r2,r17,6
   45728:	12000e44 	addi	r8,r2,57
   4572c:	11c00e04 	addi	r7,r2,56
   45730:	4209883a 	add	r4,r8,r8
   45734:	04c00174 	movhi	r19,5
   45738:	2109883a 	add	r4,r4,r4
   4573c:	9cc0b704 	addi	r19,r19,732
   45740:	2109883a 	add	r4,r4,r4
   45744:	9909883a 	add	r4,r19,r4
   45748:	24000117 	ldw	r16,4(r4)
   4574c:	213ffe04 	addi	r4,r4,-8
   45750:	24009726 	beq	r4,r16,459b0 <_malloc_r+0x2f4>
   45754:	80800117 	ldw	r2,4(r16)
   45758:	01bfff04 	movi	r6,-4
   4575c:	014003c4 	movi	r5,15
   45760:	1184703a 	and	r2,r2,r6
   45764:	1447c83a 	sub	r3,r2,r17
   45768:	28c00716 	blt	r5,r3,45788 <_malloc_r+0xcc>
   4576c:	1800920e 	bge	r3,zero,459b8 <_malloc_r+0x2fc>
   45770:	84000317 	ldw	r16,12(r16)
   45774:	24008e26 	beq	r4,r16,459b0 <_malloc_r+0x2f4>
   45778:	80800117 	ldw	r2,4(r16)
   4577c:	1184703a 	and	r2,r2,r6
   45780:	1447c83a 	sub	r3,r2,r17
   45784:	28fff90e 	bge	r5,r3,4576c <__alt_data_end+0xfffd376c>
   45788:	3809883a 	mov	r4,r7
   4578c:	01800174 	movhi	r6,5
   45790:	9c000417 	ldw	r16,16(r19)
   45794:	3180b704 	addi	r6,r6,732
   45798:	32000204 	addi	r8,r6,8
   4579c:	82013426 	beq	r16,r8,45c70 <_malloc_r+0x5b4>
   457a0:	80c00117 	ldw	r3,4(r16)
   457a4:	00bfff04 	movi	r2,-4
   457a8:	188e703a 	and	r7,r3,r2
   457ac:	3c45c83a 	sub	r2,r7,r17
   457b0:	00c003c4 	movi	r3,15
   457b4:	18811f16 	blt	r3,r2,45c34 <_malloc_r+0x578>
   457b8:	32000515 	stw	r8,20(r6)
   457bc:	32000415 	stw	r8,16(r6)
   457c0:	10007f0e 	bge	r2,zero,459c0 <_malloc_r+0x304>
   457c4:	00807fc4 	movi	r2,511
   457c8:	11c0fd36 	bltu	r2,r7,45bc0 <_malloc_r+0x504>
   457cc:	3806d0fa 	srli	r3,r7,3
   457d0:	01c00044 	movi	r7,1
   457d4:	30800117 	ldw	r2,4(r6)
   457d8:	19400044 	addi	r5,r3,1
   457dc:	294b883a 	add	r5,r5,r5
   457e0:	1807d0ba 	srai	r3,r3,2
   457e4:	294b883a 	add	r5,r5,r5
   457e8:	294b883a 	add	r5,r5,r5
   457ec:	298b883a 	add	r5,r5,r6
   457f0:	38c6983a 	sll	r3,r7,r3
   457f4:	29c00017 	ldw	r7,0(r5)
   457f8:	2a7ffe04 	addi	r9,r5,-8
   457fc:	1886b03a 	or	r3,r3,r2
   45800:	82400315 	stw	r9,12(r16)
   45804:	81c00215 	stw	r7,8(r16)
   45808:	30c00115 	stw	r3,4(r6)
   4580c:	2c000015 	stw	r16,0(r5)
   45810:	3c000315 	stw	r16,12(r7)
   45814:	2005d0ba 	srai	r2,r4,2
   45818:	01400044 	movi	r5,1
   4581c:	288a983a 	sll	r5,r5,r2
   45820:	19406f36 	bltu	r3,r5,459e0 <_malloc_r+0x324>
   45824:	28c4703a 	and	r2,r5,r3
   45828:	10000a1e 	bne	r2,zero,45854 <_malloc_r+0x198>
   4582c:	00bfff04 	movi	r2,-4
   45830:	294b883a 	add	r5,r5,r5
   45834:	2088703a 	and	r4,r4,r2
   45838:	28c4703a 	and	r2,r5,r3
   4583c:	21000104 	addi	r4,r4,4
   45840:	1000041e 	bne	r2,zero,45854 <_malloc_r+0x198>
   45844:	294b883a 	add	r5,r5,r5
   45848:	28c4703a 	and	r2,r5,r3
   4584c:	21000104 	addi	r4,r4,4
   45850:	103ffc26 	beq	r2,zero,45844 <__alt_data_end+0xfffd3844>
   45854:	02bfff04 	movi	r10,-4
   45858:	024003c4 	movi	r9,15
   4585c:	21800044 	addi	r6,r4,1
   45860:	318d883a 	add	r6,r6,r6
   45864:	318d883a 	add	r6,r6,r6
   45868:	318d883a 	add	r6,r6,r6
   4586c:	998d883a 	add	r6,r19,r6
   45870:	333ffe04 	addi	r12,r6,-8
   45874:	2017883a 	mov	r11,r4
   45878:	31800104 	addi	r6,r6,4
   4587c:	34000017 	ldw	r16,0(r6)
   45880:	31fffd04 	addi	r7,r6,-12
   45884:	81c0041e 	bne	r16,r7,45898 <_malloc_r+0x1dc>
   45888:	0000fb06 	br	45c78 <_malloc_r+0x5bc>
   4588c:	1801030e 	bge	r3,zero,45c9c <_malloc_r+0x5e0>
   45890:	84000317 	ldw	r16,12(r16)
   45894:	81c0f826 	beq	r16,r7,45c78 <_malloc_r+0x5bc>
   45898:	80800117 	ldw	r2,4(r16)
   4589c:	1284703a 	and	r2,r2,r10
   458a0:	1447c83a 	sub	r3,r2,r17
   458a4:	48fff90e 	bge	r9,r3,4588c <__alt_data_end+0xfffd388c>
   458a8:	80800317 	ldw	r2,12(r16)
   458ac:	81000217 	ldw	r4,8(r16)
   458b0:	89400054 	ori	r5,r17,1
   458b4:	81400115 	stw	r5,4(r16)
   458b8:	20800315 	stw	r2,12(r4)
   458bc:	11000215 	stw	r4,8(r2)
   458c0:	8463883a 	add	r17,r16,r17
   458c4:	9c400515 	stw	r17,20(r19)
   458c8:	9c400415 	stw	r17,16(r19)
   458cc:	18800054 	ori	r2,r3,1
   458d0:	88800115 	stw	r2,4(r17)
   458d4:	8a000315 	stw	r8,12(r17)
   458d8:	8a000215 	stw	r8,8(r17)
   458dc:	88e3883a 	add	r17,r17,r3
   458e0:	88c00015 	stw	r3,0(r17)
   458e4:	9009883a 	mov	r4,r18
   458e8:	004db580 	call	4db58 <__malloc_unlock>
   458ec:	80800204 	addi	r2,r16,8
   458f0:	00001b06 	br	45960 <_malloc_r+0x2a4>
   458f4:	04400404 	movi	r17,16
   458f8:	89402536 	bltu	r17,r5,45990 <_malloc_r+0x2d4>
   458fc:	004db340 	call	4db34 <__malloc_lock>
   45900:	00800184 	movi	r2,6
   45904:	01000084 	movi	r4,2
   45908:	04c00174 	movhi	r19,5
   4590c:	1085883a 	add	r2,r2,r2
   45910:	9cc0b704 	addi	r19,r19,732
   45914:	1085883a 	add	r2,r2,r2
   45918:	9885883a 	add	r2,r19,r2
   4591c:	14000117 	ldw	r16,4(r2)
   45920:	10fffe04 	addi	r3,r2,-8
   45924:	80c0d926 	beq	r16,r3,45c8c <_malloc_r+0x5d0>
   45928:	80c00117 	ldw	r3,4(r16)
   4592c:	81000317 	ldw	r4,12(r16)
   45930:	00bfff04 	movi	r2,-4
   45934:	1884703a 	and	r2,r3,r2
   45938:	81400217 	ldw	r5,8(r16)
   4593c:	8085883a 	add	r2,r16,r2
   45940:	10c00117 	ldw	r3,4(r2)
   45944:	29000315 	stw	r4,12(r5)
   45948:	21400215 	stw	r5,8(r4)
   4594c:	18c00054 	ori	r3,r3,1
   45950:	10c00115 	stw	r3,4(r2)
   45954:	9009883a 	mov	r4,r18
   45958:	004db580 	call	4db58 <__malloc_unlock>
   4595c:	80800204 	addi	r2,r16,8
   45960:	dfc00a17 	ldw	ra,40(sp)
   45964:	df000917 	ldw	fp,36(sp)
   45968:	ddc00817 	ldw	r23,32(sp)
   4596c:	dd800717 	ldw	r22,28(sp)
   45970:	dd400617 	ldw	r21,24(sp)
   45974:	dd000517 	ldw	r20,20(sp)
   45978:	dcc00417 	ldw	r19,16(sp)
   4597c:	dc800317 	ldw	r18,12(sp)
   45980:	dc400217 	ldw	r17,8(sp)
   45984:	dc000117 	ldw	r16,4(sp)
   45988:	dec00b04 	addi	sp,sp,44
   4598c:	f800283a 	ret
   45990:	00800304 	movi	r2,12
   45994:	90800015 	stw	r2,0(r18)
   45998:	0005883a 	mov	r2,zero
   4599c:	003ff006 	br	45960 <__alt_data_end+0xfffd3960>
   459a0:	01002004 	movi	r4,128
   459a4:	02001004 	movi	r8,64
   459a8:	01c00fc4 	movi	r7,63
   459ac:	003f6106 	br	45734 <__alt_data_end+0xfffd3734>
   459b0:	4009883a 	mov	r4,r8
   459b4:	003f7506 	br	4578c <__alt_data_end+0xfffd378c>
   459b8:	81000317 	ldw	r4,12(r16)
   459bc:	003fde06 	br	45938 <__alt_data_end+0xfffd3938>
   459c0:	81c5883a 	add	r2,r16,r7
   459c4:	11400117 	ldw	r5,4(r2)
   459c8:	9009883a 	mov	r4,r18
   459cc:	29400054 	ori	r5,r5,1
   459d0:	11400115 	stw	r5,4(r2)
   459d4:	004db580 	call	4db58 <__malloc_unlock>
   459d8:	80800204 	addi	r2,r16,8
   459dc:	003fe006 	br	45960 <__alt_data_end+0xfffd3960>
   459e0:	9c000217 	ldw	r16,8(r19)
   459e4:	00bfff04 	movi	r2,-4
   459e8:	85800117 	ldw	r22,4(r16)
   459ec:	b0ac703a 	and	r22,r22,r2
   459f0:	b4400336 	bltu	r22,r17,45a00 <_malloc_r+0x344>
   459f4:	b445c83a 	sub	r2,r22,r17
   459f8:	00c003c4 	movi	r3,15
   459fc:	18805d16 	blt	r3,r2,45b74 <_malloc_r+0x4b8>
   45a00:	05c00174 	movhi	r23,5
   45a04:	00800174 	movhi	r2,5
   45a08:	108d0d04 	addi	r2,r2,13364
   45a0c:	bdc63e04 	addi	r23,r23,6392
   45a10:	15400017 	ldw	r21,0(r2)
   45a14:	b8c00017 	ldw	r3,0(r23)
   45a18:	00bfffc4 	movi	r2,-1
   45a1c:	858d883a 	add	r6,r16,r22
   45a20:	8d6b883a 	add	r21,r17,r21
   45a24:	1880ea26 	beq	r3,r2,45dd0 <_malloc_r+0x714>
   45a28:	ad4403c4 	addi	r21,r21,4111
   45a2c:	00bc0004 	movi	r2,-4096
   45a30:	a8aa703a 	and	r21,r21,r2
   45a34:	a80b883a 	mov	r5,r21
   45a38:	9009883a 	mov	r4,r18
   45a3c:	d9800015 	stw	r6,0(sp)
   45a40:	0047a080 	call	47a08 <_sbrk_r>
   45a44:	1029883a 	mov	r20,r2
   45a48:	00bfffc4 	movi	r2,-1
   45a4c:	d9800017 	ldw	r6,0(sp)
   45a50:	a080e826 	beq	r20,r2,45df4 <_malloc_r+0x738>
   45a54:	a180a636 	bltu	r20,r6,45cf0 <_malloc_r+0x634>
   45a58:	07000174 	movhi	fp,5
   45a5c:	e70d1604 	addi	fp,fp,13400
   45a60:	e0800017 	ldw	r2,0(fp)
   45a64:	a887883a 	add	r3,r21,r2
   45a68:	e0c00015 	stw	r3,0(fp)
   45a6c:	3500e626 	beq	r6,r20,45e08 <_malloc_r+0x74c>
   45a70:	b9000017 	ldw	r4,0(r23)
   45a74:	00bfffc4 	movi	r2,-1
   45a78:	2080ee26 	beq	r4,r2,45e34 <_malloc_r+0x778>
   45a7c:	a185c83a 	sub	r2,r20,r6
   45a80:	10c5883a 	add	r2,r2,r3
   45a84:	e0800015 	stw	r2,0(fp)
   45a88:	a0c001cc 	andi	r3,r20,7
   45a8c:	1800bc26 	beq	r3,zero,45d80 <_malloc_r+0x6c4>
   45a90:	a0e9c83a 	sub	r20,r20,r3
   45a94:	00840204 	movi	r2,4104
   45a98:	a5000204 	addi	r20,r20,8
   45a9c:	10c7c83a 	sub	r3,r2,r3
   45aa0:	a545883a 	add	r2,r20,r21
   45aa4:	1083ffcc 	andi	r2,r2,4095
   45aa8:	18abc83a 	sub	r21,r3,r2
   45aac:	a80b883a 	mov	r5,r21
   45ab0:	9009883a 	mov	r4,r18
   45ab4:	0047a080 	call	47a08 <_sbrk_r>
   45ab8:	00ffffc4 	movi	r3,-1
   45abc:	10c0e126 	beq	r2,r3,45e44 <_malloc_r+0x788>
   45ac0:	1505c83a 	sub	r2,r2,r20
   45ac4:	1545883a 	add	r2,r2,r21
   45ac8:	10800054 	ori	r2,r2,1
   45acc:	e0c00017 	ldw	r3,0(fp)
   45ad0:	9d000215 	stw	r20,8(r19)
   45ad4:	a0800115 	stw	r2,4(r20)
   45ad8:	a8c7883a 	add	r3,r21,r3
   45adc:	e0c00015 	stw	r3,0(fp)
   45ae0:	84c00e26 	beq	r16,r19,45b1c <_malloc_r+0x460>
   45ae4:	018003c4 	movi	r6,15
   45ae8:	3580a72e 	bgeu	r6,r22,45d88 <_malloc_r+0x6cc>
   45aec:	81400117 	ldw	r5,4(r16)
   45af0:	013ffe04 	movi	r4,-8
   45af4:	b0bffd04 	addi	r2,r22,-12
   45af8:	1104703a 	and	r2,r2,r4
   45afc:	2900004c 	andi	r4,r5,1
   45b00:	2088b03a 	or	r4,r4,r2
   45b04:	81000115 	stw	r4,4(r16)
   45b08:	01400144 	movi	r5,5
   45b0c:	8089883a 	add	r4,r16,r2
   45b10:	21400115 	stw	r5,4(r4)
   45b14:	21400215 	stw	r5,8(r4)
   45b18:	3080cd36 	bltu	r6,r2,45e50 <_malloc_r+0x794>
   45b1c:	00800174 	movhi	r2,5
   45b20:	108d0c04 	addi	r2,r2,13360
   45b24:	11000017 	ldw	r4,0(r2)
   45b28:	20c0012e 	bgeu	r4,r3,45b30 <_malloc_r+0x474>
   45b2c:	10c00015 	stw	r3,0(r2)
   45b30:	00800174 	movhi	r2,5
   45b34:	108d0b04 	addi	r2,r2,13356
   45b38:	11000017 	ldw	r4,0(r2)
   45b3c:	9c000217 	ldw	r16,8(r19)
   45b40:	20c0012e 	bgeu	r4,r3,45b48 <_malloc_r+0x48c>
   45b44:	10c00015 	stw	r3,0(r2)
   45b48:	80c00117 	ldw	r3,4(r16)
   45b4c:	00bfff04 	movi	r2,-4
   45b50:	1886703a 	and	r3,r3,r2
   45b54:	1c45c83a 	sub	r2,r3,r17
   45b58:	1c400236 	bltu	r3,r17,45b64 <_malloc_r+0x4a8>
   45b5c:	00c003c4 	movi	r3,15
   45b60:	18800416 	blt	r3,r2,45b74 <_malloc_r+0x4b8>
   45b64:	9009883a 	mov	r4,r18
   45b68:	004db580 	call	4db58 <__malloc_unlock>
   45b6c:	0005883a 	mov	r2,zero
   45b70:	003f7b06 	br	45960 <__alt_data_end+0xfffd3960>
   45b74:	88c00054 	ori	r3,r17,1
   45b78:	80c00115 	stw	r3,4(r16)
   45b7c:	8463883a 	add	r17,r16,r17
   45b80:	10800054 	ori	r2,r2,1
   45b84:	9c400215 	stw	r17,8(r19)
   45b88:	88800115 	stw	r2,4(r17)
   45b8c:	9009883a 	mov	r4,r18
   45b90:	004db580 	call	4db58 <__malloc_unlock>
   45b94:	80800204 	addi	r2,r16,8
   45b98:	003f7106 	br	45960 <__alt_data_end+0xfffd3960>
   45b9c:	00c00504 	movi	r3,20
   45ba0:	18804a2e 	bgeu	r3,r2,45ccc <_malloc_r+0x610>
   45ba4:	00c01504 	movi	r3,84
   45ba8:	18806e36 	bltu	r3,r2,45d64 <_malloc_r+0x6a8>
   45bac:	8804d33a 	srli	r2,r17,12
   45bb0:	12001bc4 	addi	r8,r2,111
   45bb4:	11c01b84 	addi	r7,r2,110
   45bb8:	4209883a 	add	r4,r8,r8
   45bbc:	003edd06 	br	45734 <__alt_data_end+0xfffd3734>
   45bc0:	3804d27a 	srli	r2,r7,9
   45bc4:	00c00104 	movi	r3,4
   45bc8:	1880442e 	bgeu	r3,r2,45cdc <_malloc_r+0x620>
   45bcc:	00c00504 	movi	r3,20
   45bd0:	18808136 	bltu	r3,r2,45dd8 <_malloc_r+0x71c>
   45bd4:	11401704 	addi	r5,r2,92
   45bd8:	10c016c4 	addi	r3,r2,91
   45bdc:	294b883a 	add	r5,r5,r5
   45be0:	294b883a 	add	r5,r5,r5
   45be4:	294b883a 	add	r5,r5,r5
   45be8:	994b883a 	add	r5,r19,r5
   45bec:	28800017 	ldw	r2,0(r5)
   45bf0:	01800174 	movhi	r6,5
   45bf4:	297ffe04 	addi	r5,r5,-8
   45bf8:	3180b704 	addi	r6,r6,732
   45bfc:	28806526 	beq	r5,r2,45d94 <_malloc_r+0x6d8>
   45c00:	01bfff04 	movi	r6,-4
   45c04:	10c00117 	ldw	r3,4(r2)
   45c08:	1986703a 	and	r3,r3,r6
   45c0c:	38c0022e 	bgeu	r7,r3,45c18 <_malloc_r+0x55c>
   45c10:	10800217 	ldw	r2,8(r2)
   45c14:	28bffb1e 	bne	r5,r2,45c04 <__alt_data_end+0xfffd3c04>
   45c18:	11400317 	ldw	r5,12(r2)
   45c1c:	98c00117 	ldw	r3,4(r19)
   45c20:	81400315 	stw	r5,12(r16)
   45c24:	80800215 	stw	r2,8(r16)
   45c28:	2c000215 	stw	r16,8(r5)
   45c2c:	14000315 	stw	r16,12(r2)
   45c30:	003ef806 	br	45814 <__alt_data_end+0xfffd3814>
   45c34:	88c00054 	ori	r3,r17,1
   45c38:	80c00115 	stw	r3,4(r16)
   45c3c:	8463883a 	add	r17,r16,r17
   45c40:	34400515 	stw	r17,20(r6)
   45c44:	34400415 	stw	r17,16(r6)
   45c48:	10c00054 	ori	r3,r2,1
   45c4c:	8a000315 	stw	r8,12(r17)
   45c50:	8a000215 	stw	r8,8(r17)
   45c54:	88c00115 	stw	r3,4(r17)
   45c58:	88a3883a 	add	r17,r17,r2
   45c5c:	88800015 	stw	r2,0(r17)
   45c60:	9009883a 	mov	r4,r18
   45c64:	004db580 	call	4db58 <__malloc_unlock>
   45c68:	80800204 	addi	r2,r16,8
   45c6c:	003f3c06 	br	45960 <__alt_data_end+0xfffd3960>
   45c70:	30c00117 	ldw	r3,4(r6)
   45c74:	003ee706 	br	45814 <__alt_data_end+0xfffd3814>
   45c78:	5ac00044 	addi	r11,r11,1
   45c7c:	588000cc 	andi	r2,r11,3
   45c80:	31800204 	addi	r6,r6,8
   45c84:	103efd1e 	bne	r2,zero,4587c <__alt_data_end+0xfffd387c>
   45c88:	00002406 	br	45d1c <_malloc_r+0x660>
   45c8c:	14000317 	ldw	r16,12(r2)
   45c90:	143f251e 	bne	r2,r16,45928 <__alt_data_end+0xfffd3928>
   45c94:	21000084 	addi	r4,r4,2
   45c98:	003ebc06 	br	4578c <__alt_data_end+0xfffd378c>
   45c9c:	8085883a 	add	r2,r16,r2
   45ca0:	10c00117 	ldw	r3,4(r2)
   45ca4:	81000317 	ldw	r4,12(r16)
   45ca8:	81400217 	ldw	r5,8(r16)
   45cac:	18c00054 	ori	r3,r3,1
   45cb0:	10c00115 	stw	r3,4(r2)
   45cb4:	29000315 	stw	r4,12(r5)
   45cb8:	21400215 	stw	r5,8(r4)
   45cbc:	9009883a 	mov	r4,r18
   45cc0:	004db580 	call	4db58 <__malloc_unlock>
   45cc4:	80800204 	addi	r2,r16,8
   45cc8:	003f2506 	br	45960 <__alt_data_end+0xfffd3960>
   45ccc:	12001704 	addi	r8,r2,92
   45cd0:	11c016c4 	addi	r7,r2,91
   45cd4:	4209883a 	add	r4,r8,r8
   45cd8:	003e9606 	br	45734 <__alt_data_end+0xfffd3734>
   45cdc:	3804d1ba 	srli	r2,r7,6
   45ce0:	11400e44 	addi	r5,r2,57
   45ce4:	10c00e04 	addi	r3,r2,56
   45ce8:	294b883a 	add	r5,r5,r5
   45cec:	003fbc06 	br	45be0 <__alt_data_end+0xfffd3be0>
   45cf0:	84ff5926 	beq	r16,r19,45a58 <__alt_data_end+0xfffd3a58>
   45cf4:	00800174 	movhi	r2,5
   45cf8:	1080b704 	addi	r2,r2,732
   45cfc:	14000217 	ldw	r16,8(r2)
   45d00:	00bfff04 	movi	r2,-4
   45d04:	80c00117 	ldw	r3,4(r16)
   45d08:	1886703a 	and	r3,r3,r2
   45d0c:	003f9106 	br	45b54 <__alt_data_end+0xfffd3b54>
   45d10:	60800217 	ldw	r2,8(r12)
   45d14:	213fffc4 	addi	r4,r4,-1
   45d18:	1300651e 	bne	r2,r12,45eb0 <_malloc_r+0x7f4>
   45d1c:	208000cc 	andi	r2,r4,3
   45d20:	633ffe04 	addi	r12,r12,-8
   45d24:	103ffa1e 	bne	r2,zero,45d10 <__alt_data_end+0xfffd3d10>
   45d28:	98800117 	ldw	r2,4(r19)
   45d2c:	0146303a 	nor	r3,zero,r5
   45d30:	1884703a 	and	r2,r3,r2
   45d34:	98800115 	stw	r2,4(r19)
   45d38:	294b883a 	add	r5,r5,r5
   45d3c:	117f2836 	bltu	r2,r5,459e0 <__alt_data_end+0xfffd39e0>
   45d40:	283f2726 	beq	r5,zero,459e0 <__alt_data_end+0xfffd39e0>
   45d44:	2886703a 	and	r3,r5,r2
   45d48:	5809883a 	mov	r4,r11
   45d4c:	183ec31e 	bne	r3,zero,4585c <__alt_data_end+0xfffd385c>
   45d50:	294b883a 	add	r5,r5,r5
   45d54:	2886703a 	and	r3,r5,r2
   45d58:	21000104 	addi	r4,r4,4
   45d5c:	183ffc26 	beq	r3,zero,45d50 <__alt_data_end+0xfffd3d50>
   45d60:	003ebe06 	br	4585c <__alt_data_end+0xfffd385c>
   45d64:	00c05504 	movi	r3,340
   45d68:	18801236 	bltu	r3,r2,45db4 <_malloc_r+0x6f8>
   45d6c:	8804d3fa 	srli	r2,r17,15
   45d70:	12001e04 	addi	r8,r2,120
   45d74:	11c01dc4 	addi	r7,r2,119
   45d78:	4209883a 	add	r4,r8,r8
   45d7c:	003e6d06 	br	45734 <__alt_data_end+0xfffd3734>
   45d80:	00c40004 	movi	r3,4096
   45d84:	003f4606 	br	45aa0 <__alt_data_end+0xfffd3aa0>
   45d88:	00800044 	movi	r2,1
   45d8c:	a0800115 	stw	r2,4(r20)
   45d90:	003f7406 	br	45b64 <__alt_data_end+0xfffd3b64>
   45d94:	1805d0ba 	srai	r2,r3,2
   45d98:	01c00044 	movi	r7,1
   45d9c:	30c00117 	ldw	r3,4(r6)
   45da0:	388e983a 	sll	r7,r7,r2
   45da4:	2805883a 	mov	r2,r5
   45da8:	38c6b03a 	or	r3,r7,r3
   45dac:	30c00115 	stw	r3,4(r6)
   45db0:	003f9b06 	br	45c20 <__alt_data_end+0xfffd3c20>
   45db4:	00c15504 	movi	r3,1364
   45db8:	18801a36 	bltu	r3,r2,45e24 <_malloc_r+0x768>
   45dbc:	8804d4ba 	srli	r2,r17,18
   45dc0:	12001f44 	addi	r8,r2,125
   45dc4:	11c01f04 	addi	r7,r2,124
   45dc8:	4209883a 	add	r4,r8,r8
   45dcc:	003e5906 	br	45734 <__alt_data_end+0xfffd3734>
   45dd0:	ad400404 	addi	r21,r21,16
   45dd4:	003f1706 	br	45a34 <__alt_data_end+0xfffd3a34>
   45dd8:	00c01504 	movi	r3,84
   45ddc:	18802336 	bltu	r3,r2,45e6c <_malloc_r+0x7b0>
   45de0:	3804d33a 	srli	r2,r7,12
   45de4:	11401bc4 	addi	r5,r2,111
   45de8:	10c01b84 	addi	r3,r2,110
   45dec:	294b883a 	add	r5,r5,r5
   45df0:	003f7b06 	br	45be0 <__alt_data_end+0xfffd3be0>
   45df4:	9c000217 	ldw	r16,8(r19)
   45df8:	00bfff04 	movi	r2,-4
   45dfc:	80c00117 	ldw	r3,4(r16)
   45e00:	1886703a 	and	r3,r3,r2
   45e04:	003f5306 	br	45b54 <__alt_data_end+0xfffd3b54>
   45e08:	3083ffcc 	andi	r2,r6,4095
   45e0c:	103f181e 	bne	r2,zero,45a70 <__alt_data_end+0xfffd3a70>
   45e10:	99000217 	ldw	r4,8(r19)
   45e14:	b545883a 	add	r2,r22,r21
   45e18:	10800054 	ori	r2,r2,1
   45e1c:	20800115 	stw	r2,4(r4)
   45e20:	003f3e06 	br	45b1c <__alt_data_end+0xfffd3b1c>
   45e24:	01003f84 	movi	r4,254
   45e28:	02001fc4 	movi	r8,127
   45e2c:	01c01f84 	movi	r7,126
   45e30:	003e4006 	br	45734 <__alt_data_end+0xfffd3734>
   45e34:	00800174 	movhi	r2,5
   45e38:	10863e04 	addi	r2,r2,6392
   45e3c:	15000015 	stw	r20,0(r2)
   45e40:	003f1106 	br	45a88 <__alt_data_end+0xfffd3a88>
   45e44:	00800044 	movi	r2,1
   45e48:	002b883a 	mov	r21,zero
   45e4c:	003f1f06 	br	45acc <__alt_data_end+0xfffd3acc>
   45e50:	81400204 	addi	r5,r16,8
   45e54:	9009883a 	mov	r4,r18
   45e58:	0044ac40 	call	44ac4 <_free_r>
   45e5c:	00800174 	movhi	r2,5
   45e60:	108d1604 	addi	r2,r2,13400
   45e64:	10c00017 	ldw	r3,0(r2)
   45e68:	003f2c06 	br	45b1c <__alt_data_end+0xfffd3b1c>
   45e6c:	00c05504 	movi	r3,340
   45e70:	18800536 	bltu	r3,r2,45e88 <_malloc_r+0x7cc>
   45e74:	3804d3fa 	srli	r2,r7,15
   45e78:	11401e04 	addi	r5,r2,120
   45e7c:	10c01dc4 	addi	r3,r2,119
   45e80:	294b883a 	add	r5,r5,r5
   45e84:	003f5606 	br	45be0 <__alt_data_end+0xfffd3be0>
   45e88:	00c15504 	movi	r3,1364
   45e8c:	18800536 	bltu	r3,r2,45ea4 <_malloc_r+0x7e8>
   45e90:	3804d4ba 	srli	r2,r7,18
   45e94:	11401f44 	addi	r5,r2,125
   45e98:	10c01f04 	addi	r3,r2,124
   45e9c:	294b883a 	add	r5,r5,r5
   45ea0:	003f4f06 	br	45be0 <__alt_data_end+0xfffd3be0>
   45ea4:	01403f84 	movi	r5,254
   45ea8:	00c01f84 	movi	r3,126
   45eac:	003f4c06 	br	45be0 <__alt_data_end+0xfffd3be0>
   45eb0:	98800117 	ldw	r2,4(r19)
   45eb4:	003fa006 	br	45d38 <__alt_data_end+0xfffd3d38>
   45eb8:	8808d0fa 	srli	r4,r17,3
   45ebc:	20800044 	addi	r2,r4,1
   45ec0:	1085883a 	add	r2,r2,r2
   45ec4:	003e9006 	br	45908 <__alt_data_end+0xfffd3908>

00045ec8 <memchr>:
   45ec8:	208000cc 	andi	r2,r4,3
   45ecc:	280f883a 	mov	r7,r5
   45ed0:	10003426 	beq	r2,zero,45fa4 <memchr+0xdc>
   45ed4:	30bfffc4 	addi	r2,r6,-1
   45ed8:	30001a26 	beq	r6,zero,45f44 <memchr+0x7c>
   45edc:	20c00003 	ldbu	r3,0(r4)
   45ee0:	29803fcc 	andi	r6,r5,255
   45ee4:	30c0051e 	bne	r6,r3,45efc <memchr+0x34>
   45ee8:	00001806 	br	45f4c <memchr+0x84>
   45eec:	10001526 	beq	r2,zero,45f44 <memchr+0x7c>
   45ef0:	20c00003 	ldbu	r3,0(r4)
   45ef4:	10bfffc4 	addi	r2,r2,-1
   45ef8:	30c01426 	beq	r6,r3,45f4c <memchr+0x84>
   45efc:	21000044 	addi	r4,r4,1
   45f00:	20c000cc 	andi	r3,r4,3
   45f04:	183ff91e 	bne	r3,zero,45eec <__alt_data_end+0xfffd3eec>
   45f08:	020000c4 	movi	r8,3
   45f0c:	40801136 	bltu	r8,r2,45f54 <memchr+0x8c>
   45f10:	10000c26 	beq	r2,zero,45f44 <memchr+0x7c>
   45f14:	20c00003 	ldbu	r3,0(r4)
   45f18:	29403fcc 	andi	r5,r5,255
   45f1c:	28c00b26 	beq	r5,r3,45f4c <memchr+0x84>
   45f20:	20c00044 	addi	r3,r4,1
   45f24:	39803fcc 	andi	r6,r7,255
   45f28:	2089883a 	add	r4,r4,r2
   45f2c:	00000306 	br	45f3c <memchr+0x74>
   45f30:	18c00044 	addi	r3,r3,1
   45f34:	197fffc3 	ldbu	r5,-1(r3)
   45f38:	31400526 	beq	r6,r5,45f50 <memchr+0x88>
   45f3c:	1805883a 	mov	r2,r3
   45f40:	20fffb1e 	bne	r4,r3,45f30 <__alt_data_end+0xfffd3f30>
   45f44:	0005883a 	mov	r2,zero
   45f48:	f800283a 	ret
   45f4c:	2005883a 	mov	r2,r4
   45f50:	f800283a 	ret
   45f54:	28c03fcc 	andi	r3,r5,255
   45f58:	1812923a 	slli	r9,r3,8
   45f5c:	02ffbff4 	movhi	r11,65279
   45f60:	02a02074 	movhi	r10,32897
   45f64:	48d2b03a 	or	r9,r9,r3
   45f68:	4806943a 	slli	r3,r9,16
   45f6c:	5affbfc4 	addi	r11,r11,-257
   45f70:	52a02004 	addi	r10,r10,-32640
   45f74:	48d2b03a 	or	r9,r9,r3
   45f78:	20c00017 	ldw	r3,0(r4)
   45f7c:	48c6f03a 	xor	r3,r9,r3
   45f80:	1acd883a 	add	r6,r3,r11
   45f84:	00c6303a 	nor	r3,zero,r3
   45f88:	30c6703a 	and	r3,r6,r3
   45f8c:	1a86703a 	and	r3,r3,r10
   45f90:	183fe01e 	bne	r3,zero,45f14 <__alt_data_end+0xfffd3f14>
   45f94:	10bfff04 	addi	r2,r2,-4
   45f98:	21000104 	addi	r4,r4,4
   45f9c:	40bff636 	bltu	r8,r2,45f78 <__alt_data_end+0xfffd3f78>
   45fa0:	003fdb06 	br	45f10 <__alt_data_end+0xfffd3f10>
   45fa4:	3005883a 	mov	r2,r6
   45fa8:	003fd706 	br	45f08 <__alt_data_end+0xfffd3f08>

00045fac <memcpy>:
   45fac:	defffd04 	addi	sp,sp,-12
   45fb0:	dfc00215 	stw	ra,8(sp)
   45fb4:	dc400115 	stw	r17,4(sp)
   45fb8:	dc000015 	stw	r16,0(sp)
   45fbc:	00c003c4 	movi	r3,15
   45fc0:	2005883a 	mov	r2,r4
   45fc4:	1980452e 	bgeu	r3,r6,460dc <memcpy+0x130>
   45fc8:	2906b03a 	or	r3,r5,r4
   45fcc:	18c000cc 	andi	r3,r3,3
   45fd0:	1800441e 	bne	r3,zero,460e4 <memcpy+0x138>
   45fd4:	347ffc04 	addi	r17,r6,-16
   45fd8:	8822d13a 	srli	r17,r17,4
   45fdc:	28c00104 	addi	r3,r5,4
   45fe0:	23400104 	addi	r13,r4,4
   45fe4:	8820913a 	slli	r16,r17,4
   45fe8:	2b000204 	addi	r12,r5,8
   45fec:	22c00204 	addi	r11,r4,8
   45ff0:	84000504 	addi	r16,r16,20
   45ff4:	2a800304 	addi	r10,r5,12
   45ff8:	22400304 	addi	r9,r4,12
   45ffc:	2c21883a 	add	r16,r5,r16
   46000:	2811883a 	mov	r8,r5
   46004:	200f883a 	mov	r7,r4
   46008:	41000017 	ldw	r4,0(r8)
   4600c:	1fc00017 	ldw	ra,0(r3)
   46010:	63c00017 	ldw	r15,0(r12)
   46014:	39000015 	stw	r4,0(r7)
   46018:	53800017 	ldw	r14,0(r10)
   4601c:	6fc00015 	stw	ra,0(r13)
   46020:	5bc00015 	stw	r15,0(r11)
   46024:	4b800015 	stw	r14,0(r9)
   46028:	18c00404 	addi	r3,r3,16
   4602c:	39c00404 	addi	r7,r7,16
   46030:	42000404 	addi	r8,r8,16
   46034:	6b400404 	addi	r13,r13,16
   46038:	63000404 	addi	r12,r12,16
   4603c:	5ac00404 	addi	r11,r11,16
   46040:	52800404 	addi	r10,r10,16
   46044:	4a400404 	addi	r9,r9,16
   46048:	1c3fef1e 	bne	r3,r16,46008 <__alt_data_end+0xfffd4008>
   4604c:	89c00044 	addi	r7,r17,1
   46050:	380e913a 	slli	r7,r7,4
   46054:	310003cc 	andi	r4,r6,15
   46058:	02c000c4 	movi	r11,3
   4605c:	11c7883a 	add	r3,r2,r7
   46060:	29cb883a 	add	r5,r5,r7
   46064:	5900212e 	bgeu	r11,r4,460ec <memcpy+0x140>
   46068:	1813883a 	mov	r9,r3
   4606c:	2811883a 	mov	r8,r5
   46070:	200f883a 	mov	r7,r4
   46074:	42800017 	ldw	r10,0(r8)
   46078:	4a400104 	addi	r9,r9,4
   4607c:	39ffff04 	addi	r7,r7,-4
   46080:	4abfff15 	stw	r10,-4(r9)
   46084:	42000104 	addi	r8,r8,4
   46088:	59fffa36 	bltu	r11,r7,46074 <__alt_data_end+0xfffd4074>
   4608c:	213fff04 	addi	r4,r4,-4
   46090:	2008d0ba 	srli	r4,r4,2
   46094:	318000cc 	andi	r6,r6,3
   46098:	21000044 	addi	r4,r4,1
   4609c:	2109883a 	add	r4,r4,r4
   460a0:	2109883a 	add	r4,r4,r4
   460a4:	1907883a 	add	r3,r3,r4
   460a8:	290b883a 	add	r5,r5,r4
   460ac:	30000626 	beq	r6,zero,460c8 <memcpy+0x11c>
   460b0:	198d883a 	add	r6,r3,r6
   460b4:	29c00003 	ldbu	r7,0(r5)
   460b8:	18c00044 	addi	r3,r3,1
   460bc:	29400044 	addi	r5,r5,1
   460c0:	19ffffc5 	stb	r7,-1(r3)
   460c4:	19bffb1e 	bne	r3,r6,460b4 <__alt_data_end+0xfffd40b4>
   460c8:	dfc00217 	ldw	ra,8(sp)
   460cc:	dc400117 	ldw	r17,4(sp)
   460d0:	dc000017 	ldw	r16,0(sp)
   460d4:	dec00304 	addi	sp,sp,12
   460d8:	f800283a 	ret
   460dc:	2007883a 	mov	r3,r4
   460e0:	003ff206 	br	460ac <__alt_data_end+0xfffd40ac>
   460e4:	2007883a 	mov	r3,r4
   460e8:	003ff106 	br	460b0 <__alt_data_end+0xfffd40b0>
   460ec:	200d883a 	mov	r6,r4
   460f0:	003fee06 	br	460ac <__alt_data_end+0xfffd40ac>

000460f4 <memmove>:
   460f4:	2005883a 	mov	r2,r4
   460f8:	29000b2e 	bgeu	r5,r4,46128 <memmove+0x34>
   460fc:	298f883a 	add	r7,r5,r6
   46100:	21c0092e 	bgeu	r4,r7,46128 <memmove+0x34>
   46104:	2187883a 	add	r3,r4,r6
   46108:	198bc83a 	sub	r5,r3,r6
   4610c:	30004826 	beq	r6,zero,46230 <memmove+0x13c>
   46110:	39ffffc4 	addi	r7,r7,-1
   46114:	39000003 	ldbu	r4,0(r7)
   46118:	18ffffc4 	addi	r3,r3,-1
   4611c:	19000005 	stb	r4,0(r3)
   46120:	28fffb1e 	bne	r5,r3,46110 <__alt_data_end+0xfffd4110>
   46124:	f800283a 	ret
   46128:	00c003c4 	movi	r3,15
   4612c:	1980412e 	bgeu	r3,r6,46234 <memmove+0x140>
   46130:	2886b03a 	or	r3,r5,r2
   46134:	18c000cc 	andi	r3,r3,3
   46138:	1800401e 	bne	r3,zero,4623c <memmove+0x148>
   4613c:	33fffc04 	addi	r15,r6,-16
   46140:	781ed13a 	srli	r15,r15,4
   46144:	28c00104 	addi	r3,r5,4
   46148:	13400104 	addi	r13,r2,4
   4614c:	781c913a 	slli	r14,r15,4
   46150:	2b000204 	addi	r12,r5,8
   46154:	12c00204 	addi	r11,r2,8
   46158:	73800504 	addi	r14,r14,20
   4615c:	2a800304 	addi	r10,r5,12
   46160:	12400304 	addi	r9,r2,12
   46164:	2b9d883a 	add	r14,r5,r14
   46168:	2811883a 	mov	r8,r5
   4616c:	100f883a 	mov	r7,r2
   46170:	41000017 	ldw	r4,0(r8)
   46174:	39c00404 	addi	r7,r7,16
   46178:	18c00404 	addi	r3,r3,16
   4617c:	393ffc15 	stw	r4,-16(r7)
   46180:	193ffc17 	ldw	r4,-16(r3)
   46184:	6b400404 	addi	r13,r13,16
   46188:	5ac00404 	addi	r11,r11,16
   4618c:	693ffc15 	stw	r4,-16(r13)
   46190:	61000017 	ldw	r4,0(r12)
   46194:	4a400404 	addi	r9,r9,16
   46198:	42000404 	addi	r8,r8,16
   4619c:	593ffc15 	stw	r4,-16(r11)
   461a0:	51000017 	ldw	r4,0(r10)
   461a4:	63000404 	addi	r12,r12,16
   461a8:	52800404 	addi	r10,r10,16
   461ac:	493ffc15 	stw	r4,-16(r9)
   461b0:	1bbfef1e 	bne	r3,r14,46170 <__alt_data_end+0xfffd4170>
   461b4:	79000044 	addi	r4,r15,1
   461b8:	2008913a 	slli	r4,r4,4
   461bc:	328003cc 	andi	r10,r6,15
   461c0:	02c000c4 	movi	r11,3
   461c4:	1107883a 	add	r3,r2,r4
   461c8:	290b883a 	add	r5,r5,r4
   461cc:	5a801e2e 	bgeu	r11,r10,46248 <memmove+0x154>
   461d0:	1813883a 	mov	r9,r3
   461d4:	2811883a 	mov	r8,r5
   461d8:	500f883a 	mov	r7,r10
   461dc:	41000017 	ldw	r4,0(r8)
   461e0:	4a400104 	addi	r9,r9,4
   461e4:	39ffff04 	addi	r7,r7,-4
   461e8:	493fff15 	stw	r4,-4(r9)
   461ec:	42000104 	addi	r8,r8,4
   461f0:	59fffa36 	bltu	r11,r7,461dc <__alt_data_end+0xfffd41dc>
   461f4:	513fff04 	addi	r4,r10,-4
   461f8:	2008d0ba 	srli	r4,r4,2
   461fc:	318000cc 	andi	r6,r6,3
   46200:	21000044 	addi	r4,r4,1
   46204:	2109883a 	add	r4,r4,r4
   46208:	2109883a 	add	r4,r4,r4
   4620c:	1907883a 	add	r3,r3,r4
   46210:	290b883a 	add	r5,r5,r4
   46214:	30000b26 	beq	r6,zero,46244 <memmove+0x150>
   46218:	198d883a 	add	r6,r3,r6
   4621c:	29c00003 	ldbu	r7,0(r5)
   46220:	18c00044 	addi	r3,r3,1
   46224:	29400044 	addi	r5,r5,1
   46228:	19ffffc5 	stb	r7,-1(r3)
   4622c:	19bffb1e 	bne	r3,r6,4621c <__alt_data_end+0xfffd421c>
   46230:	f800283a 	ret
   46234:	1007883a 	mov	r3,r2
   46238:	003ff606 	br	46214 <__alt_data_end+0xfffd4214>
   4623c:	1007883a 	mov	r3,r2
   46240:	003ff506 	br	46218 <__alt_data_end+0xfffd4218>
   46244:	f800283a 	ret
   46248:	500d883a 	mov	r6,r10
   4624c:	003ff106 	br	46214 <__alt_data_end+0xfffd4214>

00046250 <memset>:
   46250:	20c000cc 	andi	r3,r4,3
   46254:	2005883a 	mov	r2,r4
   46258:	18004426 	beq	r3,zero,4636c <memset+0x11c>
   4625c:	31ffffc4 	addi	r7,r6,-1
   46260:	30004026 	beq	r6,zero,46364 <memset+0x114>
   46264:	2813883a 	mov	r9,r5
   46268:	200d883a 	mov	r6,r4
   4626c:	2007883a 	mov	r3,r4
   46270:	00000406 	br	46284 <memset+0x34>
   46274:	3a3fffc4 	addi	r8,r7,-1
   46278:	31800044 	addi	r6,r6,1
   4627c:	38003926 	beq	r7,zero,46364 <memset+0x114>
   46280:	400f883a 	mov	r7,r8
   46284:	18c00044 	addi	r3,r3,1
   46288:	32400005 	stb	r9,0(r6)
   4628c:	1a0000cc 	andi	r8,r3,3
   46290:	403ff81e 	bne	r8,zero,46274 <__alt_data_end+0xfffd4274>
   46294:	010000c4 	movi	r4,3
   46298:	21c02d2e 	bgeu	r4,r7,46350 <memset+0x100>
   4629c:	29003fcc 	andi	r4,r5,255
   462a0:	200c923a 	slli	r6,r4,8
   462a4:	3108b03a 	or	r4,r6,r4
   462a8:	200c943a 	slli	r6,r4,16
   462ac:	218cb03a 	or	r6,r4,r6
   462b0:	010003c4 	movi	r4,15
   462b4:	21c0182e 	bgeu	r4,r7,46318 <memset+0xc8>
   462b8:	3b3ffc04 	addi	r12,r7,-16
   462bc:	6018d13a 	srli	r12,r12,4
   462c0:	1a000104 	addi	r8,r3,4
   462c4:	1ac00204 	addi	r11,r3,8
   462c8:	6008913a 	slli	r4,r12,4
   462cc:	1a800304 	addi	r10,r3,12
   462d0:	1813883a 	mov	r9,r3
   462d4:	21000504 	addi	r4,r4,20
   462d8:	1909883a 	add	r4,r3,r4
   462dc:	49800015 	stw	r6,0(r9)
   462e0:	41800015 	stw	r6,0(r8)
   462e4:	59800015 	stw	r6,0(r11)
   462e8:	51800015 	stw	r6,0(r10)
   462ec:	42000404 	addi	r8,r8,16
   462f0:	4a400404 	addi	r9,r9,16
   462f4:	5ac00404 	addi	r11,r11,16
   462f8:	52800404 	addi	r10,r10,16
   462fc:	413ff71e 	bne	r8,r4,462dc <__alt_data_end+0xfffd42dc>
   46300:	63000044 	addi	r12,r12,1
   46304:	6018913a 	slli	r12,r12,4
   46308:	39c003cc 	andi	r7,r7,15
   4630c:	010000c4 	movi	r4,3
   46310:	1b07883a 	add	r3,r3,r12
   46314:	21c00e2e 	bgeu	r4,r7,46350 <memset+0x100>
   46318:	1813883a 	mov	r9,r3
   4631c:	3811883a 	mov	r8,r7
   46320:	010000c4 	movi	r4,3
   46324:	49800015 	stw	r6,0(r9)
   46328:	423fff04 	addi	r8,r8,-4
   4632c:	4a400104 	addi	r9,r9,4
   46330:	223ffc36 	bltu	r4,r8,46324 <__alt_data_end+0xfffd4324>
   46334:	393fff04 	addi	r4,r7,-4
   46338:	2008d0ba 	srli	r4,r4,2
   4633c:	39c000cc 	andi	r7,r7,3
   46340:	21000044 	addi	r4,r4,1
   46344:	2109883a 	add	r4,r4,r4
   46348:	2109883a 	add	r4,r4,r4
   4634c:	1907883a 	add	r3,r3,r4
   46350:	38000526 	beq	r7,zero,46368 <memset+0x118>
   46354:	19cf883a 	add	r7,r3,r7
   46358:	19400005 	stb	r5,0(r3)
   4635c:	18c00044 	addi	r3,r3,1
   46360:	38fffd1e 	bne	r7,r3,46358 <__alt_data_end+0xfffd4358>
   46364:	f800283a 	ret
   46368:	f800283a 	ret
   4636c:	2007883a 	mov	r3,r4
   46370:	300f883a 	mov	r7,r6
   46374:	003fc706 	br	46294 <__alt_data_end+0xfffd4294>

00046378 <_Balloc>:
   46378:	20801317 	ldw	r2,76(r4)
   4637c:	defffc04 	addi	sp,sp,-16
   46380:	dc400115 	stw	r17,4(sp)
   46384:	dc000015 	stw	r16,0(sp)
   46388:	dfc00315 	stw	ra,12(sp)
   4638c:	dc800215 	stw	r18,8(sp)
   46390:	2023883a 	mov	r17,r4
   46394:	2821883a 	mov	r16,r5
   46398:	10000f26 	beq	r2,zero,463d8 <_Balloc+0x60>
   4639c:	8407883a 	add	r3,r16,r16
   463a0:	18c7883a 	add	r3,r3,r3
   463a4:	10c7883a 	add	r3,r2,r3
   463a8:	18800017 	ldw	r2,0(r3)
   463ac:	10001126 	beq	r2,zero,463f4 <_Balloc+0x7c>
   463b0:	11000017 	ldw	r4,0(r2)
   463b4:	19000015 	stw	r4,0(r3)
   463b8:	10000415 	stw	zero,16(r2)
   463bc:	10000315 	stw	zero,12(r2)
   463c0:	dfc00317 	ldw	ra,12(sp)
   463c4:	dc800217 	ldw	r18,8(sp)
   463c8:	dc400117 	ldw	r17,4(sp)
   463cc:	dc000017 	ldw	r16,0(sp)
   463d0:	dec00404 	addi	sp,sp,16
   463d4:	f800283a 	ret
   463d8:	01800844 	movi	r6,33
   463dc:	01400104 	movi	r5,4
   463e0:	00494200 	call	49420 <_calloc_r>
   463e4:	88801315 	stw	r2,76(r17)
   463e8:	103fec1e 	bne	r2,zero,4639c <__alt_data_end+0xfffd439c>
   463ec:	0005883a 	mov	r2,zero
   463f0:	003ff306 	br	463c0 <__alt_data_end+0xfffd43c0>
   463f4:	01400044 	movi	r5,1
   463f8:	2c24983a 	sll	r18,r5,r16
   463fc:	8809883a 	mov	r4,r17
   46400:	91800144 	addi	r6,r18,5
   46404:	318d883a 	add	r6,r6,r6
   46408:	318d883a 	add	r6,r6,r6
   4640c:	00494200 	call	49420 <_calloc_r>
   46410:	103ff626 	beq	r2,zero,463ec <__alt_data_end+0xfffd43ec>
   46414:	14000115 	stw	r16,4(r2)
   46418:	14800215 	stw	r18,8(r2)
   4641c:	003fe606 	br	463b8 <__alt_data_end+0xfffd43b8>

00046420 <_Bfree>:
   46420:	28000826 	beq	r5,zero,46444 <_Bfree+0x24>
   46424:	28c00117 	ldw	r3,4(r5)
   46428:	20801317 	ldw	r2,76(r4)
   4642c:	18c7883a 	add	r3,r3,r3
   46430:	18c7883a 	add	r3,r3,r3
   46434:	10c5883a 	add	r2,r2,r3
   46438:	10c00017 	ldw	r3,0(r2)
   4643c:	28c00015 	stw	r3,0(r5)
   46440:	11400015 	stw	r5,0(r2)
   46444:	f800283a 	ret

00046448 <__multadd>:
   46448:	defff704 	addi	sp,sp,-36
   4644c:	dc800215 	stw	r18,8(sp)
   46450:	2c800417 	ldw	r18,16(r5)
   46454:	dd800615 	stw	r22,24(sp)
   46458:	dd400515 	stw	r21,20(sp)
   4645c:	dd000415 	stw	r20,16(sp)
   46460:	dcc00315 	stw	r19,12(sp)
   46464:	dc400115 	stw	r17,4(sp)
   46468:	dc000015 	stw	r16,0(sp)
   4646c:	dfc00815 	stw	ra,32(sp)
   46470:	ddc00715 	stw	r23,28(sp)
   46474:	2827883a 	mov	r19,r5
   46478:	2029883a 	mov	r20,r4
   4647c:	3023883a 	mov	r17,r6
   46480:	3821883a 	mov	r16,r7
   46484:	2d400504 	addi	r21,r5,20
   46488:	002d883a 	mov	r22,zero
   4648c:	adc00017 	ldw	r23,0(r21)
   46490:	880b883a 	mov	r5,r17
   46494:	ad400104 	addi	r21,r21,4
   46498:	b93fffcc 	andi	r4,r23,65535
   4649c:	004aa2c0 	call	4aa2c <__mulsi3>
   464a0:	b808d43a 	srli	r4,r23,16
   464a4:	880b883a 	mov	r5,r17
   464a8:	1421883a 	add	r16,r2,r16
   464ac:	004aa2c0 	call	4aa2c <__mulsi3>
   464b0:	800ed43a 	srli	r7,r16,16
   464b4:	80ffffcc 	andi	r3,r16,65535
   464b8:	b5800044 	addi	r22,r22,1
   464bc:	11c5883a 	add	r2,r2,r7
   464c0:	100e943a 	slli	r7,r2,16
   464c4:	1020d43a 	srli	r16,r2,16
   464c8:	38c7883a 	add	r3,r7,r3
   464cc:	a8ffff15 	stw	r3,-4(r21)
   464d0:	b4bfee16 	blt	r22,r18,4648c <__alt_data_end+0xfffd448c>
   464d4:	80000926 	beq	r16,zero,464fc <__multadd+0xb4>
   464d8:	98800217 	ldw	r2,8(r19)
   464dc:	9080130e 	bge	r18,r2,4652c <__multadd+0xe4>
   464e0:	90800144 	addi	r2,r18,5
   464e4:	1085883a 	add	r2,r2,r2
   464e8:	1085883a 	add	r2,r2,r2
   464ec:	9885883a 	add	r2,r19,r2
   464f0:	14000015 	stw	r16,0(r2)
   464f4:	94800044 	addi	r18,r18,1
   464f8:	9c800415 	stw	r18,16(r19)
   464fc:	9805883a 	mov	r2,r19
   46500:	dfc00817 	ldw	ra,32(sp)
   46504:	ddc00717 	ldw	r23,28(sp)
   46508:	dd800617 	ldw	r22,24(sp)
   4650c:	dd400517 	ldw	r21,20(sp)
   46510:	dd000417 	ldw	r20,16(sp)
   46514:	dcc00317 	ldw	r19,12(sp)
   46518:	dc800217 	ldw	r18,8(sp)
   4651c:	dc400117 	ldw	r17,4(sp)
   46520:	dc000017 	ldw	r16,0(sp)
   46524:	dec00904 	addi	sp,sp,36
   46528:	f800283a 	ret
   4652c:	99400117 	ldw	r5,4(r19)
   46530:	a009883a 	mov	r4,r20
   46534:	29400044 	addi	r5,r5,1
   46538:	00463780 	call	46378 <_Balloc>
   4653c:	99800417 	ldw	r6,16(r19)
   46540:	99400304 	addi	r5,r19,12
   46544:	11000304 	addi	r4,r2,12
   46548:	31800084 	addi	r6,r6,2
   4654c:	318d883a 	add	r6,r6,r6
   46550:	318d883a 	add	r6,r6,r6
   46554:	1023883a 	mov	r17,r2
   46558:	0045fac0 	call	45fac <memcpy>
   4655c:	98000a26 	beq	r19,zero,46588 <__multadd+0x140>
   46560:	98c00117 	ldw	r3,4(r19)
   46564:	a0801317 	ldw	r2,76(r20)
   46568:	18c7883a 	add	r3,r3,r3
   4656c:	18c7883a 	add	r3,r3,r3
   46570:	10c5883a 	add	r2,r2,r3
   46574:	10c00017 	ldw	r3,0(r2)
   46578:	98c00015 	stw	r3,0(r19)
   4657c:	14c00015 	stw	r19,0(r2)
   46580:	8827883a 	mov	r19,r17
   46584:	003fd606 	br	464e0 <__alt_data_end+0xfffd44e0>
   46588:	8827883a 	mov	r19,r17
   4658c:	003fd406 	br	464e0 <__alt_data_end+0xfffd44e0>

00046590 <__s2b>:
   46590:	defff904 	addi	sp,sp,-28
   46594:	dc400115 	stw	r17,4(sp)
   46598:	dc000015 	stw	r16,0(sp)
   4659c:	2023883a 	mov	r17,r4
   465a0:	2821883a 	mov	r16,r5
   465a4:	39000204 	addi	r4,r7,8
   465a8:	01400244 	movi	r5,9
   465ac:	dcc00315 	stw	r19,12(sp)
   465b0:	dc800215 	stw	r18,8(sp)
   465b4:	dfc00615 	stw	ra,24(sp)
   465b8:	dd400515 	stw	r21,20(sp)
   465bc:	dd000415 	stw	r20,16(sp)
   465c0:	3825883a 	mov	r18,r7
   465c4:	3027883a 	mov	r19,r6
   465c8:	004a8780 	call	4a878 <__divsi3>
   465cc:	00c00044 	movi	r3,1
   465d0:	000b883a 	mov	r5,zero
   465d4:	1880030e 	bge	r3,r2,465e4 <__s2b+0x54>
   465d8:	18c7883a 	add	r3,r3,r3
   465dc:	29400044 	addi	r5,r5,1
   465e0:	18bffd16 	blt	r3,r2,465d8 <__alt_data_end+0xfffd45d8>
   465e4:	8809883a 	mov	r4,r17
   465e8:	00463780 	call	46378 <_Balloc>
   465ec:	d8c00717 	ldw	r3,28(sp)
   465f0:	10c00515 	stw	r3,20(r2)
   465f4:	00c00044 	movi	r3,1
   465f8:	10c00415 	stw	r3,16(r2)
   465fc:	00c00244 	movi	r3,9
   46600:	1cc0210e 	bge	r3,r19,46688 <__s2b+0xf8>
   46604:	80eb883a 	add	r21,r16,r3
   46608:	a829883a 	mov	r20,r21
   4660c:	84e1883a 	add	r16,r16,r19
   46610:	a1c00007 	ldb	r7,0(r20)
   46614:	01800284 	movi	r6,10
   46618:	a5000044 	addi	r20,r20,1
   4661c:	100b883a 	mov	r5,r2
   46620:	39fff404 	addi	r7,r7,-48
   46624:	8809883a 	mov	r4,r17
   46628:	00464480 	call	46448 <__multadd>
   4662c:	a43ff81e 	bne	r20,r16,46610 <__alt_data_end+0xfffd4610>
   46630:	ace1883a 	add	r16,r21,r19
   46634:	843ffe04 	addi	r16,r16,-8
   46638:	9c800a0e 	bge	r19,r18,46664 <__s2b+0xd4>
   4663c:	94e5c83a 	sub	r18,r18,r19
   46640:	84a5883a 	add	r18,r16,r18
   46644:	81c00007 	ldb	r7,0(r16)
   46648:	01800284 	movi	r6,10
   4664c:	84000044 	addi	r16,r16,1
   46650:	100b883a 	mov	r5,r2
   46654:	39fff404 	addi	r7,r7,-48
   46658:	8809883a 	mov	r4,r17
   4665c:	00464480 	call	46448 <__multadd>
   46660:	84bff81e 	bne	r16,r18,46644 <__alt_data_end+0xfffd4644>
   46664:	dfc00617 	ldw	ra,24(sp)
   46668:	dd400517 	ldw	r21,20(sp)
   4666c:	dd000417 	ldw	r20,16(sp)
   46670:	dcc00317 	ldw	r19,12(sp)
   46674:	dc800217 	ldw	r18,8(sp)
   46678:	dc400117 	ldw	r17,4(sp)
   4667c:	dc000017 	ldw	r16,0(sp)
   46680:	dec00704 	addi	sp,sp,28
   46684:	f800283a 	ret
   46688:	84000284 	addi	r16,r16,10
   4668c:	1827883a 	mov	r19,r3
   46690:	003fe906 	br	46638 <__alt_data_end+0xfffd4638>

00046694 <__hi0bits>:
   46694:	20bfffec 	andhi	r2,r4,65535
   46698:	1000141e 	bne	r2,zero,466ec <__hi0bits+0x58>
   4669c:	2008943a 	slli	r4,r4,16
   466a0:	00800404 	movi	r2,16
   466a4:	20ffc02c 	andhi	r3,r4,65280
   466a8:	1800021e 	bne	r3,zero,466b4 <__hi0bits+0x20>
   466ac:	2008923a 	slli	r4,r4,8
   466b0:	10800204 	addi	r2,r2,8
   466b4:	20fc002c 	andhi	r3,r4,61440
   466b8:	1800021e 	bne	r3,zero,466c4 <__hi0bits+0x30>
   466bc:	2008913a 	slli	r4,r4,4
   466c0:	10800104 	addi	r2,r2,4
   466c4:	20f0002c 	andhi	r3,r4,49152
   466c8:	1800031e 	bne	r3,zero,466d8 <__hi0bits+0x44>
   466cc:	2109883a 	add	r4,r4,r4
   466d0:	10800084 	addi	r2,r2,2
   466d4:	2109883a 	add	r4,r4,r4
   466d8:	20000316 	blt	r4,zero,466e8 <__hi0bits+0x54>
   466dc:	2110002c 	andhi	r4,r4,16384
   466e0:	2000041e 	bne	r4,zero,466f4 <__hi0bits+0x60>
   466e4:	00800804 	movi	r2,32
   466e8:	f800283a 	ret
   466ec:	0005883a 	mov	r2,zero
   466f0:	003fec06 	br	466a4 <__alt_data_end+0xfffd46a4>
   466f4:	10800044 	addi	r2,r2,1
   466f8:	f800283a 	ret

000466fc <__lo0bits>:
   466fc:	20c00017 	ldw	r3,0(r4)
   46700:	188001cc 	andi	r2,r3,7
   46704:	10000826 	beq	r2,zero,46728 <__lo0bits+0x2c>
   46708:	1880004c 	andi	r2,r3,1
   4670c:	1000211e 	bne	r2,zero,46794 <__lo0bits+0x98>
   46710:	1880008c 	andi	r2,r3,2
   46714:	1000211e 	bne	r2,zero,4679c <__lo0bits+0xa0>
   46718:	1806d0ba 	srli	r3,r3,2
   4671c:	00800084 	movi	r2,2
   46720:	20c00015 	stw	r3,0(r4)
   46724:	f800283a 	ret
   46728:	18bfffcc 	andi	r2,r3,65535
   4672c:	10001326 	beq	r2,zero,4677c <__lo0bits+0x80>
   46730:	0005883a 	mov	r2,zero
   46734:	19403fcc 	andi	r5,r3,255
   46738:	2800021e 	bne	r5,zero,46744 <__lo0bits+0x48>
   4673c:	1806d23a 	srli	r3,r3,8
   46740:	10800204 	addi	r2,r2,8
   46744:	194003cc 	andi	r5,r3,15
   46748:	2800021e 	bne	r5,zero,46754 <__lo0bits+0x58>
   4674c:	1806d13a 	srli	r3,r3,4
   46750:	10800104 	addi	r2,r2,4
   46754:	194000cc 	andi	r5,r3,3
   46758:	2800021e 	bne	r5,zero,46764 <__lo0bits+0x68>
   4675c:	1806d0ba 	srli	r3,r3,2
   46760:	10800084 	addi	r2,r2,2
   46764:	1940004c 	andi	r5,r3,1
   46768:	2800081e 	bne	r5,zero,4678c <__lo0bits+0x90>
   4676c:	1806d07a 	srli	r3,r3,1
   46770:	1800051e 	bne	r3,zero,46788 <__lo0bits+0x8c>
   46774:	00800804 	movi	r2,32
   46778:	f800283a 	ret
   4677c:	1806d43a 	srli	r3,r3,16
   46780:	00800404 	movi	r2,16
   46784:	003feb06 	br	46734 <__alt_data_end+0xfffd4734>
   46788:	10800044 	addi	r2,r2,1
   4678c:	20c00015 	stw	r3,0(r4)
   46790:	f800283a 	ret
   46794:	0005883a 	mov	r2,zero
   46798:	f800283a 	ret
   4679c:	1806d07a 	srli	r3,r3,1
   467a0:	00800044 	movi	r2,1
   467a4:	20c00015 	stw	r3,0(r4)
   467a8:	f800283a 	ret

000467ac <__i2b>:
   467ac:	defffd04 	addi	sp,sp,-12
   467b0:	dc000015 	stw	r16,0(sp)
   467b4:	04000044 	movi	r16,1
   467b8:	dc400115 	stw	r17,4(sp)
   467bc:	2823883a 	mov	r17,r5
   467c0:	800b883a 	mov	r5,r16
   467c4:	dfc00215 	stw	ra,8(sp)
   467c8:	00463780 	call	46378 <_Balloc>
   467cc:	14400515 	stw	r17,20(r2)
   467d0:	14000415 	stw	r16,16(r2)
   467d4:	dfc00217 	ldw	ra,8(sp)
   467d8:	dc400117 	ldw	r17,4(sp)
   467dc:	dc000017 	ldw	r16,0(sp)
   467e0:	dec00304 	addi	sp,sp,12
   467e4:	f800283a 	ret

000467e8 <__multiply>:
   467e8:	deffef04 	addi	sp,sp,-68
   467ec:	dc400815 	stw	r17,32(sp)
   467f0:	dc000715 	stw	r16,28(sp)
   467f4:	34400417 	ldw	r17,16(r6)
   467f8:	2c000417 	ldw	r16,16(r5)
   467fc:	dd800d15 	stw	r22,52(sp)
   46800:	dc800915 	stw	r18,36(sp)
   46804:	dfc01015 	stw	ra,64(sp)
   46808:	df000f15 	stw	fp,60(sp)
   4680c:	ddc00e15 	stw	r23,56(sp)
   46810:	dd400c15 	stw	r21,48(sp)
   46814:	dd000b15 	stw	r20,44(sp)
   46818:	dcc00a15 	stw	r19,40(sp)
   4681c:	2825883a 	mov	r18,r5
   46820:	302d883a 	mov	r22,r6
   46824:	8440050e 	bge	r16,r17,4683c <__multiply+0x54>
   46828:	8007883a 	mov	r3,r16
   4682c:	3025883a 	mov	r18,r6
   46830:	8821883a 	mov	r16,r17
   46834:	282d883a 	mov	r22,r5
   46838:	1823883a 	mov	r17,r3
   4683c:	90800217 	ldw	r2,8(r18)
   46840:	8447883a 	add	r3,r16,r17
   46844:	d8c00215 	stw	r3,8(sp)
   46848:	91400117 	ldw	r5,4(r18)
   4684c:	10c0010e 	bge	r2,r3,46854 <__multiply+0x6c>
   46850:	29400044 	addi	r5,r5,1
   46854:	00463780 	call	46378 <_Balloc>
   46858:	d8c00217 	ldw	r3,8(sp)
   4685c:	d8800615 	stw	r2,24(sp)
   46860:	18eb883a 	add	r21,r3,r3
   46864:	ad6b883a 	add	r21,r21,r21
   46868:	10c00504 	addi	r3,r2,20
   4686c:	1d6b883a 	add	r21,r3,r21
   46870:	d8c00115 	stw	r3,4(sp)
   46874:	dd400315 	stw	r21,12(sp)
   46878:	1805883a 	mov	r2,r3
   4687c:	1d40042e 	bgeu	r3,r21,46890 <__multiply+0xa8>
   46880:	d8c00317 	ldw	r3,12(sp)
   46884:	10000015 	stw	zero,0(r2)
   46888:	10800104 	addi	r2,r2,4
   4688c:	10fffc36 	bltu	r2,r3,46880 <__alt_data_end+0xfffd4880>
   46890:	8c63883a 	add	r17,r17,r17
   46894:	b5800504 	addi	r22,r22,20
   46898:	8c63883a 	add	r17,r17,r17
   4689c:	94800504 	addi	r18,r18,20
   468a0:	8421883a 	add	r16,r16,r16
   468a4:	b463883a 	add	r17,r22,r17
   468a8:	8421883a 	add	r16,r16,r16
   468ac:	dd800015 	stw	r22,0(sp)
   468b0:	dc800415 	stw	r18,16(sp)
   468b4:	dc400515 	stw	r17,20(sp)
   468b8:	9429883a 	add	r20,r18,r16
   468bc:	b4404f2e 	bgeu	r22,r17,469fc <__multiply+0x214>
   468c0:	d8c00017 	ldw	r3,0(sp)
   468c4:	1c800017 	ldw	r18,0(r3)
   468c8:	947fffcc 	andi	r17,r18,65535
   468cc:	88001e26 	beq	r17,zero,46948 <__multiply+0x160>
   468d0:	dd800117 	ldw	r22,4(sp)
   468d4:	dd400417 	ldw	r21,16(sp)
   468d8:	0027883a 	mov	r19,zero
   468dc:	ac800017 	ldw	r18,0(r21)
   468e0:	b4000017 	ldw	r16,0(r22)
   468e4:	880b883a 	mov	r5,r17
   468e8:	913fffcc 	andi	r4,r18,65535
   468ec:	004aa2c0 	call	4aa2c <__mulsi3>
   468f0:	9008d43a 	srli	r4,r18,16
   468f4:	84bfffcc 	andi	r18,r16,65535
   468f8:	1485883a 	add	r2,r2,r18
   468fc:	14e5883a 	add	r18,r2,r19
   46900:	8020d43a 	srli	r16,r16,16
   46904:	9026d43a 	srli	r19,r18,16
   46908:	880b883a 	mov	r5,r17
   4690c:	004aa2c0 	call	4aa2c <__mulsi3>
   46910:	1405883a 	add	r2,r2,r16
   46914:	14e1883a 	add	r16,r2,r19
   46918:	90ffffcc 	andi	r3,r18,65535
   4691c:	8024943a 	slli	r18,r16,16
   46920:	ad400104 	addi	r21,r21,4
   46924:	b005883a 	mov	r2,r22
   46928:	90c6b03a 	or	r3,r18,r3
   4692c:	b0c00015 	stw	r3,0(r22)
   46930:	8026d43a 	srli	r19,r16,16
   46934:	b5800104 	addi	r22,r22,4
   46938:	ad3fe836 	bltu	r21,r20,468dc <__alt_data_end+0xfffd48dc>
   4693c:	d8c00017 	ldw	r3,0(sp)
   46940:	14c00115 	stw	r19,4(r2)
   46944:	1c800017 	ldw	r18,0(r3)
   46948:	9024d43a 	srli	r18,r18,16
   4694c:	90002226 	beq	r18,zero,469d8 <__multiply+0x1f0>
   46950:	d8c00117 	ldw	r3,4(sp)
   46954:	dd800417 	ldw	r22,16(sp)
   46958:	002f883a 	mov	r23,zero
   4695c:	1f000017 	ldw	fp,0(r3)
   46960:	1823883a 	mov	r17,r3
   46964:	182b883a 	mov	r21,r3
   46968:	e021883a 	mov	r16,fp
   4696c:	00000106 	br	46974 <__multiply+0x18c>
   46970:	982b883a 	mov	r21,r19
   46974:	b100000b 	ldhu	r4,0(r22)
   46978:	8020d43a 	srli	r16,r16,16
   4697c:	900b883a 	mov	r5,r18
   46980:	004aa2c0 	call	4aa2c <__mulsi3>
   46984:	1405883a 	add	r2,r2,r16
   46988:	15ef883a 	add	r23,r2,r23
   4698c:	b804943a 	slli	r2,r23,16
   46990:	e0ffffcc 	andi	r3,fp,65535
   46994:	8c400104 	addi	r17,r17,4
   46998:	10c6b03a 	or	r3,r2,r3
   4699c:	88ffff15 	stw	r3,-4(r17)
   469a0:	b5800104 	addi	r22,r22,4
   469a4:	b13fff17 	ldw	r4,-4(r22)
   469a8:	acc00104 	addi	r19,r21,4
   469ac:	900b883a 	mov	r5,r18
   469b0:	2008d43a 	srli	r4,r4,16
   469b4:	9c000017 	ldw	r16,0(r19)
   469b8:	004aa2c0 	call	4aa2c <__mulsi3>
   469bc:	b806d43a 	srli	r3,r23,16
   469c0:	813fffcc 	andi	r4,r16,65535
   469c4:	1105883a 	add	r2,r2,r4
   469c8:	10f9883a 	add	fp,r2,r3
   469cc:	e02ed43a 	srli	r23,fp,16
   469d0:	b53fe736 	bltu	r22,r20,46970 <__alt_data_end+0xfffd4970>
   469d4:	af000115 	stw	fp,4(r21)
   469d8:	d8c00017 	ldw	r3,0(sp)
   469dc:	d9000517 	ldw	r4,20(sp)
   469e0:	18c00104 	addi	r3,r3,4
   469e4:	d8c00015 	stw	r3,0(sp)
   469e8:	d8c00117 	ldw	r3,4(sp)
   469ec:	18c00104 	addi	r3,r3,4
   469f0:	d8c00115 	stw	r3,4(sp)
   469f4:	d8c00017 	ldw	r3,0(sp)
   469f8:	193fb136 	bltu	r3,r4,468c0 <__alt_data_end+0xfffd48c0>
   469fc:	d8c00217 	ldw	r3,8(sp)
   46a00:	00c00c0e 	bge	zero,r3,46a34 <__multiply+0x24c>
   46a04:	d8c00317 	ldw	r3,12(sp)
   46a08:	18bfff17 	ldw	r2,-4(r3)
   46a0c:	1d7fff04 	addi	r21,r3,-4
   46a10:	10000326 	beq	r2,zero,46a20 <__multiply+0x238>
   46a14:	00000706 	br	46a34 <__multiply+0x24c>
   46a18:	a8800017 	ldw	r2,0(r21)
   46a1c:	1000051e 	bne	r2,zero,46a34 <__multiply+0x24c>
   46a20:	d8c00217 	ldw	r3,8(sp)
   46a24:	ad7fff04 	addi	r21,r21,-4
   46a28:	18ffffc4 	addi	r3,r3,-1
   46a2c:	d8c00215 	stw	r3,8(sp)
   46a30:	183ff91e 	bne	r3,zero,46a18 <__alt_data_end+0xfffd4a18>
   46a34:	d8c00617 	ldw	r3,24(sp)
   46a38:	d9000217 	ldw	r4,8(sp)
   46a3c:	1805883a 	mov	r2,r3
   46a40:	19000415 	stw	r4,16(r3)
   46a44:	dfc01017 	ldw	ra,64(sp)
   46a48:	df000f17 	ldw	fp,60(sp)
   46a4c:	ddc00e17 	ldw	r23,56(sp)
   46a50:	dd800d17 	ldw	r22,52(sp)
   46a54:	dd400c17 	ldw	r21,48(sp)
   46a58:	dd000b17 	ldw	r20,44(sp)
   46a5c:	dcc00a17 	ldw	r19,40(sp)
   46a60:	dc800917 	ldw	r18,36(sp)
   46a64:	dc400817 	ldw	r17,32(sp)
   46a68:	dc000717 	ldw	r16,28(sp)
   46a6c:	dec01104 	addi	sp,sp,68
   46a70:	f800283a 	ret

00046a74 <__pow5mult>:
   46a74:	defffa04 	addi	sp,sp,-24
   46a78:	dcc00315 	stw	r19,12(sp)
   46a7c:	dc000015 	stw	r16,0(sp)
   46a80:	dfc00515 	stw	ra,20(sp)
   46a84:	dd000415 	stw	r20,16(sp)
   46a88:	dc800215 	stw	r18,8(sp)
   46a8c:	dc400115 	stw	r17,4(sp)
   46a90:	308000cc 	andi	r2,r6,3
   46a94:	3021883a 	mov	r16,r6
   46a98:	2027883a 	mov	r19,r4
   46a9c:	10002f1e 	bne	r2,zero,46b5c <__pow5mult+0xe8>
   46aa0:	2825883a 	mov	r18,r5
   46aa4:	8021d0ba 	srai	r16,r16,2
   46aa8:	80001a26 	beq	r16,zero,46b14 <__pow5mult+0xa0>
   46aac:	9c401217 	ldw	r17,72(r19)
   46ab0:	8800061e 	bne	r17,zero,46acc <__pow5mult+0x58>
   46ab4:	00003406 	br	46b88 <__pow5mult+0x114>
   46ab8:	8021d07a 	srai	r16,r16,1
   46abc:	80001526 	beq	r16,zero,46b14 <__pow5mult+0xa0>
   46ac0:	88800017 	ldw	r2,0(r17)
   46ac4:	10001c26 	beq	r2,zero,46b38 <__pow5mult+0xc4>
   46ac8:	1023883a 	mov	r17,r2
   46acc:	8080004c 	andi	r2,r16,1
   46ad0:	103ff926 	beq	r2,zero,46ab8 <__alt_data_end+0xfffd4ab8>
   46ad4:	880d883a 	mov	r6,r17
   46ad8:	900b883a 	mov	r5,r18
   46adc:	9809883a 	mov	r4,r19
   46ae0:	00467e80 	call	467e8 <__multiply>
   46ae4:	90001b26 	beq	r18,zero,46b54 <__pow5mult+0xe0>
   46ae8:	91000117 	ldw	r4,4(r18)
   46aec:	98c01317 	ldw	r3,76(r19)
   46af0:	8021d07a 	srai	r16,r16,1
   46af4:	2109883a 	add	r4,r4,r4
   46af8:	2109883a 	add	r4,r4,r4
   46afc:	1907883a 	add	r3,r3,r4
   46b00:	19000017 	ldw	r4,0(r3)
   46b04:	91000015 	stw	r4,0(r18)
   46b08:	1c800015 	stw	r18,0(r3)
   46b0c:	1025883a 	mov	r18,r2
   46b10:	803feb1e 	bne	r16,zero,46ac0 <__alt_data_end+0xfffd4ac0>
   46b14:	9005883a 	mov	r2,r18
   46b18:	dfc00517 	ldw	ra,20(sp)
   46b1c:	dd000417 	ldw	r20,16(sp)
   46b20:	dcc00317 	ldw	r19,12(sp)
   46b24:	dc800217 	ldw	r18,8(sp)
   46b28:	dc400117 	ldw	r17,4(sp)
   46b2c:	dc000017 	ldw	r16,0(sp)
   46b30:	dec00604 	addi	sp,sp,24
   46b34:	f800283a 	ret
   46b38:	880d883a 	mov	r6,r17
   46b3c:	880b883a 	mov	r5,r17
   46b40:	9809883a 	mov	r4,r19
   46b44:	00467e80 	call	467e8 <__multiply>
   46b48:	88800015 	stw	r2,0(r17)
   46b4c:	10000015 	stw	zero,0(r2)
   46b50:	003fdd06 	br	46ac8 <__alt_data_end+0xfffd4ac8>
   46b54:	1025883a 	mov	r18,r2
   46b58:	003fd706 	br	46ab8 <__alt_data_end+0xfffd4ab8>
   46b5c:	10bfffc4 	addi	r2,r2,-1
   46b60:	1085883a 	add	r2,r2,r2
   46b64:	00c00174 	movhi	r3,5
   46b68:	18fef604 	addi	r3,r3,-1064
   46b6c:	1085883a 	add	r2,r2,r2
   46b70:	1885883a 	add	r2,r3,r2
   46b74:	11800017 	ldw	r6,0(r2)
   46b78:	000f883a 	mov	r7,zero
   46b7c:	00464480 	call	46448 <__multadd>
   46b80:	1025883a 	mov	r18,r2
   46b84:	003fc706 	br	46aa4 <__alt_data_end+0xfffd4aa4>
   46b88:	05000044 	movi	r20,1
   46b8c:	a00b883a 	mov	r5,r20
   46b90:	9809883a 	mov	r4,r19
   46b94:	00463780 	call	46378 <_Balloc>
   46b98:	1023883a 	mov	r17,r2
   46b9c:	00809c44 	movi	r2,625
   46ba0:	88800515 	stw	r2,20(r17)
   46ba4:	8d000415 	stw	r20,16(r17)
   46ba8:	9c401215 	stw	r17,72(r19)
   46bac:	88000015 	stw	zero,0(r17)
   46bb0:	003fc606 	br	46acc <__alt_data_end+0xfffd4acc>

00046bb4 <__lshift>:
   46bb4:	defff904 	addi	sp,sp,-28
   46bb8:	dd400515 	stw	r21,20(sp)
   46bbc:	dcc00315 	stw	r19,12(sp)
   46bc0:	302bd17a 	srai	r21,r6,5
   46bc4:	2cc00417 	ldw	r19,16(r5)
   46bc8:	28800217 	ldw	r2,8(r5)
   46bcc:	dd000415 	stw	r20,16(sp)
   46bd0:	ace7883a 	add	r19,r21,r19
   46bd4:	dc800215 	stw	r18,8(sp)
   46bd8:	dc400115 	stw	r17,4(sp)
   46bdc:	dc000015 	stw	r16,0(sp)
   46be0:	dfc00615 	stw	ra,24(sp)
   46be4:	9c000044 	addi	r16,r19,1
   46be8:	2823883a 	mov	r17,r5
   46bec:	3029883a 	mov	r20,r6
   46bf0:	2025883a 	mov	r18,r4
   46bf4:	29400117 	ldw	r5,4(r5)
   46bf8:	1400030e 	bge	r2,r16,46c08 <__lshift+0x54>
   46bfc:	1085883a 	add	r2,r2,r2
   46c00:	29400044 	addi	r5,r5,1
   46c04:	143ffd16 	blt	r2,r16,46bfc <__alt_data_end+0xfffd4bfc>
   46c08:	9009883a 	mov	r4,r18
   46c0c:	00463780 	call	46378 <_Balloc>
   46c10:	10c00504 	addi	r3,r2,20
   46c14:	0540070e 	bge	zero,r21,46c34 <__lshift+0x80>
   46c18:	ad6b883a 	add	r21,r21,r21
   46c1c:	ad6b883a 	add	r21,r21,r21
   46c20:	1809883a 	mov	r4,r3
   46c24:	1d47883a 	add	r3,r3,r21
   46c28:	20000015 	stw	zero,0(r4)
   46c2c:	21000104 	addi	r4,r4,4
   46c30:	193ffd1e 	bne	r3,r4,46c28 <__alt_data_end+0xfffd4c28>
   46c34:	8a000417 	ldw	r8,16(r17)
   46c38:	89000504 	addi	r4,r17,20
   46c3c:	a18007cc 	andi	r6,r20,31
   46c40:	4211883a 	add	r8,r8,r8
   46c44:	4211883a 	add	r8,r8,r8
   46c48:	2211883a 	add	r8,r4,r8
   46c4c:	30002326 	beq	r6,zero,46cdc <__lshift+0x128>
   46c50:	02400804 	movi	r9,32
   46c54:	4993c83a 	sub	r9,r9,r6
   46c58:	000b883a 	mov	r5,zero
   46c5c:	21c00017 	ldw	r7,0(r4)
   46c60:	1815883a 	mov	r10,r3
   46c64:	18c00104 	addi	r3,r3,4
   46c68:	398e983a 	sll	r7,r7,r6
   46c6c:	21000104 	addi	r4,r4,4
   46c70:	394ab03a 	or	r5,r7,r5
   46c74:	197fff15 	stw	r5,-4(r3)
   46c78:	217fff17 	ldw	r5,-4(r4)
   46c7c:	2a4ad83a 	srl	r5,r5,r9
   46c80:	223ff636 	bltu	r4,r8,46c5c <__alt_data_end+0xfffd4c5c>
   46c84:	51400115 	stw	r5,4(r10)
   46c88:	28001a1e 	bne	r5,zero,46cf4 <__lshift+0x140>
   46c8c:	843fffc4 	addi	r16,r16,-1
   46c90:	14000415 	stw	r16,16(r2)
   46c94:	88000826 	beq	r17,zero,46cb8 <__lshift+0x104>
   46c98:	89000117 	ldw	r4,4(r17)
   46c9c:	90c01317 	ldw	r3,76(r18)
   46ca0:	2109883a 	add	r4,r4,r4
   46ca4:	2109883a 	add	r4,r4,r4
   46ca8:	1907883a 	add	r3,r3,r4
   46cac:	19000017 	ldw	r4,0(r3)
   46cb0:	89000015 	stw	r4,0(r17)
   46cb4:	1c400015 	stw	r17,0(r3)
   46cb8:	dfc00617 	ldw	ra,24(sp)
   46cbc:	dd400517 	ldw	r21,20(sp)
   46cc0:	dd000417 	ldw	r20,16(sp)
   46cc4:	dcc00317 	ldw	r19,12(sp)
   46cc8:	dc800217 	ldw	r18,8(sp)
   46ccc:	dc400117 	ldw	r17,4(sp)
   46cd0:	dc000017 	ldw	r16,0(sp)
   46cd4:	dec00704 	addi	sp,sp,28
   46cd8:	f800283a 	ret
   46cdc:	21400017 	ldw	r5,0(r4)
   46ce0:	18c00104 	addi	r3,r3,4
   46ce4:	21000104 	addi	r4,r4,4
   46ce8:	197fff15 	stw	r5,-4(r3)
   46cec:	223ffb36 	bltu	r4,r8,46cdc <__alt_data_end+0xfffd4cdc>
   46cf0:	003fe606 	br	46c8c <__alt_data_end+0xfffd4c8c>
   46cf4:	9c000084 	addi	r16,r19,2
   46cf8:	003fe406 	br	46c8c <__alt_data_end+0xfffd4c8c>

00046cfc <__mcmp>:
   46cfc:	20800417 	ldw	r2,16(r4)
   46d00:	28c00417 	ldw	r3,16(r5)
   46d04:	10c5c83a 	sub	r2,r2,r3
   46d08:	1000111e 	bne	r2,zero,46d50 <__mcmp+0x54>
   46d0c:	18c7883a 	add	r3,r3,r3
   46d10:	18c7883a 	add	r3,r3,r3
   46d14:	21000504 	addi	r4,r4,20
   46d18:	29400504 	addi	r5,r5,20
   46d1c:	20c5883a 	add	r2,r4,r3
   46d20:	28cb883a 	add	r5,r5,r3
   46d24:	00000106 	br	46d2c <__mcmp+0x30>
   46d28:	20800a2e 	bgeu	r4,r2,46d54 <__mcmp+0x58>
   46d2c:	10bfff04 	addi	r2,r2,-4
   46d30:	297fff04 	addi	r5,r5,-4
   46d34:	11800017 	ldw	r6,0(r2)
   46d38:	28c00017 	ldw	r3,0(r5)
   46d3c:	30fffa26 	beq	r6,r3,46d28 <__alt_data_end+0xfffd4d28>
   46d40:	30c00236 	bltu	r6,r3,46d4c <__mcmp+0x50>
   46d44:	00800044 	movi	r2,1
   46d48:	f800283a 	ret
   46d4c:	00bfffc4 	movi	r2,-1
   46d50:	f800283a 	ret
   46d54:	0005883a 	mov	r2,zero
   46d58:	f800283a 	ret

00046d5c <__mdiff>:
   46d5c:	28c00417 	ldw	r3,16(r5)
   46d60:	30800417 	ldw	r2,16(r6)
   46d64:	defffa04 	addi	sp,sp,-24
   46d68:	dcc00315 	stw	r19,12(sp)
   46d6c:	dc800215 	stw	r18,8(sp)
   46d70:	dfc00515 	stw	ra,20(sp)
   46d74:	dd000415 	stw	r20,16(sp)
   46d78:	dc400115 	stw	r17,4(sp)
   46d7c:	dc000015 	stw	r16,0(sp)
   46d80:	1887c83a 	sub	r3,r3,r2
   46d84:	2825883a 	mov	r18,r5
   46d88:	3027883a 	mov	r19,r6
   46d8c:	1800141e 	bne	r3,zero,46de0 <__mdiff+0x84>
   46d90:	1085883a 	add	r2,r2,r2
   46d94:	1085883a 	add	r2,r2,r2
   46d98:	2a000504 	addi	r8,r5,20
   46d9c:	34000504 	addi	r16,r6,20
   46da0:	4087883a 	add	r3,r8,r2
   46da4:	8085883a 	add	r2,r16,r2
   46da8:	00000106 	br	46db0 <__mdiff+0x54>
   46dac:	40c0592e 	bgeu	r8,r3,46f14 <__mdiff+0x1b8>
   46db0:	18ffff04 	addi	r3,r3,-4
   46db4:	10bfff04 	addi	r2,r2,-4
   46db8:	19c00017 	ldw	r7,0(r3)
   46dbc:	11400017 	ldw	r5,0(r2)
   46dc0:	397ffa26 	beq	r7,r5,46dac <__alt_data_end+0xfffd4dac>
   46dc4:	3940592e 	bgeu	r7,r5,46f2c <__mdiff+0x1d0>
   46dc8:	9005883a 	mov	r2,r18
   46dcc:	4023883a 	mov	r17,r8
   46dd0:	9825883a 	mov	r18,r19
   46dd4:	05000044 	movi	r20,1
   46dd8:	1027883a 	mov	r19,r2
   46ddc:	00000406 	br	46df0 <__mdiff+0x94>
   46de0:	18005616 	blt	r3,zero,46f3c <__mdiff+0x1e0>
   46de4:	34400504 	addi	r17,r6,20
   46de8:	2c000504 	addi	r16,r5,20
   46dec:	0029883a 	mov	r20,zero
   46df0:	91400117 	ldw	r5,4(r18)
   46df4:	00463780 	call	46378 <_Balloc>
   46df8:	92400417 	ldw	r9,16(r18)
   46dfc:	9b000417 	ldw	r12,16(r19)
   46e00:	12c00504 	addi	r11,r2,20
   46e04:	4a51883a 	add	r8,r9,r9
   46e08:	6319883a 	add	r12,r12,r12
   46e0c:	4211883a 	add	r8,r8,r8
   46e10:	6319883a 	add	r12,r12,r12
   46e14:	15000315 	stw	r20,12(r2)
   46e18:	8211883a 	add	r8,r16,r8
   46e1c:	8b19883a 	add	r12,r17,r12
   46e20:	0007883a 	mov	r3,zero
   46e24:	81400017 	ldw	r5,0(r16)
   46e28:	89c00017 	ldw	r7,0(r17)
   46e2c:	59800104 	addi	r6,r11,4
   46e30:	293fffcc 	andi	r4,r5,65535
   46e34:	20c7883a 	add	r3,r4,r3
   46e38:	393fffcc 	andi	r4,r7,65535
   46e3c:	1909c83a 	sub	r4,r3,r4
   46e40:	280ad43a 	srli	r5,r5,16
   46e44:	380ed43a 	srli	r7,r7,16
   46e48:	2007d43a 	srai	r3,r4,16
   46e4c:	213fffcc 	andi	r4,r4,65535
   46e50:	29cbc83a 	sub	r5,r5,r7
   46e54:	28c7883a 	add	r3,r5,r3
   46e58:	180a943a 	slli	r5,r3,16
   46e5c:	8c400104 	addi	r17,r17,4
   46e60:	84000104 	addi	r16,r16,4
   46e64:	2908b03a 	or	r4,r5,r4
   46e68:	59000015 	stw	r4,0(r11)
   46e6c:	1807d43a 	srai	r3,r3,16
   46e70:	3015883a 	mov	r10,r6
   46e74:	3017883a 	mov	r11,r6
   46e78:	8b3fea36 	bltu	r17,r12,46e24 <__alt_data_end+0xfffd4e24>
   46e7c:	8200162e 	bgeu	r16,r8,46ed8 <__mdiff+0x17c>
   46e80:	8017883a 	mov	r11,r16
   46e84:	59400017 	ldw	r5,0(r11)
   46e88:	31800104 	addi	r6,r6,4
   46e8c:	5ac00104 	addi	r11,r11,4
   46e90:	293fffcc 	andi	r4,r5,65535
   46e94:	20c7883a 	add	r3,r4,r3
   46e98:	280ed43a 	srli	r7,r5,16
   46e9c:	180bd43a 	srai	r5,r3,16
   46ea0:	193fffcc 	andi	r4,r3,65535
   46ea4:	3947883a 	add	r3,r7,r5
   46ea8:	180a943a 	slli	r5,r3,16
   46eac:	1807d43a 	srai	r3,r3,16
   46eb0:	2908b03a 	or	r4,r5,r4
   46eb4:	313fff15 	stw	r4,-4(r6)
   46eb8:	5a3ff236 	bltu	r11,r8,46e84 <__alt_data_end+0xfffd4e84>
   46ebc:	0406303a 	nor	r3,zero,r16
   46ec0:	1a07883a 	add	r3,r3,r8
   46ec4:	1806d0ba 	srli	r3,r3,2
   46ec8:	18c00044 	addi	r3,r3,1
   46ecc:	18c7883a 	add	r3,r3,r3
   46ed0:	18c7883a 	add	r3,r3,r3
   46ed4:	50d5883a 	add	r10,r10,r3
   46ed8:	50ffff04 	addi	r3,r10,-4
   46edc:	2000041e 	bne	r4,zero,46ef0 <__mdiff+0x194>
   46ee0:	18ffff04 	addi	r3,r3,-4
   46ee4:	19000017 	ldw	r4,0(r3)
   46ee8:	4a7fffc4 	addi	r9,r9,-1
   46eec:	203ffc26 	beq	r4,zero,46ee0 <__alt_data_end+0xfffd4ee0>
   46ef0:	12400415 	stw	r9,16(r2)
   46ef4:	dfc00517 	ldw	ra,20(sp)
   46ef8:	dd000417 	ldw	r20,16(sp)
   46efc:	dcc00317 	ldw	r19,12(sp)
   46f00:	dc800217 	ldw	r18,8(sp)
   46f04:	dc400117 	ldw	r17,4(sp)
   46f08:	dc000017 	ldw	r16,0(sp)
   46f0c:	dec00604 	addi	sp,sp,24
   46f10:	f800283a 	ret
   46f14:	000b883a 	mov	r5,zero
   46f18:	00463780 	call	46378 <_Balloc>
   46f1c:	00c00044 	movi	r3,1
   46f20:	10c00415 	stw	r3,16(r2)
   46f24:	10000515 	stw	zero,20(r2)
   46f28:	003ff206 	br	46ef4 <__alt_data_end+0xfffd4ef4>
   46f2c:	8023883a 	mov	r17,r16
   46f30:	0029883a 	mov	r20,zero
   46f34:	4021883a 	mov	r16,r8
   46f38:	003fad06 	br	46df0 <__alt_data_end+0xfffd4df0>
   46f3c:	9005883a 	mov	r2,r18
   46f40:	94400504 	addi	r17,r18,20
   46f44:	9c000504 	addi	r16,r19,20
   46f48:	9825883a 	mov	r18,r19
   46f4c:	05000044 	movi	r20,1
   46f50:	1027883a 	mov	r19,r2
   46f54:	003fa606 	br	46df0 <__alt_data_end+0xfffd4df0>

00046f58 <__ulp>:
   46f58:	295ffc2c 	andhi	r5,r5,32752
   46f5c:	00bf3034 	movhi	r2,64704
   46f60:	2887883a 	add	r3,r5,r2
   46f64:	00c0020e 	bge	zero,r3,46f70 <__ulp+0x18>
   46f68:	0005883a 	mov	r2,zero
   46f6c:	f800283a 	ret
   46f70:	00c7c83a 	sub	r3,zero,r3
   46f74:	1807d53a 	srai	r3,r3,20
   46f78:	008004c4 	movi	r2,19
   46f7c:	10c00b0e 	bge	r2,r3,46fac <__ulp+0x54>
   46f80:	18bffb04 	addi	r2,r3,-20
   46f84:	01000784 	movi	r4,30
   46f88:	0007883a 	mov	r3,zero
   46f8c:	20800516 	blt	r4,r2,46fa4 <__ulp+0x4c>
   46f90:	010007c4 	movi	r4,31
   46f94:	2089c83a 	sub	r4,r4,r2
   46f98:	00800044 	movi	r2,1
   46f9c:	1104983a 	sll	r2,r2,r4
   46fa0:	f800283a 	ret
   46fa4:	00800044 	movi	r2,1
   46fa8:	f800283a 	ret
   46fac:	01400234 	movhi	r5,8
   46fb0:	28c7d83a 	sra	r3,r5,r3
   46fb4:	0005883a 	mov	r2,zero
   46fb8:	f800283a 	ret

00046fbc <__b2d>:
   46fbc:	defffa04 	addi	sp,sp,-24
   46fc0:	dc000015 	stw	r16,0(sp)
   46fc4:	24000417 	ldw	r16,16(r4)
   46fc8:	dc400115 	stw	r17,4(sp)
   46fcc:	24400504 	addi	r17,r4,20
   46fd0:	8421883a 	add	r16,r16,r16
   46fd4:	8421883a 	add	r16,r16,r16
   46fd8:	8c21883a 	add	r16,r17,r16
   46fdc:	dc800215 	stw	r18,8(sp)
   46fe0:	84bfff17 	ldw	r18,-4(r16)
   46fe4:	dd000415 	stw	r20,16(sp)
   46fe8:	dcc00315 	stw	r19,12(sp)
   46fec:	9009883a 	mov	r4,r18
   46ff0:	2829883a 	mov	r20,r5
   46ff4:	dfc00515 	stw	ra,20(sp)
   46ff8:	00466940 	call	46694 <__hi0bits>
   46ffc:	00c00804 	movi	r3,32
   47000:	1889c83a 	sub	r4,r3,r2
   47004:	a1000015 	stw	r4,0(r20)
   47008:	01000284 	movi	r4,10
   4700c:	84ffff04 	addi	r19,r16,-4
   47010:	20801216 	blt	r4,r2,4705c <__b2d+0xa0>
   47014:	018002c4 	movi	r6,11
   47018:	308dc83a 	sub	r6,r6,r2
   4701c:	9186d83a 	srl	r3,r18,r6
   47020:	18cffc34 	orhi	r3,r3,16368
   47024:	8cc0212e 	bgeu	r17,r19,470ac <__b2d+0xf0>
   47028:	813ffe17 	ldw	r4,-8(r16)
   4702c:	218cd83a 	srl	r6,r4,r6
   47030:	10800544 	addi	r2,r2,21
   47034:	9084983a 	sll	r2,r18,r2
   47038:	1184b03a 	or	r2,r2,r6
   4703c:	dfc00517 	ldw	ra,20(sp)
   47040:	dd000417 	ldw	r20,16(sp)
   47044:	dcc00317 	ldw	r19,12(sp)
   47048:	dc800217 	ldw	r18,8(sp)
   4704c:	dc400117 	ldw	r17,4(sp)
   47050:	dc000017 	ldw	r16,0(sp)
   47054:	dec00604 	addi	sp,sp,24
   47058:	f800283a 	ret
   4705c:	8cc00f2e 	bgeu	r17,r19,4709c <__b2d+0xe0>
   47060:	117ffd44 	addi	r5,r2,-11
   47064:	80bffe17 	ldw	r2,-8(r16)
   47068:	28000e26 	beq	r5,zero,470a4 <__b2d+0xe8>
   4706c:	1949c83a 	sub	r4,r3,r5
   47070:	9164983a 	sll	r18,r18,r5
   47074:	1106d83a 	srl	r3,r2,r4
   47078:	81bffe04 	addi	r6,r16,-8
   4707c:	948ffc34 	orhi	r18,r18,16368
   47080:	90c6b03a 	or	r3,r18,r3
   47084:	89800e2e 	bgeu	r17,r6,470c0 <__b2d+0x104>
   47088:	81bffd17 	ldw	r6,-12(r16)
   4708c:	1144983a 	sll	r2,r2,r5
   47090:	310ad83a 	srl	r5,r6,r4
   47094:	2884b03a 	or	r2,r5,r2
   47098:	003fe806 	br	4703c <__alt_data_end+0xfffd503c>
   4709c:	10bffd44 	addi	r2,r2,-11
   470a0:	1000041e 	bne	r2,zero,470b4 <__b2d+0xf8>
   470a4:	90cffc34 	orhi	r3,r18,16368
   470a8:	003fe406 	br	4703c <__alt_data_end+0xfffd503c>
   470ac:	000d883a 	mov	r6,zero
   470b0:	003fdf06 	br	47030 <__alt_data_end+0xfffd5030>
   470b4:	90a4983a 	sll	r18,r18,r2
   470b8:	0005883a 	mov	r2,zero
   470bc:	003ff906 	br	470a4 <__alt_data_end+0xfffd50a4>
   470c0:	1144983a 	sll	r2,r2,r5
   470c4:	003fdd06 	br	4703c <__alt_data_end+0xfffd503c>

000470c8 <__d2b>:
   470c8:	defff804 	addi	sp,sp,-32
   470cc:	dc000215 	stw	r16,8(sp)
   470d0:	3021883a 	mov	r16,r6
   470d4:	dc400315 	stw	r17,12(sp)
   470d8:	8022907a 	slli	r17,r16,1
   470dc:	dd000615 	stw	r20,24(sp)
   470e0:	2829883a 	mov	r20,r5
   470e4:	01400044 	movi	r5,1
   470e8:	dcc00515 	stw	r19,20(sp)
   470ec:	dc800415 	stw	r18,16(sp)
   470f0:	dfc00715 	stw	ra,28(sp)
   470f4:	3825883a 	mov	r18,r7
   470f8:	8822d57a 	srli	r17,r17,21
   470fc:	00463780 	call	46378 <_Balloc>
   47100:	1027883a 	mov	r19,r2
   47104:	00800434 	movhi	r2,16
   47108:	10bfffc4 	addi	r2,r2,-1
   4710c:	808c703a 	and	r6,r16,r2
   47110:	88000126 	beq	r17,zero,47118 <__d2b+0x50>
   47114:	31800434 	orhi	r6,r6,16
   47118:	d9800015 	stw	r6,0(sp)
   4711c:	a0002426 	beq	r20,zero,471b0 <__d2b+0xe8>
   47120:	d9000104 	addi	r4,sp,4
   47124:	dd000115 	stw	r20,4(sp)
   47128:	00466fc0 	call	466fc <__lo0bits>
   4712c:	d8c00017 	ldw	r3,0(sp)
   47130:	10002f1e 	bne	r2,zero,471f0 <__d2b+0x128>
   47134:	d9000117 	ldw	r4,4(sp)
   47138:	99000515 	stw	r4,20(r19)
   4713c:	1821003a 	cmpeq	r16,r3,zero
   47140:	01000084 	movi	r4,2
   47144:	2421c83a 	sub	r16,r4,r16
   47148:	98c00615 	stw	r3,24(r19)
   4714c:	9c000415 	stw	r16,16(r19)
   47150:	88001f1e 	bne	r17,zero,471d0 <__d2b+0x108>
   47154:	10bef384 	addi	r2,r2,-1074
   47158:	90800015 	stw	r2,0(r18)
   4715c:	00900034 	movhi	r2,16384
   47160:	10bfffc4 	addi	r2,r2,-1
   47164:	8085883a 	add	r2,r16,r2
   47168:	1085883a 	add	r2,r2,r2
   4716c:	1085883a 	add	r2,r2,r2
   47170:	9885883a 	add	r2,r19,r2
   47174:	11000517 	ldw	r4,20(r2)
   47178:	8020917a 	slli	r16,r16,5
   4717c:	00466940 	call	46694 <__hi0bits>
   47180:	d8c00817 	ldw	r3,32(sp)
   47184:	8085c83a 	sub	r2,r16,r2
   47188:	18800015 	stw	r2,0(r3)
   4718c:	9805883a 	mov	r2,r19
   47190:	dfc00717 	ldw	ra,28(sp)
   47194:	dd000617 	ldw	r20,24(sp)
   47198:	dcc00517 	ldw	r19,20(sp)
   4719c:	dc800417 	ldw	r18,16(sp)
   471a0:	dc400317 	ldw	r17,12(sp)
   471a4:	dc000217 	ldw	r16,8(sp)
   471a8:	dec00804 	addi	sp,sp,32
   471ac:	f800283a 	ret
   471b0:	d809883a 	mov	r4,sp
   471b4:	00466fc0 	call	466fc <__lo0bits>
   471b8:	d8c00017 	ldw	r3,0(sp)
   471bc:	04000044 	movi	r16,1
   471c0:	9c000415 	stw	r16,16(r19)
   471c4:	98c00515 	stw	r3,20(r19)
   471c8:	10800804 	addi	r2,r2,32
   471cc:	883fe126 	beq	r17,zero,47154 <__alt_data_end+0xfffd5154>
   471d0:	00c00d44 	movi	r3,53
   471d4:	8c7ef344 	addi	r17,r17,-1075
   471d8:	88a3883a 	add	r17,r17,r2
   471dc:	1885c83a 	sub	r2,r3,r2
   471e0:	d8c00817 	ldw	r3,32(sp)
   471e4:	94400015 	stw	r17,0(r18)
   471e8:	18800015 	stw	r2,0(r3)
   471ec:	003fe706 	br	4718c <__alt_data_end+0xfffd518c>
   471f0:	01000804 	movi	r4,32
   471f4:	2089c83a 	sub	r4,r4,r2
   471f8:	1908983a 	sll	r4,r3,r4
   471fc:	d9400117 	ldw	r5,4(sp)
   47200:	1886d83a 	srl	r3,r3,r2
   47204:	2148b03a 	or	r4,r4,r5
   47208:	99000515 	stw	r4,20(r19)
   4720c:	d8c00015 	stw	r3,0(sp)
   47210:	003fca06 	br	4713c <__alt_data_end+0xfffd513c>

00047214 <__ratio>:
   47214:	defff904 	addi	sp,sp,-28
   47218:	dc400315 	stw	r17,12(sp)
   4721c:	2823883a 	mov	r17,r5
   47220:	d9400104 	addi	r5,sp,4
   47224:	dfc00615 	stw	ra,24(sp)
   47228:	dcc00515 	stw	r19,20(sp)
   4722c:	dc800415 	stw	r18,16(sp)
   47230:	2027883a 	mov	r19,r4
   47234:	dc000215 	stw	r16,8(sp)
   47238:	0046fbc0 	call	46fbc <__b2d>
   4723c:	d80b883a 	mov	r5,sp
   47240:	8809883a 	mov	r4,r17
   47244:	1025883a 	mov	r18,r2
   47248:	1821883a 	mov	r16,r3
   4724c:	0046fbc0 	call	46fbc <__b2d>
   47250:	8a000417 	ldw	r8,16(r17)
   47254:	99000417 	ldw	r4,16(r19)
   47258:	d9400117 	ldw	r5,4(sp)
   4725c:	2209c83a 	sub	r4,r4,r8
   47260:	2010917a 	slli	r8,r4,5
   47264:	d9000017 	ldw	r4,0(sp)
   47268:	2909c83a 	sub	r4,r5,r4
   4726c:	4109883a 	add	r4,r8,r4
   47270:	01000e0e 	bge	zero,r4,472ac <__ratio+0x98>
   47274:	2008953a 	slli	r4,r4,20
   47278:	2421883a 	add	r16,r4,r16
   4727c:	100d883a 	mov	r6,r2
   47280:	180f883a 	mov	r7,r3
   47284:	9009883a 	mov	r4,r18
   47288:	800b883a 	mov	r5,r16
   4728c:	004b3000 	call	4b300 <__divdf3>
   47290:	dfc00617 	ldw	ra,24(sp)
   47294:	dcc00517 	ldw	r19,20(sp)
   47298:	dc800417 	ldw	r18,16(sp)
   4729c:	dc400317 	ldw	r17,12(sp)
   472a0:	dc000217 	ldw	r16,8(sp)
   472a4:	dec00704 	addi	sp,sp,28
   472a8:	f800283a 	ret
   472ac:	2008953a 	slli	r4,r4,20
   472b0:	1907c83a 	sub	r3,r3,r4
   472b4:	003ff106 	br	4727c <__alt_data_end+0xfffd527c>

000472b8 <_mprec_log10>:
   472b8:	defffe04 	addi	sp,sp,-8
   472bc:	dc000015 	stw	r16,0(sp)
   472c0:	dfc00115 	stw	ra,4(sp)
   472c4:	008005c4 	movi	r2,23
   472c8:	2021883a 	mov	r16,r4
   472cc:	11000d0e 	bge	r2,r4,47304 <_mprec_log10+0x4c>
   472d0:	0005883a 	mov	r2,zero
   472d4:	00cffc34 	movhi	r3,16368
   472d8:	843fffc4 	addi	r16,r16,-1
   472dc:	000d883a 	mov	r6,zero
   472e0:	01d00934 	movhi	r7,16420
   472e4:	1009883a 	mov	r4,r2
   472e8:	180b883a 	mov	r5,r3
   472ec:	004bf280 	call	4bf28 <__muldf3>
   472f0:	803ff91e 	bne	r16,zero,472d8 <__alt_data_end+0xfffd52d8>
   472f4:	dfc00117 	ldw	ra,4(sp)
   472f8:	dc000017 	ldw	r16,0(sp)
   472fc:	dec00204 	addi	sp,sp,8
   47300:	f800283a 	ret
   47304:	202090fa 	slli	r16,r4,3
   47308:	00800174 	movhi	r2,5
   4730c:	10bf0d04 	addi	r2,r2,-972
   47310:	1421883a 	add	r16,r2,r16
   47314:	80800017 	ldw	r2,0(r16)
   47318:	80c00117 	ldw	r3,4(r16)
   4731c:	dfc00117 	ldw	ra,4(sp)
   47320:	dc000017 	ldw	r16,0(sp)
   47324:	dec00204 	addi	sp,sp,8
   47328:	f800283a 	ret

0004732c <__copybits>:
   4732c:	297fffc4 	addi	r5,r5,-1
   47330:	280fd17a 	srai	r7,r5,5
   47334:	30c00417 	ldw	r3,16(r6)
   47338:	30800504 	addi	r2,r6,20
   4733c:	39c00044 	addi	r7,r7,1
   47340:	18c7883a 	add	r3,r3,r3
   47344:	39cf883a 	add	r7,r7,r7
   47348:	18c7883a 	add	r3,r3,r3
   4734c:	39cf883a 	add	r7,r7,r7
   47350:	10c7883a 	add	r3,r2,r3
   47354:	21cf883a 	add	r7,r4,r7
   47358:	10c00d2e 	bgeu	r2,r3,47390 <__copybits+0x64>
   4735c:	200b883a 	mov	r5,r4
   47360:	12000017 	ldw	r8,0(r2)
   47364:	29400104 	addi	r5,r5,4
   47368:	10800104 	addi	r2,r2,4
   4736c:	2a3fff15 	stw	r8,-4(r5)
   47370:	10fffb36 	bltu	r2,r3,47360 <__alt_data_end+0xfffd5360>
   47374:	1985c83a 	sub	r2,r3,r6
   47378:	10bffac4 	addi	r2,r2,-21
   4737c:	1004d0ba 	srli	r2,r2,2
   47380:	10800044 	addi	r2,r2,1
   47384:	1085883a 	add	r2,r2,r2
   47388:	1085883a 	add	r2,r2,r2
   4738c:	2089883a 	add	r4,r4,r2
   47390:	21c0032e 	bgeu	r4,r7,473a0 <__copybits+0x74>
   47394:	20000015 	stw	zero,0(r4)
   47398:	21000104 	addi	r4,r4,4
   4739c:	21fffd36 	bltu	r4,r7,47394 <__alt_data_end+0xfffd5394>
   473a0:	f800283a 	ret

000473a4 <__any_on>:
   473a4:	20c00417 	ldw	r3,16(r4)
   473a8:	2805d17a 	srai	r2,r5,5
   473ac:	21000504 	addi	r4,r4,20
   473b0:	18800d0e 	bge	r3,r2,473e8 <__any_on+0x44>
   473b4:	18c7883a 	add	r3,r3,r3
   473b8:	18c7883a 	add	r3,r3,r3
   473bc:	20c7883a 	add	r3,r4,r3
   473c0:	20c0192e 	bgeu	r4,r3,47428 <__any_on+0x84>
   473c4:	18bfff17 	ldw	r2,-4(r3)
   473c8:	18ffff04 	addi	r3,r3,-4
   473cc:	1000041e 	bne	r2,zero,473e0 <__any_on+0x3c>
   473d0:	20c0142e 	bgeu	r4,r3,47424 <__any_on+0x80>
   473d4:	18ffff04 	addi	r3,r3,-4
   473d8:	19400017 	ldw	r5,0(r3)
   473dc:	283ffc26 	beq	r5,zero,473d0 <__alt_data_end+0xfffd53d0>
   473e0:	00800044 	movi	r2,1
   473e4:	f800283a 	ret
   473e8:	10c00a0e 	bge	r2,r3,47414 <__any_on+0x70>
   473ec:	1085883a 	add	r2,r2,r2
   473f0:	1085883a 	add	r2,r2,r2
   473f4:	294007cc 	andi	r5,r5,31
   473f8:	2087883a 	add	r3,r4,r2
   473fc:	283ff026 	beq	r5,zero,473c0 <__alt_data_end+0xfffd53c0>
   47400:	19800017 	ldw	r6,0(r3)
   47404:	3144d83a 	srl	r2,r6,r5
   47408:	114a983a 	sll	r5,r2,r5
   4740c:	317ff41e 	bne	r6,r5,473e0 <__alt_data_end+0xfffd53e0>
   47410:	003feb06 	br	473c0 <__alt_data_end+0xfffd53c0>
   47414:	1085883a 	add	r2,r2,r2
   47418:	1085883a 	add	r2,r2,r2
   4741c:	2087883a 	add	r3,r4,r2
   47420:	003fe706 	br	473c0 <__alt_data_end+0xfffd53c0>
   47424:	f800283a 	ret
   47428:	0005883a 	mov	r2,zero
   4742c:	f800283a 	ret

00047430 <_realloc_r>:
   47430:	defff604 	addi	sp,sp,-40
   47434:	dc800215 	stw	r18,8(sp)
   47438:	dfc00915 	stw	ra,36(sp)
   4743c:	df000815 	stw	fp,32(sp)
   47440:	ddc00715 	stw	r23,28(sp)
   47444:	dd800615 	stw	r22,24(sp)
   47448:	dd400515 	stw	r21,20(sp)
   4744c:	dd000415 	stw	r20,16(sp)
   47450:	dcc00315 	stw	r19,12(sp)
   47454:	dc400115 	stw	r17,4(sp)
   47458:	dc000015 	stw	r16,0(sp)
   4745c:	3025883a 	mov	r18,r6
   47460:	2800b726 	beq	r5,zero,47740 <_realloc_r+0x310>
   47464:	282b883a 	mov	r21,r5
   47468:	2029883a 	mov	r20,r4
   4746c:	004db340 	call	4db34 <__malloc_lock>
   47470:	a8bfff17 	ldw	r2,-4(r21)
   47474:	043fff04 	movi	r16,-4
   47478:	90c002c4 	addi	r3,r18,11
   4747c:	01000584 	movi	r4,22
   47480:	acfffe04 	addi	r19,r21,-8
   47484:	1420703a 	and	r16,r2,r16
   47488:	20c0332e 	bgeu	r4,r3,47558 <_realloc_r+0x128>
   4748c:	047ffe04 	movi	r17,-8
   47490:	1c62703a 	and	r17,r3,r17
   47494:	8807883a 	mov	r3,r17
   47498:	88005816 	blt	r17,zero,475fc <_realloc_r+0x1cc>
   4749c:	8c805736 	bltu	r17,r18,475fc <_realloc_r+0x1cc>
   474a0:	80c0300e 	bge	r16,r3,47564 <_realloc_r+0x134>
   474a4:	07000174 	movhi	fp,5
   474a8:	e700b704 	addi	fp,fp,732
   474ac:	e1c00217 	ldw	r7,8(fp)
   474b0:	9c09883a 	add	r4,r19,r16
   474b4:	22000117 	ldw	r8,4(r4)
   474b8:	21c06326 	beq	r4,r7,47648 <_realloc_r+0x218>
   474bc:	017fff84 	movi	r5,-2
   474c0:	414a703a 	and	r5,r8,r5
   474c4:	214b883a 	add	r5,r4,r5
   474c8:	29800117 	ldw	r6,4(r5)
   474cc:	3180004c 	andi	r6,r6,1
   474d0:	30003f26 	beq	r6,zero,475d0 <_realloc_r+0x1a0>
   474d4:	1080004c 	andi	r2,r2,1
   474d8:	10008326 	beq	r2,zero,476e8 <_realloc_r+0x2b8>
   474dc:	900b883a 	mov	r5,r18
   474e0:	a009883a 	mov	r4,r20
   474e4:	00456bc0 	call	456bc <_malloc_r>
   474e8:	1025883a 	mov	r18,r2
   474ec:	10011e26 	beq	r2,zero,47968 <_realloc_r+0x538>
   474f0:	a93fff17 	ldw	r4,-4(r21)
   474f4:	10fffe04 	addi	r3,r2,-8
   474f8:	00bfff84 	movi	r2,-2
   474fc:	2084703a 	and	r2,r4,r2
   47500:	9885883a 	add	r2,r19,r2
   47504:	1880ee26 	beq	r3,r2,478c0 <_realloc_r+0x490>
   47508:	81bfff04 	addi	r6,r16,-4
   4750c:	00800904 	movi	r2,36
   47510:	1180b836 	bltu	r2,r6,477f4 <_realloc_r+0x3c4>
   47514:	00c004c4 	movi	r3,19
   47518:	19809636 	bltu	r3,r6,47774 <_realloc_r+0x344>
   4751c:	9005883a 	mov	r2,r18
   47520:	a807883a 	mov	r3,r21
   47524:	19000017 	ldw	r4,0(r3)
   47528:	11000015 	stw	r4,0(r2)
   4752c:	19000117 	ldw	r4,4(r3)
   47530:	11000115 	stw	r4,4(r2)
   47534:	18c00217 	ldw	r3,8(r3)
   47538:	10c00215 	stw	r3,8(r2)
   4753c:	a80b883a 	mov	r5,r21
   47540:	a009883a 	mov	r4,r20
   47544:	0044ac40 	call	44ac4 <_free_r>
   47548:	a009883a 	mov	r4,r20
   4754c:	004db580 	call	4db58 <__malloc_unlock>
   47550:	9005883a 	mov	r2,r18
   47554:	00001206 	br	475a0 <_realloc_r+0x170>
   47558:	00c00404 	movi	r3,16
   4755c:	1823883a 	mov	r17,r3
   47560:	003fce06 	br	4749c <__alt_data_end+0xfffd549c>
   47564:	a825883a 	mov	r18,r21
   47568:	8445c83a 	sub	r2,r16,r17
   4756c:	00c003c4 	movi	r3,15
   47570:	18802636 	bltu	r3,r2,4760c <_realloc_r+0x1dc>
   47574:	99800117 	ldw	r6,4(r19)
   47578:	9c07883a 	add	r3,r19,r16
   4757c:	3180004c 	andi	r6,r6,1
   47580:	3420b03a 	or	r16,r6,r16
   47584:	9c000115 	stw	r16,4(r19)
   47588:	18800117 	ldw	r2,4(r3)
   4758c:	10800054 	ori	r2,r2,1
   47590:	18800115 	stw	r2,4(r3)
   47594:	a009883a 	mov	r4,r20
   47598:	004db580 	call	4db58 <__malloc_unlock>
   4759c:	9005883a 	mov	r2,r18
   475a0:	dfc00917 	ldw	ra,36(sp)
   475a4:	df000817 	ldw	fp,32(sp)
   475a8:	ddc00717 	ldw	r23,28(sp)
   475ac:	dd800617 	ldw	r22,24(sp)
   475b0:	dd400517 	ldw	r21,20(sp)
   475b4:	dd000417 	ldw	r20,16(sp)
   475b8:	dcc00317 	ldw	r19,12(sp)
   475bc:	dc800217 	ldw	r18,8(sp)
   475c0:	dc400117 	ldw	r17,4(sp)
   475c4:	dc000017 	ldw	r16,0(sp)
   475c8:	dec00a04 	addi	sp,sp,40
   475cc:	f800283a 	ret
   475d0:	017fff04 	movi	r5,-4
   475d4:	414a703a 	and	r5,r8,r5
   475d8:	814d883a 	add	r6,r16,r5
   475dc:	30c01f16 	blt	r6,r3,4765c <_realloc_r+0x22c>
   475e0:	20800317 	ldw	r2,12(r4)
   475e4:	20c00217 	ldw	r3,8(r4)
   475e8:	a825883a 	mov	r18,r21
   475ec:	3021883a 	mov	r16,r6
   475f0:	18800315 	stw	r2,12(r3)
   475f4:	10c00215 	stw	r3,8(r2)
   475f8:	003fdb06 	br	47568 <__alt_data_end+0xfffd5568>
   475fc:	00800304 	movi	r2,12
   47600:	a0800015 	stw	r2,0(r20)
   47604:	0005883a 	mov	r2,zero
   47608:	003fe506 	br	475a0 <__alt_data_end+0xfffd55a0>
   4760c:	98c00117 	ldw	r3,4(r19)
   47610:	9c4b883a 	add	r5,r19,r17
   47614:	11000054 	ori	r4,r2,1
   47618:	18c0004c 	andi	r3,r3,1
   4761c:	1c62b03a 	or	r17,r3,r17
   47620:	9c400115 	stw	r17,4(r19)
   47624:	29000115 	stw	r4,4(r5)
   47628:	2885883a 	add	r2,r5,r2
   4762c:	10c00117 	ldw	r3,4(r2)
   47630:	29400204 	addi	r5,r5,8
   47634:	a009883a 	mov	r4,r20
   47638:	18c00054 	ori	r3,r3,1
   4763c:	10c00115 	stw	r3,4(r2)
   47640:	0044ac40 	call	44ac4 <_free_r>
   47644:	003fd306 	br	47594 <__alt_data_end+0xfffd5594>
   47648:	017fff04 	movi	r5,-4
   4764c:	414a703a 	and	r5,r8,r5
   47650:	89800404 	addi	r6,r17,16
   47654:	8151883a 	add	r8,r16,r5
   47658:	4180590e 	bge	r8,r6,477c0 <_realloc_r+0x390>
   4765c:	1080004c 	andi	r2,r2,1
   47660:	103f9e1e 	bne	r2,zero,474dc <__alt_data_end+0xfffd54dc>
   47664:	adbffe17 	ldw	r22,-8(r21)
   47668:	00bfff04 	movi	r2,-4
   4766c:	9dadc83a 	sub	r22,r19,r22
   47670:	b1800117 	ldw	r6,4(r22)
   47674:	3084703a 	and	r2,r6,r2
   47678:	20002026 	beq	r4,zero,476fc <_realloc_r+0x2cc>
   4767c:	80af883a 	add	r23,r16,r2
   47680:	b96f883a 	add	r23,r23,r5
   47684:	21c05f26 	beq	r4,r7,47804 <_realloc_r+0x3d4>
   47688:	b8c01c16 	blt	r23,r3,476fc <_realloc_r+0x2cc>
   4768c:	20800317 	ldw	r2,12(r4)
   47690:	20c00217 	ldw	r3,8(r4)
   47694:	81bfff04 	addi	r6,r16,-4
   47698:	01000904 	movi	r4,36
   4769c:	18800315 	stw	r2,12(r3)
   476a0:	10c00215 	stw	r3,8(r2)
   476a4:	b0c00217 	ldw	r3,8(r22)
   476a8:	b0800317 	ldw	r2,12(r22)
   476ac:	b4800204 	addi	r18,r22,8
   476b0:	18800315 	stw	r2,12(r3)
   476b4:	10c00215 	stw	r3,8(r2)
   476b8:	21801b36 	bltu	r4,r6,47728 <_realloc_r+0x2f8>
   476bc:	008004c4 	movi	r2,19
   476c0:	1180352e 	bgeu	r2,r6,47798 <_realloc_r+0x368>
   476c4:	a8800017 	ldw	r2,0(r21)
   476c8:	b0800215 	stw	r2,8(r22)
   476cc:	a8800117 	ldw	r2,4(r21)
   476d0:	b0800315 	stw	r2,12(r22)
   476d4:	008006c4 	movi	r2,27
   476d8:	11807f36 	bltu	r2,r6,478d8 <_realloc_r+0x4a8>
   476dc:	b0800404 	addi	r2,r22,16
   476e0:	ad400204 	addi	r21,r21,8
   476e4:	00002d06 	br	4779c <_realloc_r+0x36c>
   476e8:	adbffe17 	ldw	r22,-8(r21)
   476ec:	00bfff04 	movi	r2,-4
   476f0:	9dadc83a 	sub	r22,r19,r22
   476f4:	b1000117 	ldw	r4,4(r22)
   476f8:	2084703a 	and	r2,r4,r2
   476fc:	b03f7726 	beq	r22,zero,474dc <__alt_data_end+0xfffd54dc>
   47700:	80af883a 	add	r23,r16,r2
   47704:	b8ff7516 	blt	r23,r3,474dc <__alt_data_end+0xfffd54dc>
   47708:	b0800317 	ldw	r2,12(r22)
   4770c:	b0c00217 	ldw	r3,8(r22)
   47710:	81bfff04 	addi	r6,r16,-4
   47714:	01000904 	movi	r4,36
   47718:	18800315 	stw	r2,12(r3)
   4771c:	10c00215 	stw	r3,8(r2)
   47720:	b4800204 	addi	r18,r22,8
   47724:	21bfe52e 	bgeu	r4,r6,476bc <__alt_data_end+0xfffd56bc>
   47728:	a80b883a 	mov	r5,r21
   4772c:	9009883a 	mov	r4,r18
   47730:	00460f40 	call	460f4 <memmove>
   47734:	b821883a 	mov	r16,r23
   47738:	b027883a 	mov	r19,r22
   4773c:	003f8a06 	br	47568 <__alt_data_end+0xfffd5568>
   47740:	300b883a 	mov	r5,r6
   47744:	dfc00917 	ldw	ra,36(sp)
   47748:	df000817 	ldw	fp,32(sp)
   4774c:	ddc00717 	ldw	r23,28(sp)
   47750:	dd800617 	ldw	r22,24(sp)
   47754:	dd400517 	ldw	r21,20(sp)
   47758:	dd000417 	ldw	r20,16(sp)
   4775c:	dcc00317 	ldw	r19,12(sp)
   47760:	dc800217 	ldw	r18,8(sp)
   47764:	dc400117 	ldw	r17,4(sp)
   47768:	dc000017 	ldw	r16,0(sp)
   4776c:	dec00a04 	addi	sp,sp,40
   47770:	00456bc1 	jmpi	456bc <_malloc_r>
   47774:	a8c00017 	ldw	r3,0(r21)
   47778:	90c00015 	stw	r3,0(r18)
   4777c:	a8c00117 	ldw	r3,4(r21)
   47780:	90c00115 	stw	r3,4(r18)
   47784:	00c006c4 	movi	r3,27
   47788:	19804536 	bltu	r3,r6,478a0 <_realloc_r+0x470>
   4778c:	90800204 	addi	r2,r18,8
   47790:	a8c00204 	addi	r3,r21,8
   47794:	003f6306 	br	47524 <__alt_data_end+0xfffd5524>
   47798:	9005883a 	mov	r2,r18
   4779c:	a8c00017 	ldw	r3,0(r21)
   477a0:	b821883a 	mov	r16,r23
   477a4:	b027883a 	mov	r19,r22
   477a8:	10c00015 	stw	r3,0(r2)
   477ac:	a8c00117 	ldw	r3,4(r21)
   477b0:	10c00115 	stw	r3,4(r2)
   477b4:	a8c00217 	ldw	r3,8(r21)
   477b8:	10c00215 	stw	r3,8(r2)
   477bc:	003f6a06 	br	47568 <__alt_data_end+0xfffd5568>
   477c0:	9c67883a 	add	r19,r19,r17
   477c4:	4445c83a 	sub	r2,r8,r17
   477c8:	e4c00215 	stw	r19,8(fp)
   477cc:	10800054 	ori	r2,r2,1
   477d0:	98800115 	stw	r2,4(r19)
   477d4:	a8bfff17 	ldw	r2,-4(r21)
   477d8:	a009883a 	mov	r4,r20
   477dc:	1080004c 	andi	r2,r2,1
   477e0:	1462b03a 	or	r17,r2,r17
   477e4:	ac7fff15 	stw	r17,-4(r21)
   477e8:	004db580 	call	4db58 <__malloc_unlock>
   477ec:	a805883a 	mov	r2,r21
   477f0:	003f6b06 	br	475a0 <__alt_data_end+0xfffd55a0>
   477f4:	a80b883a 	mov	r5,r21
   477f8:	9009883a 	mov	r4,r18
   477fc:	00460f40 	call	460f4 <memmove>
   47800:	003f4e06 	br	4753c <__alt_data_end+0xfffd553c>
   47804:	89000404 	addi	r4,r17,16
   47808:	b93fbc16 	blt	r23,r4,476fc <__alt_data_end+0xfffd56fc>
   4780c:	b0800317 	ldw	r2,12(r22)
   47810:	b0c00217 	ldw	r3,8(r22)
   47814:	81bfff04 	addi	r6,r16,-4
   47818:	01000904 	movi	r4,36
   4781c:	18800315 	stw	r2,12(r3)
   47820:	10c00215 	stw	r3,8(r2)
   47824:	b4800204 	addi	r18,r22,8
   47828:	21804336 	bltu	r4,r6,47938 <_realloc_r+0x508>
   4782c:	008004c4 	movi	r2,19
   47830:	11803f2e 	bgeu	r2,r6,47930 <_realloc_r+0x500>
   47834:	a8800017 	ldw	r2,0(r21)
   47838:	b0800215 	stw	r2,8(r22)
   4783c:	a8800117 	ldw	r2,4(r21)
   47840:	b0800315 	stw	r2,12(r22)
   47844:	008006c4 	movi	r2,27
   47848:	11803f36 	bltu	r2,r6,47948 <_realloc_r+0x518>
   4784c:	b0800404 	addi	r2,r22,16
   47850:	ad400204 	addi	r21,r21,8
   47854:	a8c00017 	ldw	r3,0(r21)
   47858:	10c00015 	stw	r3,0(r2)
   4785c:	a8c00117 	ldw	r3,4(r21)
   47860:	10c00115 	stw	r3,4(r2)
   47864:	a8c00217 	ldw	r3,8(r21)
   47868:	10c00215 	stw	r3,8(r2)
   4786c:	b447883a 	add	r3,r22,r17
   47870:	bc45c83a 	sub	r2,r23,r17
   47874:	e0c00215 	stw	r3,8(fp)
   47878:	10800054 	ori	r2,r2,1
   4787c:	18800115 	stw	r2,4(r3)
   47880:	b0800117 	ldw	r2,4(r22)
   47884:	a009883a 	mov	r4,r20
   47888:	1080004c 	andi	r2,r2,1
   4788c:	1462b03a 	or	r17,r2,r17
   47890:	b4400115 	stw	r17,4(r22)
   47894:	004db580 	call	4db58 <__malloc_unlock>
   47898:	9005883a 	mov	r2,r18
   4789c:	003f4006 	br	475a0 <__alt_data_end+0xfffd55a0>
   478a0:	a8c00217 	ldw	r3,8(r21)
   478a4:	90c00215 	stw	r3,8(r18)
   478a8:	a8c00317 	ldw	r3,12(r21)
   478ac:	90c00315 	stw	r3,12(r18)
   478b0:	30801126 	beq	r6,r2,478f8 <_realloc_r+0x4c8>
   478b4:	90800404 	addi	r2,r18,16
   478b8:	a8c00404 	addi	r3,r21,16
   478bc:	003f1906 	br	47524 <__alt_data_end+0xfffd5524>
   478c0:	90ffff17 	ldw	r3,-4(r18)
   478c4:	00bfff04 	movi	r2,-4
   478c8:	a825883a 	mov	r18,r21
   478cc:	1884703a 	and	r2,r3,r2
   478d0:	80a1883a 	add	r16,r16,r2
   478d4:	003f2406 	br	47568 <__alt_data_end+0xfffd5568>
   478d8:	a8800217 	ldw	r2,8(r21)
   478dc:	b0800415 	stw	r2,16(r22)
   478e0:	a8800317 	ldw	r2,12(r21)
   478e4:	b0800515 	stw	r2,20(r22)
   478e8:	31000a26 	beq	r6,r4,47914 <_realloc_r+0x4e4>
   478ec:	b0800604 	addi	r2,r22,24
   478f0:	ad400404 	addi	r21,r21,16
   478f4:	003fa906 	br	4779c <__alt_data_end+0xfffd579c>
   478f8:	a9000417 	ldw	r4,16(r21)
   478fc:	90800604 	addi	r2,r18,24
   47900:	a8c00604 	addi	r3,r21,24
   47904:	91000415 	stw	r4,16(r18)
   47908:	a9000517 	ldw	r4,20(r21)
   4790c:	91000515 	stw	r4,20(r18)
   47910:	003f0406 	br	47524 <__alt_data_end+0xfffd5524>
   47914:	a8c00417 	ldw	r3,16(r21)
   47918:	ad400604 	addi	r21,r21,24
   4791c:	b0800804 	addi	r2,r22,32
   47920:	b0c00615 	stw	r3,24(r22)
   47924:	a8ffff17 	ldw	r3,-4(r21)
   47928:	b0c00715 	stw	r3,28(r22)
   4792c:	003f9b06 	br	4779c <__alt_data_end+0xfffd579c>
   47930:	9005883a 	mov	r2,r18
   47934:	003fc706 	br	47854 <__alt_data_end+0xfffd5854>
   47938:	a80b883a 	mov	r5,r21
   4793c:	9009883a 	mov	r4,r18
   47940:	00460f40 	call	460f4 <memmove>
   47944:	003fc906 	br	4786c <__alt_data_end+0xfffd586c>
   47948:	a8800217 	ldw	r2,8(r21)
   4794c:	b0800415 	stw	r2,16(r22)
   47950:	a8800317 	ldw	r2,12(r21)
   47954:	b0800515 	stw	r2,20(r22)
   47958:	31000726 	beq	r6,r4,47978 <_realloc_r+0x548>
   4795c:	b0800604 	addi	r2,r22,24
   47960:	ad400404 	addi	r21,r21,16
   47964:	003fbb06 	br	47854 <__alt_data_end+0xfffd5854>
   47968:	a009883a 	mov	r4,r20
   4796c:	004db580 	call	4db58 <__malloc_unlock>
   47970:	0005883a 	mov	r2,zero
   47974:	003f0a06 	br	475a0 <__alt_data_end+0xfffd55a0>
   47978:	a8c00417 	ldw	r3,16(r21)
   4797c:	ad400604 	addi	r21,r21,24
   47980:	b0800804 	addi	r2,r22,32
   47984:	b0c00615 	stw	r3,24(r22)
   47988:	a8ffff17 	ldw	r3,-4(r21)
   4798c:	b0c00715 	stw	r3,28(r22)
   47990:	003fb006 	br	47854 <__alt_data_end+0xfffd5854>

00047994 <__fpclassifyd>:
   47994:	00a00034 	movhi	r2,32768
   47998:	10bfffc4 	addi	r2,r2,-1
   4799c:	2884703a 	and	r2,r5,r2
   479a0:	10000726 	beq	r2,zero,479c0 <__fpclassifyd+0x2c>
   479a4:	00fffc34 	movhi	r3,65520
   479a8:	019ff834 	movhi	r6,32736
   479ac:	28c7883a 	add	r3,r5,r3
   479b0:	31bfffc4 	addi	r6,r6,-1
   479b4:	30c00536 	bltu	r6,r3,479cc <__fpclassifyd+0x38>
   479b8:	00800104 	movi	r2,4
   479bc:	f800283a 	ret
   479c0:	2000021e 	bne	r4,zero,479cc <__fpclassifyd+0x38>
   479c4:	00800084 	movi	r2,2
   479c8:	f800283a 	ret
   479cc:	00dffc34 	movhi	r3,32752
   479d0:	019ff834 	movhi	r6,32736
   479d4:	28cb883a 	add	r5,r5,r3
   479d8:	31bfffc4 	addi	r6,r6,-1
   479dc:	317ff62e 	bgeu	r6,r5,479b8 <__alt_data_end+0xfffd59b8>
   479e0:	01400434 	movhi	r5,16
   479e4:	297fffc4 	addi	r5,r5,-1
   479e8:	28800236 	bltu	r5,r2,479f4 <__fpclassifyd+0x60>
   479ec:	008000c4 	movi	r2,3
   479f0:	f800283a 	ret
   479f4:	10c00226 	beq	r2,r3,47a00 <__fpclassifyd+0x6c>
   479f8:	0005883a 	mov	r2,zero
   479fc:	f800283a 	ret
   47a00:	2005003a 	cmpeq	r2,r4,zero
   47a04:	f800283a 	ret

00047a08 <_sbrk_r>:
   47a08:	defffd04 	addi	sp,sp,-12
   47a0c:	dc000015 	stw	r16,0(sp)
   47a10:	04000174 	movhi	r16,5
   47a14:	dc400115 	stw	r17,4(sp)
   47a18:	840d0e04 	addi	r16,r16,13368
   47a1c:	2023883a 	mov	r17,r4
   47a20:	2809883a 	mov	r4,r5
   47a24:	dfc00215 	stw	ra,8(sp)
   47a28:	80000015 	stw	zero,0(r16)
   47a2c:	004dd400 	call	4dd40 <sbrk>
   47a30:	00ffffc4 	movi	r3,-1
   47a34:	10c00526 	beq	r2,r3,47a4c <_sbrk_r+0x44>
   47a38:	dfc00217 	ldw	ra,8(sp)
   47a3c:	dc400117 	ldw	r17,4(sp)
   47a40:	dc000017 	ldw	r16,0(sp)
   47a44:	dec00304 	addi	sp,sp,12
   47a48:	f800283a 	ret
   47a4c:	80c00017 	ldw	r3,0(r16)
   47a50:	183ff926 	beq	r3,zero,47a38 <__alt_data_end+0xfffd5a38>
   47a54:	88c00015 	stw	r3,0(r17)
   47a58:	003ff706 	br	47a38 <__alt_data_end+0xfffd5a38>

00047a5c <__sread>:
   47a5c:	defffe04 	addi	sp,sp,-8
   47a60:	dc000015 	stw	r16,0(sp)
   47a64:	2821883a 	mov	r16,r5
   47a68:	2940038f 	ldh	r5,14(r5)
   47a6c:	dfc00115 	stw	ra,4(sp)
   47a70:	00499180 	call	49918 <_read_r>
   47a74:	10000716 	blt	r2,zero,47a94 <__sread+0x38>
   47a78:	80c01417 	ldw	r3,80(r16)
   47a7c:	1887883a 	add	r3,r3,r2
   47a80:	80c01415 	stw	r3,80(r16)
   47a84:	dfc00117 	ldw	ra,4(sp)
   47a88:	dc000017 	ldw	r16,0(sp)
   47a8c:	dec00204 	addi	sp,sp,8
   47a90:	f800283a 	ret
   47a94:	80c0030b 	ldhu	r3,12(r16)
   47a98:	18fbffcc 	andi	r3,r3,61439
   47a9c:	80c0030d 	sth	r3,12(r16)
   47aa0:	dfc00117 	ldw	ra,4(sp)
   47aa4:	dc000017 	ldw	r16,0(sp)
   47aa8:	dec00204 	addi	sp,sp,8
   47aac:	f800283a 	ret

00047ab0 <__seofread>:
   47ab0:	0005883a 	mov	r2,zero
   47ab4:	f800283a 	ret

00047ab8 <__swrite>:
   47ab8:	2880030b 	ldhu	r2,12(r5)
   47abc:	defffb04 	addi	sp,sp,-20
   47ac0:	dcc00315 	stw	r19,12(sp)
   47ac4:	dc800215 	stw	r18,8(sp)
   47ac8:	dc400115 	stw	r17,4(sp)
   47acc:	dc000015 	stw	r16,0(sp)
   47ad0:	dfc00415 	stw	ra,16(sp)
   47ad4:	10c0400c 	andi	r3,r2,256
   47ad8:	2821883a 	mov	r16,r5
   47adc:	2023883a 	mov	r17,r4
   47ae0:	3025883a 	mov	r18,r6
   47ae4:	3827883a 	mov	r19,r7
   47ae8:	18000526 	beq	r3,zero,47b00 <__swrite+0x48>
   47aec:	2940038f 	ldh	r5,14(r5)
   47af0:	01c00084 	movi	r7,2
   47af4:	000d883a 	mov	r6,zero
   47af8:	00498b80 	call	498b8 <_lseek_r>
   47afc:	8080030b 	ldhu	r2,12(r16)
   47b00:	8140038f 	ldh	r5,14(r16)
   47b04:	10bbffcc 	andi	r2,r2,61439
   47b08:	980f883a 	mov	r7,r19
   47b0c:	900d883a 	mov	r6,r18
   47b10:	8809883a 	mov	r4,r17
   47b14:	8080030d 	sth	r2,12(r16)
   47b18:	dfc00417 	ldw	ra,16(sp)
   47b1c:	dcc00317 	ldw	r19,12(sp)
   47b20:	dc800217 	ldw	r18,8(sp)
   47b24:	dc400117 	ldw	r17,4(sp)
   47b28:	dc000017 	ldw	r16,0(sp)
   47b2c:	dec00504 	addi	sp,sp,20
   47b30:	004936c1 	jmpi	4936c <_write_r>

00047b34 <__sseek>:
   47b34:	defffe04 	addi	sp,sp,-8
   47b38:	dc000015 	stw	r16,0(sp)
   47b3c:	2821883a 	mov	r16,r5
   47b40:	2940038f 	ldh	r5,14(r5)
   47b44:	dfc00115 	stw	ra,4(sp)
   47b48:	00498b80 	call	498b8 <_lseek_r>
   47b4c:	00ffffc4 	movi	r3,-1
   47b50:	10c00826 	beq	r2,r3,47b74 <__sseek+0x40>
   47b54:	80c0030b 	ldhu	r3,12(r16)
   47b58:	80801415 	stw	r2,80(r16)
   47b5c:	18c40014 	ori	r3,r3,4096
   47b60:	80c0030d 	sth	r3,12(r16)
   47b64:	dfc00117 	ldw	ra,4(sp)
   47b68:	dc000017 	ldw	r16,0(sp)
   47b6c:	dec00204 	addi	sp,sp,8
   47b70:	f800283a 	ret
   47b74:	80c0030b 	ldhu	r3,12(r16)
   47b78:	18fbffcc 	andi	r3,r3,61439
   47b7c:	80c0030d 	sth	r3,12(r16)
   47b80:	dfc00117 	ldw	ra,4(sp)
   47b84:	dc000017 	ldw	r16,0(sp)
   47b88:	dec00204 	addi	sp,sp,8
   47b8c:	f800283a 	ret

00047b90 <__sclose>:
   47b90:	2940038f 	ldh	r5,14(r5)
   47b94:	00493cc1 	jmpi	493cc <_close_r>

00047b98 <strcmp>:
   47b98:	2144b03a 	or	r2,r4,r5
   47b9c:	108000cc 	andi	r2,r2,3
   47ba0:	1000171e 	bne	r2,zero,47c00 <strcmp+0x68>
   47ba4:	20800017 	ldw	r2,0(r4)
   47ba8:	28c00017 	ldw	r3,0(r5)
   47bac:	10c0141e 	bne	r2,r3,47c00 <strcmp+0x68>
   47bb0:	027fbff4 	movhi	r9,65279
   47bb4:	4a7fbfc4 	addi	r9,r9,-257
   47bb8:	0086303a 	nor	r3,zero,r2
   47bbc:	02202074 	movhi	r8,32897
   47bc0:	1245883a 	add	r2,r2,r9
   47bc4:	42202004 	addi	r8,r8,-32640
   47bc8:	10c4703a 	and	r2,r2,r3
   47bcc:	1204703a 	and	r2,r2,r8
   47bd0:	10000226 	beq	r2,zero,47bdc <strcmp+0x44>
   47bd4:	00002306 	br	47c64 <strcmp+0xcc>
   47bd8:	1000221e 	bne	r2,zero,47c64 <strcmp+0xcc>
   47bdc:	21000104 	addi	r4,r4,4
   47be0:	20c00017 	ldw	r3,0(r4)
   47be4:	29400104 	addi	r5,r5,4
   47be8:	29800017 	ldw	r6,0(r5)
   47bec:	1a4f883a 	add	r7,r3,r9
   47bf0:	00c4303a 	nor	r2,zero,r3
   47bf4:	3884703a 	and	r2,r7,r2
   47bf8:	1204703a 	and	r2,r2,r8
   47bfc:	19bff626 	beq	r3,r6,47bd8 <__alt_data_end+0xfffd5bd8>
   47c00:	20800003 	ldbu	r2,0(r4)
   47c04:	10c03fcc 	andi	r3,r2,255
   47c08:	18c0201c 	xori	r3,r3,128
   47c0c:	18ffe004 	addi	r3,r3,-128
   47c10:	18000c26 	beq	r3,zero,47c44 <strcmp+0xac>
   47c14:	29800007 	ldb	r6,0(r5)
   47c18:	19800326 	beq	r3,r6,47c28 <strcmp+0x90>
   47c1c:	00001306 	br	47c6c <strcmp+0xd4>
   47c20:	29800007 	ldb	r6,0(r5)
   47c24:	11800b1e 	bne	r2,r6,47c54 <strcmp+0xbc>
   47c28:	21000044 	addi	r4,r4,1
   47c2c:	20c00003 	ldbu	r3,0(r4)
   47c30:	29400044 	addi	r5,r5,1
   47c34:	18803fcc 	andi	r2,r3,255
   47c38:	1080201c 	xori	r2,r2,128
   47c3c:	10bfe004 	addi	r2,r2,-128
   47c40:	103ff71e 	bne	r2,zero,47c20 <__alt_data_end+0xfffd5c20>
   47c44:	0007883a 	mov	r3,zero
   47c48:	28800003 	ldbu	r2,0(r5)
   47c4c:	1885c83a 	sub	r2,r3,r2
   47c50:	f800283a 	ret
   47c54:	28800003 	ldbu	r2,0(r5)
   47c58:	18c03fcc 	andi	r3,r3,255
   47c5c:	1885c83a 	sub	r2,r3,r2
   47c60:	f800283a 	ret
   47c64:	0005883a 	mov	r2,zero
   47c68:	f800283a 	ret
   47c6c:	10c03fcc 	andi	r3,r2,255
   47c70:	003ff506 	br	47c48 <__alt_data_end+0xfffd5c48>

00047c74 <__sprint_r.part.0>:
   47c74:	28801917 	ldw	r2,100(r5)
   47c78:	defff604 	addi	sp,sp,-40
   47c7c:	dd400515 	stw	r21,20(sp)
   47c80:	dfc00915 	stw	ra,36(sp)
   47c84:	df000815 	stw	fp,32(sp)
   47c88:	ddc00715 	stw	r23,28(sp)
   47c8c:	dd800615 	stw	r22,24(sp)
   47c90:	dd000415 	stw	r20,16(sp)
   47c94:	dcc00315 	stw	r19,12(sp)
   47c98:	dc800215 	stw	r18,8(sp)
   47c9c:	dc400115 	stw	r17,4(sp)
   47ca0:	dc000015 	stw	r16,0(sp)
   47ca4:	1088000c 	andi	r2,r2,8192
   47ca8:	302b883a 	mov	r21,r6
   47cac:	10002e26 	beq	r2,zero,47d68 <__sprint_r.part.0+0xf4>
   47cb0:	30800217 	ldw	r2,8(r6)
   47cb4:	35800017 	ldw	r22,0(r6)
   47cb8:	10002926 	beq	r2,zero,47d60 <__sprint_r.part.0+0xec>
   47cbc:	2827883a 	mov	r19,r5
   47cc0:	2029883a 	mov	r20,r4
   47cc4:	b5c00104 	addi	r23,r22,4
   47cc8:	04bfffc4 	movi	r18,-1
   47ccc:	bc400017 	ldw	r17,0(r23)
   47cd0:	b4000017 	ldw	r16,0(r22)
   47cd4:	0039883a 	mov	fp,zero
   47cd8:	8822d0ba 	srli	r17,r17,2
   47cdc:	8800031e 	bne	r17,zero,47cec <__sprint_r.part.0+0x78>
   47ce0:	00001806 	br	47d44 <__sprint_r.part.0+0xd0>
   47ce4:	84000104 	addi	r16,r16,4
   47ce8:	8f001526 	beq	r17,fp,47d40 <__sprint_r.part.0+0xcc>
   47cec:	81400017 	ldw	r5,0(r16)
   47cf0:	980d883a 	mov	r6,r19
   47cf4:	a009883a 	mov	r4,r20
   47cf8:	00497640 	call	49764 <_fputwc_r>
   47cfc:	e7000044 	addi	fp,fp,1
   47d00:	14bff81e 	bne	r2,r18,47ce4 <__alt_data_end+0xfffd5ce4>
   47d04:	9005883a 	mov	r2,r18
   47d08:	a8000215 	stw	zero,8(r21)
   47d0c:	a8000115 	stw	zero,4(r21)
   47d10:	dfc00917 	ldw	ra,36(sp)
   47d14:	df000817 	ldw	fp,32(sp)
   47d18:	ddc00717 	ldw	r23,28(sp)
   47d1c:	dd800617 	ldw	r22,24(sp)
   47d20:	dd400517 	ldw	r21,20(sp)
   47d24:	dd000417 	ldw	r20,16(sp)
   47d28:	dcc00317 	ldw	r19,12(sp)
   47d2c:	dc800217 	ldw	r18,8(sp)
   47d30:	dc400117 	ldw	r17,4(sp)
   47d34:	dc000017 	ldw	r16,0(sp)
   47d38:	dec00a04 	addi	sp,sp,40
   47d3c:	f800283a 	ret
   47d40:	a8800217 	ldw	r2,8(r21)
   47d44:	8c63883a 	add	r17,r17,r17
   47d48:	8c63883a 	add	r17,r17,r17
   47d4c:	1445c83a 	sub	r2,r2,r17
   47d50:	a8800215 	stw	r2,8(r21)
   47d54:	b5800204 	addi	r22,r22,8
   47d58:	bdc00204 	addi	r23,r23,8
   47d5c:	103fdb1e 	bne	r2,zero,47ccc <__alt_data_end+0xfffd5ccc>
   47d60:	0005883a 	mov	r2,zero
   47d64:	003fe806 	br	47d08 <__alt_data_end+0xfffd5d08>
   47d68:	0044dd40 	call	44dd4 <__sfvwrite_r>
   47d6c:	003fe606 	br	47d08 <__alt_data_end+0xfffd5d08>

00047d70 <__sprint_r>:
   47d70:	30c00217 	ldw	r3,8(r6)
   47d74:	18000126 	beq	r3,zero,47d7c <__sprint_r+0xc>
   47d78:	0047c741 	jmpi	47c74 <__sprint_r.part.0>
   47d7c:	30000115 	stw	zero,4(r6)
   47d80:	0005883a 	mov	r2,zero
   47d84:	f800283a 	ret

00047d88 <___vfiprintf_internal_r>:
   47d88:	deffca04 	addi	sp,sp,-216
   47d8c:	dd403115 	stw	r21,196(sp)
   47d90:	dfc03515 	stw	ra,212(sp)
   47d94:	df003415 	stw	fp,208(sp)
   47d98:	ddc03315 	stw	r23,204(sp)
   47d9c:	dd803215 	stw	r22,200(sp)
   47da0:	dd003015 	stw	r20,192(sp)
   47da4:	dcc02f15 	stw	r19,188(sp)
   47da8:	dc802e15 	stw	r18,184(sp)
   47dac:	dc402d15 	stw	r17,180(sp)
   47db0:	dc002c15 	stw	r16,176(sp)
   47db4:	d9002115 	stw	r4,132(sp)
   47db8:	d9402015 	stw	r5,128(sp)
   47dbc:	d9c02215 	stw	r7,136(sp)
   47dc0:	302b883a 	mov	r21,r6
   47dc4:	20000226 	beq	r4,zero,47dd0 <___vfiprintf_internal_r+0x48>
   47dc8:	20800e17 	ldw	r2,56(r4)
   47dcc:	1000cf26 	beq	r2,zero,4810c <___vfiprintf_internal_r+0x384>
   47dd0:	d8c02017 	ldw	r3,128(sp)
   47dd4:	1880030b 	ldhu	r2,12(r3)
   47dd8:	10c8000c 	andi	r3,r2,8192
   47ddc:	1800071e 	bne	r3,zero,47dfc <___vfiprintf_internal_r+0x74>
   47de0:	d9402017 	ldw	r5,128(sp)
   47de4:	00f7ffc4 	movi	r3,-8193
   47de8:	10880014 	ori	r2,r2,8192
   47dec:	29001917 	ldw	r4,100(r5)
   47df0:	2880030d 	sth	r2,12(r5)
   47df4:	20c6703a 	and	r3,r4,r3
   47df8:	28c01915 	stw	r3,100(r5)
   47dfc:	10c0020c 	andi	r3,r2,8
   47e00:	1800a526 	beq	r3,zero,48098 <___vfiprintf_internal_r+0x310>
   47e04:	d9002017 	ldw	r4,128(sp)
   47e08:	20c00417 	ldw	r3,16(r4)
   47e0c:	1800a226 	beq	r3,zero,48098 <___vfiprintf_internal_r+0x310>
   47e10:	1080068c 	andi	r2,r2,26
   47e14:	00c00284 	movi	r3,10
   47e18:	10c0a826 	beq	r2,r3,480bc <___vfiprintf_internal_r+0x334>
   47e1c:	d9001a04 	addi	r4,sp,104
   47e20:	d94019c4 	addi	r5,sp,103
   47e24:	04800174 	movhi	r18,5
   47e28:	2145c83a 	sub	r2,r4,r5
   47e2c:	94bf3f04 	addi	r18,r18,-772
   47e30:	d9001e15 	stw	r4,120(sp)
   47e34:	d9401f15 	stw	r5,124(sp)
   47e38:	dec01a15 	stw	sp,104(sp)
   47e3c:	d8001c15 	stw	zero,112(sp)
   47e40:	d8001b15 	stw	zero,108(sp)
   47e44:	d811883a 	mov	r8,sp
   47e48:	d8002615 	stw	zero,152(sp)
   47e4c:	d8002415 	stw	zero,144(sp)
   47e50:	d8802815 	stw	r2,160(sp)
   47e54:	a82d883a 	mov	r22,r21
   47e58:	b0800007 	ldb	r2,0(r22)
   47e5c:	10040d26 	beq	r2,zero,48e94 <___vfiprintf_internal_r+0x110c>
   47e60:	00c00944 	movi	r3,37
   47e64:	b029883a 	mov	r20,r22
   47e68:	10c0021e 	bne	r2,r3,47e74 <___vfiprintf_internal_r+0xec>
   47e6c:	00001606 	br	47ec8 <___vfiprintf_internal_r+0x140>
   47e70:	10c00326 	beq	r2,r3,47e80 <___vfiprintf_internal_r+0xf8>
   47e74:	a5000044 	addi	r20,r20,1
   47e78:	a0800007 	ldb	r2,0(r20)
   47e7c:	103ffc1e 	bne	r2,zero,47e70 <__alt_data_end+0xfffd5e70>
   47e80:	a5a1c83a 	sub	r16,r20,r22
   47e84:	80001026 	beq	r16,zero,47ec8 <___vfiprintf_internal_r+0x140>
   47e88:	d8c01c17 	ldw	r3,112(sp)
   47e8c:	d8801b17 	ldw	r2,108(sp)
   47e90:	45800015 	stw	r22,0(r8)
   47e94:	80c7883a 	add	r3,r16,r3
   47e98:	10800044 	addi	r2,r2,1
   47e9c:	44000115 	stw	r16,4(r8)
   47ea0:	d8c01c15 	stw	r3,112(sp)
   47ea4:	d8801b15 	stw	r2,108(sp)
   47ea8:	010001c4 	movi	r4,7
   47eac:	2080750e 	bge	r4,r2,48084 <___vfiprintf_internal_r+0x2fc>
   47eb0:	1803951e 	bne	r3,zero,48d08 <___vfiprintf_internal_r+0xf80>
   47eb4:	d8c02417 	ldw	r3,144(sp)
   47eb8:	d8001b15 	stw	zero,108(sp)
   47ebc:	d811883a 	mov	r8,sp
   47ec0:	1c07883a 	add	r3,r3,r16
   47ec4:	d8c02415 	stw	r3,144(sp)
   47ec8:	a0800007 	ldb	r2,0(r20)
   47ecc:	1002e026 	beq	r2,zero,48a50 <___vfiprintf_internal_r+0xcc8>
   47ed0:	a5800044 	addi	r22,r20,1
   47ed4:	a0c00047 	ldb	r3,1(r20)
   47ed8:	d8001d85 	stb	zero,118(sp)
   47edc:	0027883a 	mov	r19,zero
   47ee0:	d8002305 	stb	zero,140(sp)
   47ee4:	043fffc4 	movi	r16,-1
   47ee8:	d8002515 	stw	zero,148(sp)
   47eec:	0023883a 	mov	r17,zero
   47ef0:	05001604 	movi	r20,88
   47ef4:	05400244 	movi	r21,9
   47ef8:	402f883a 	mov	r23,r8
   47efc:	b5800044 	addi	r22,r22,1
   47f00:	18bff804 	addi	r2,r3,-32
   47f04:	a0827736 	bltu	r20,r2,488e4 <___vfiprintf_internal_r+0xb5c>
   47f08:	100490ba 	slli	r2,r2,2
   47f0c:	01000134 	movhi	r4,4
   47f10:	211fc804 	addi	r4,r4,32544
   47f14:	1105883a 	add	r2,r2,r4
   47f18:	10800017 	ldw	r2,0(r2)
   47f1c:	1000683a 	jmp	r2
   47f20:	000485e4 	muli	zero,zero,4631
   47f24:	000488e4 	muli	zero,zero,4643
   47f28:	000488e4 	muli	zero,zero,4643
   47f2c:	00048600 	call	4860 <__alt_mem_RAM-0x3b7a0>
   47f30:	000488e4 	muli	zero,zero,4643
   47f34:	000488e4 	muli	zero,zero,4643
   47f38:	000488e4 	muli	zero,zero,4643
   47f3c:	000488e4 	muli	zero,zero,4643
   47f40:	000488e4 	muli	zero,zero,4643
   47f44:	000488e4 	muli	zero,zero,4643
   47f48:	00048808 	cmpgei	zero,zero,4640
   47f4c:	0004882c 	andhi	zero,zero,4640
   47f50:	000488e4 	muli	zero,zero,4643
   47f54:	00048124 	muli	zero,zero,4612
   47f58:	00048840 	call	4884 <__alt_mem_RAM-0x3b77c>
   47f5c:	000488e4 	muli	zero,zero,4643
   47f60:	0004860c 	andi	zero,zero,4632
   47f64:	00048618 	cmpnei	zero,zero,4632
   47f68:	00048618 	cmpnei	zero,zero,4632
   47f6c:	00048618 	cmpnei	zero,zero,4632
   47f70:	00048618 	cmpnei	zero,zero,4632
   47f74:	00048618 	cmpnei	zero,zero,4632
   47f78:	00048618 	cmpnei	zero,zero,4632
   47f7c:	00048618 	cmpnei	zero,zero,4632
   47f80:	00048618 	cmpnei	zero,zero,4632
   47f84:	00048618 	cmpnei	zero,zero,4632
   47f88:	000488e4 	muli	zero,zero,4643
   47f8c:	000488e4 	muli	zero,zero,4643
   47f90:	000488e4 	muli	zero,zero,4643
   47f94:	000488e4 	muli	zero,zero,4643
   47f98:	000488e4 	muli	zero,zero,4643
   47f9c:	000488e4 	muli	zero,zero,4643
   47fa0:	000488e4 	muli	zero,zero,4643
   47fa4:	000488e4 	muli	zero,zero,4643
   47fa8:	000488e4 	muli	zero,zero,4643
   47fac:	000488e4 	muli	zero,zero,4643
   47fb0:	00048658 	cmpnei	zero,zero,4633
   47fb4:	000488e4 	muli	zero,zero,4643
   47fb8:	000488e4 	muli	zero,zero,4643
   47fbc:	000488e4 	muli	zero,zero,4643
   47fc0:	000488e4 	muli	zero,zero,4643
   47fc4:	000488e4 	muli	zero,zero,4643
   47fc8:	000488e4 	muli	zero,zero,4643
   47fcc:	000488e4 	muli	zero,zero,4643
   47fd0:	000488e4 	muli	zero,zero,4643
   47fd4:	000488e4 	muli	zero,zero,4643
   47fd8:	000488e4 	muli	zero,zero,4643
   47fdc:	00048694 	movui	zero,4634
   47fe0:	000488e4 	muli	zero,zero,4643
   47fe4:	000488e4 	muli	zero,zero,4643
   47fe8:	000488e4 	muli	zero,zero,4643
   47fec:	000488e4 	muli	zero,zero,4643
   47ff0:	000488e4 	muli	zero,zero,4643
   47ff4:	000486f0 	cmpltui	zero,zero,4635
   47ff8:	000488e4 	muli	zero,zero,4643
   47ffc:	000488e4 	muli	zero,zero,4643
   48000:	00048764 	muli	zero,zero,4637
   48004:	000488e4 	muli	zero,zero,4643
   48008:	000488e4 	muli	zero,zero,4643
   4800c:	000488e4 	muli	zero,zero,4643
   48010:	000488e4 	muli	zero,zero,4643
   48014:	000488e4 	muli	zero,zero,4643
   48018:	000488e4 	muli	zero,zero,4643
   4801c:	000488e4 	muli	zero,zero,4643
   48020:	000488e4 	muli	zero,zero,4643
   48024:	000488e4 	muli	zero,zero,4643
   48028:	000488e4 	muli	zero,zero,4643
   4802c:	0004850c 	andi	zero,zero,4628
   48030:	0004853c 	xorhi	zero,zero,4628
   48034:	000488e4 	muli	zero,zero,4643
   48038:	000488e4 	muli	zero,zero,4643
   4803c:	000488e4 	muli	zero,zero,4643
   48040:	0004888c 	andi	zero,zero,4642
   48044:	0004853c 	xorhi	zero,zero,4628
   48048:	000488e4 	muli	zero,zero,4643
   4804c:	000488e4 	muli	zero,zero,4643
   48050:	000483e4 	muli	zero,zero,4623
   48054:	000488e4 	muli	zero,zero,4643
   48058:	000483f8 	rdprs	zero,zero,4623
   4805c:	00048430 	cmpltui	zero,zero,4624
   48060:	00048130 	cmpltui	zero,zero,4612
   48064:	000483d8 	cmpnei	zero,zero,4623
   48068:	000488e4 	muli	zero,zero,4643
   4806c:	000487a4 	muli	zero,zero,4638
   48070:	000488e4 	muli	zero,zero,4643
   48074:	000487f0 	cmpltui	zero,zero,4639
   48078:	000488e4 	muli	zero,zero,4643
   4807c:	000488e4 	muli	zero,zero,4643
   48080:	000484b4 	movhi	zero,4626
   48084:	42000204 	addi	r8,r8,8
   48088:	d8c02417 	ldw	r3,144(sp)
   4808c:	1c07883a 	add	r3,r3,r16
   48090:	d8c02415 	stw	r3,144(sp)
   48094:	003f8c06 	br	47ec8 <__alt_data_end+0xfffd5ec8>
   48098:	d9402017 	ldw	r5,128(sp)
   4809c:	d9002117 	ldw	r4,132(sp)
   480a0:	00429440 	call	42944 <__swsetup_r>
   480a4:	1003c11e 	bne	r2,zero,48fac <___vfiprintf_internal_r+0x1224>
   480a8:	d9402017 	ldw	r5,128(sp)
   480ac:	00c00284 	movi	r3,10
   480b0:	2880030b 	ldhu	r2,12(r5)
   480b4:	1080068c 	andi	r2,r2,26
   480b8:	10ff581e 	bne	r2,r3,47e1c <__alt_data_end+0xfffd5e1c>
   480bc:	d8c02017 	ldw	r3,128(sp)
   480c0:	1880038f 	ldh	r2,14(r3)
   480c4:	103f5516 	blt	r2,zero,47e1c <__alt_data_end+0xfffd5e1c>
   480c8:	d9c02217 	ldw	r7,136(sp)
   480cc:	d9002117 	ldw	r4,132(sp)
   480d0:	a80d883a 	mov	r6,r21
   480d4:	180b883a 	mov	r5,r3
   480d8:	00492b00 	call	492b0 <__sbprintf>
   480dc:	dfc03517 	ldw	ra,212(sp)
   480e0:	df003417 	ldw	fp,208(sp)
   480e4:	ddc03317 	ldw	r23,204(sp)
   480e8:	dd803217 	ldw	r22,200(sp)
   480ec:	dd403117 	ldw	r21,196(sp)
   480f0:	dd003017 	ldw	r20,192(sp)
   480f4:	dcc02f17 	ldw	r19,188(sp)
   480f8:	dc802e17 	ldw	r18,184(sp)
   480fc:	dc402d17 	ldw	r17,180(sp)
   48100:	dc002c17 	ldw	r16,176(sp)
   48104:	dec03604 	addi	sp,sp,216
   48108:	f800283a 	ret
   4810c:	00449500 	call	44950 <__sinit>
   48110:	003f2f06 	br	47dd0 <__alt_data_end+0xfffd5dd0>
   48114:	d8c02517 	ldw	r3,148(sp)
   48118:	d8802215 	stw	r2,136(sp)
   4811c:	00c7c83a 	sub	r3,zero,r3
   48120:	d8c02515 	stw	r3,148(sp)
   48124:	8c400114 	ori	r17,r17,4
   48128:	b0c00007 	ldb	r3,0(r22)
   4812c:	003f7306 	br	47efc <__alt_data_end+0xfffd5efc>
   48130:	00800c04 	movi	r2,48
   48134:	d9402217 	ldw	r5,136(sp)
   48138:	d8801d05 	stb	r2,116(sp)
   4813c:	00801e04 	movi	r2,120
   48140:	d8801d45 	stb	r2,117(sp)
   48144:	d8001d85 	stb	zero,118(sp)
   48148:	b811883a 	mov	r8,r23
   4814c:	28c00104 	addi	r3,r5,4
   48150:	2cc00017 	ldw	r19,0(r5)
   48154:	0029883a 	mov	r20,zero
   48158:	88800094 	ori	r2,r17,2
   4815c:	80032516 	blt	r16,zero,48df4 <___vfiprintf_internal_r+0x106c>
   48160:	00bfdfc4 	movi	r2,-129
   48164:	88a2703a 	and	r17,r17,r2
   48168:	d8c02215 	stw	r3,136(sp)
   4816c:	8c400094 	ori	r17,r17,2
   48170:	98032a1e 	bne	r19,zero,48e1c <___vfiprintf_internal_r+0x1094>
   48174:	00800174 	movhi	r2,5
   48178:	10bede04 	addi	r2,r2,-1160
   4817c:	d8802615 	stw	r2,152(sp)
   48180:	002b883a 	mov	r21,zero
   48184:	8001741e 	bne	r16,zero,48758 <___vfiprintf_internal_r+0x9d0>
   48188:	0021883a 	mov	r16,zero
   4818c:	0029883a 	mov	r20,zero
   48190:	ddc01a04 	addi	r23,sp,104
   48194:	8027883a 	mov	r19,r16
   48198:	8500010e 	bge	r16,r20,481a0 <___vfiprintf_internal_r+0x418>
   4819c:	a027883a 	mov	r19,r20
   481a0:	ad403fcc 	andi	r21,r21,255
   481a4:	ad40201c 	xori	r21,r21,128
   481a8:	ad7fe004 	addi	r21,r21,-128
   481ac:	a8000126 	beq	r21,zero,481b4 <___vfiprintf_internal_r+0x42c>
   481b0:	9cc00044 	addi	r19,r19,1
   481b4:	89c0008c 	andi	r7,r17,2
   481b8:	38000126 	beq	r7,zero,481c0 <___vfiprintf_internal_r+0x438>
   481bc:	9cc00084 	addi	r19,r19,2
   481c0:	88c0210c 	andi	r3,r17,132
   481c4:	1801dd1e 	bne	r3,zero,4893c <___vfiprintf_internal_r+0xbb4>
   481c8:	d9402517 	ldw	r5,148(sp)
   481cc:	2cebc83a 	sub	r21,r5,r19
   481d0:	0541da0e 	bge	zero,r21,4893c <___vfiprintf_internal_r+0xbb4>
   481d4:	07000404 	movi	fp,16
   481d8:	d8801c17 	ldw	r2,112(sp)
   481dc:	e543be0e 	bge	fp,r21,490d8 <___vfiprintf_internal_r+0x1350>
   481e0:	01400174 	movhi	r5,5
   481e4:	297f4304 	addi	r5,r5,-756
   481e8:	dc002715 	stw	r16,156(sp)
   481ec:	d9801b17 	ldw	r6,108(sp)
   481f0:	a821883a 	mov	r16,r21
   481f4:	d9402315 	stw	r5,140(sp)
   481f8:	028001c4 	movi	r10,7
   481fc:	d9c02915 	stw	r7,164(sp)
   48200:	182b883a 	mov	r21,r3
   48204:	00000506 	br	4821c <___vfiprintf_internal_r+0x494>
   48208:	31000084 	addi	r4,r6,2
   4820c:	42000204 	addi	r8,r8,8
   48210:	180d883a 	mov	r6,r3
   48214:	843ffc04 	addi	r16,r16,-16
   48218:	e4000f0e 	bge	fp,r16,48258 <___vfiprintf_internal_r+0x4d0>
   4821c:	01000174 	movhi	r4,5
   48220:	10800404 	addi	r2,r2,16
   48224:	30c00044 	addi	r3,r6,1
   48228:	213f4304 	addi	r4,r4,-756
   4822c:	41000015 	stw	r4,0(r8)
   48230:	47000115 	stw	fp,4(r8)
   48234:	d8801c15 	stw	r2,112(sp)
   48238:	d8c01b15 	stw	r3,108(sp)
   4823c:	50fff20e 	bge	r10,r3,48208 <__alt_data_end+0xfffd6208>
   48240:	1001b21e 	bne	r2,zero,4890c <___vfiprintf_internal_r+0xb84>
   48244:	843ffc04 	addi	r16,r16,-16
   48248:	000d883a 	mov	r6,zero
   4824c:	01000044 	movi	r4,1
   48250:	d811883a 	mov	r8,sp
   48254:	e43ff116 	blt	fp,r16,4821c <__alt_data_end+0xfffd621c>
   48258:	a807883a 	mov	r3,r21
   4825c:	d9c02917 	ldw	r7,164(sp)
   48260:	802b883a 	mov	r21,r16
   48264:	dc002717 	ldw	r16,156(sp)
   48268:	d9402317 	ldw	r5,140(sp)
   4826c:	a885883a 	add	r2,r21,r2
   48270:	45400115 	stw	r21,4(r8)
   48274:	41400015 	stw	r5,0(r8)
   48278:	d8801c15 	stw	r2,112(sp)
   4827c:	d9001b15 	stw	r4,108(sp)
   48280:	014001c4 	movi	r5,7
   48284:	29026216 	blt	r5,r4,48c10 <___vfiprintf_internal_r+0xe88>
   48288:	d9801d87 	ldb	r6,118(sp)
   4828c:	42000204 	addi	r8,r8,8
   48290:	21400044 	addi	r5,r4,1
   48294:	3001ae1e 	bne	r6,zero,48950 <___vfiprintf_internal_r+0xbc8>
   48298:	3801bb26 	beq	r7,zero,48988 <___vfiprintf_internal_r+0xc00>
   4829c:	d9001d04 	addi	r4,sp,116
   482a0:	10800084 	addi	r2,r2,2
   482a4:	41000015 	stw	r4,0(r8)
   482a8:	01000084 	movi	r4,2
   482ac:	41000115 	stw	r4,4(r8)
   482b0:	d8801c15 	stw	r2,112(sp)
   482b4:	d9401b15 	stw	r5,108(sp)
   482b8:	010001c4 	movi	r4,7
   482bc:	2142680e 	bge	r4,r5,48c60 <___vfiprintf_internal_r+0xed8>
   482c0:	1002b11e 	bne	r2,zero,48d88 <___vfiprintf_internal_r+0x1000>
   482c4:	01802004 	movi	r6,128
   482c8:	01400044 	movi	r5,1
   482cc:	0009883a 	mov	r4,zero
   482d0:	d811883a 	mov	r8,sp
   482d4:	1981ae1e 	bne	r3,r6,48990 <___vfiprintf_internal_r+0xc08>
   482d8:	d8c02517 	ldw	r3,148(sp)
   482dc:	1cf9c83a 	sub	fp,r3,r19
   482e0:	0701ab0e 	bge	zero,fp,48990 <___vfiprintf_internal_r+0xc08>
   482e4:	05400404 	movi	r21,16
   482e8:	af03a90e 	bge	r21,fp,49190 <___vfiprintf_internal_r+0x1408>
   482ec:	01400174 	movhi	r5,5
   482f0:	297f3f04 	addi	r5,r5,-772
   482f4:	d9402315 	stw	r5,140(sp)
   482f8:	01c001c4 	movi	r7,7
   482fc:	00000506 	br	48314 <___vfiprintf_internal_r+0x58c>
   48300:	21800084 	addi	r6,r4,2
   48304:	42000204 	addi	r8,r8,8
   48308:	1809883a 	mov	r4,r3
   4830c:	e73ffc04 	addi	fp,fp,-16
   48310:	af000d0e 	bge	r21,fp,48348 <___vfiprintf_internal_r+0x5c0>
   48314:	10800404 	addi	r2,r2,16
   48318:	20c00044 	addi	r3,r4,1
   4831c:	44800015 	stw	r18,0(r8)
   48320:	45400115 	stw	r21,4(r8)
   48324:	d8801c15 	stw	r2,112(sp)
   48328:	d8c01b15 	stw	r3,108(sp)
   4832c:	38fff40e 	bge	r7,r3,48300 <__alt_data_end+0xfffd6300>
   48330:	10022b1e 	bne	r2,zero,48be0 <___vfiprintf_internal_r+0xe58>
   48334:	e73ffc04 	addi	fp,fp,-16
   48338:	01800044 	movi	r6,1
   4833c:	0009883a 	mov	r4,zero
   48340:	d811883a 	mov	r8,sp
   48344:	af3ff316 	blt	r21,fp,48314 <__alt_data_end+0xfffd6314>
   48348:	d8c02317 	ldw	r3,140(sp)
   4834c:	1705883a 	add	r2,r2,fp
   48350:	47000115 	stw	fp,4(r8)
   48354:	40c00015 	stw	r3,0(r8)
   48358:	d8801c15 	stw	r2,112(sp)
   4835c:	d9801b15 	stw	r6,108(sp)
   48360:	00c001c4 	movi	r3,7
   48364:	19829416 	blt	r3,r6,48db8 <___vfiprintf_internal_r+0x1030>
   48368:	8521c83a 	sub	r16,r16,r20
   4836c:	42000204 	addi	r8,r8,8
   48370:	31400044 	addi	r5,r6,1
   48374:	3009883a 	mov	r4,r6
   48378:	04018716 	blt	zero,r16,48998 <___vfiprintf_internal_r+0xc10>
   4837c:	a085883a 	add	r2,r20,r2
   48380:	45c00015 	stw	r23,0(r8)
   48384:	45000115 	stw	r20,4(r8)
   48388:	d8801c15 	stw	r2,112(sp)
   4838c:	d9401b15 	stw	r5,108(sp)
   48390:	00c001c4 	movi	r3,7
   48394:	1941c20e 	bge	r3,r5,48aa0 <___vfiprintf_internal_r+0xd18>
   48398:	1002531e 	bne	r2,zero,48ce8 <___vfiprintf_internal_r+0xf60>
   4839c:	d8001b15 	stw	zero,108(sp)
   483a0:	8c40010c 	andi	r17,r17,4
   483a4:	88023226 	beq	r17,zero,48c70 <___vfiprintf_internal_r+0xee8>
   483a8:	d9002517 	ldw	r4,148(sp)
   483ac:	24e3c83a 	sub	r17,r4,r19
   483b0:	04432916 	blt	zero,r17,49058 <___vfiprintf_internal_r+0x12d0>
   483b4:	d8802517 	ldw	r2,148(sp)
   483b8:	14c0010e 	bge	r2,r19,483c0 <___vfiprintf_internal_r+0x638>
   483bc:	9805883a 	mov	r2,r19
   483c0:	d8c02417 	ldw	r3,144(sp)
   483c4:	1887883a 	add	r3,r3,r2
   483c8:	d8c02415 	stw	r3,144(sp)
   483cc:	d8001b15 	stw	zero,108(sp)
   483d0:	d811883a 	mov	r8,sp
   483d4:	003ea006 	br	47e58 <__alt_data_end+0xfffd5e58>
   483d8:	8c400814 	ori	r17,r17,32
   483dc:	b0c00007 	ldb	r3,0(r22)
   483e0:	003ec606 	br	47efc <__alt_data_end+0xfffd5efc>
   483e4:	b0c00007 	ldb	r3,0(r22)
   483e8:	00801b04 	movi	r2,108
   483ec:	18832026 	beq	r3,r2,49070 <___vfiprintf_internal_r+0x12e8>
   483f0:	8c400414 	ori	r17,r17,16
   483f4:	003ec106 	br	47efc <__alt_data_end+0xfffd5efc>
   483f8:	9cc03fcc 	andi	r19,r19,255
   483fc:	b811883a 	mov	r8,r23
   48400:	9803981e 	bne	r19,zero,49264 <___vfiprintf_internal_r+0x14dc>
   48404:	8880080c 	andi	r2,r17,32
   48408:	1002be26 	beq	r2,zero,48f04 <___vfiprintf_internal_r+0x117c>
   4840c:	d9002217 	ldw	r4,136(sp)
   48410:	d9402417 	ldw	r5,144(sp)
   48414:	20800017 	ldw	r2,0(r4)
   48418:	2807d7fa 	srai	r3,r5,31
   4841c:	21000104 	addi	r4,r4,4
   48420:	d9002215 	stw	r4,136(sp)
   48424:	11400015 	stw	r5,0(r2)
   48428:	10c00115 	stw	r3,4(r2)
   4842c:	003e8a06 	br	47e58 <__alt_data_end+0xfffd5e58>
   48430:	9cc03fcc 	andi	r19,r19,255
   48434:	b811883a 	mov	r8,r23
   48438:	9803871e 	bne	r19,zero,49258 <___vfiprintf_internal_r+0x14d0>
   4843c:	8880080c 	andi	r2,r17,32
   48440:	10009a26 	beq	r2,zero,486ac <___vfiprintf_internal_r+0x924>
   48444:	d9002217 	ldw	r4,136(sp)
   48448:	d8001d85 	stb	zero,118(sp)
   4844c:	20800204 	addi	r2,r4,8
   48450:	24c00017 	ldw	r19,0(r4)
   48454:	25000117 	ldw	r20,4(r4)
   48458:	8002a416 	blt	r16,zero,48eec <___vfiprintf_internal_r+0x1164>
   4845c:	013fdfc4 	movi	r4,-129
   48460:	9d06b03a 	or	r3,r19,r20
   48464:	d8802215 	stw	r2,136(sp)
   48468:	8922703a 	and	r17,r17,r4
   4846c:	18009b26 	beq	r3,zero,486dc <___vfiprintf_internal_r+0x954>
   48470:	002b883a 	mov	r21,zero
   48474:	ddc01a04 	addi	r23,sp,104
   48478:	9806d0fa 	srli	r3,r19,3
   4847c:	a008977a 	slli	r4,r20,29
   48480:	a028d0fa 	srli	r20,r20,3
   48484:	9cc001cc 	andi	r19,r19,7
   48488:	98800c04 	addi	r2,r19,48
   4848c:	bdffffc4 	addi	r23,r23,-1
   48490:	20e6b03a 	or	r19,r4,r3
   48494:	b8800005 	stb	r2,0(r23)
   48498:	9d06b03a 	or	r3,r19,r20
   4849c:	183ff61e 	bne	r3,zero,48478 <__alt_data_end+0xfffd6478>
   484a0:	88c0004c 	andi	r3,r17,1
   484a4:	18021f1e 	bne	r3,zero,48d24 <___vfiprintf_internal_r+0xf9c>
   484a8:	d9401e17 	ldw	r5,120(sp)
   484ac:	2de9c83a 	sub	r20,r5,r23
   484b0:	003f3806 	br	48194 <__alt_data_end+0xfffd6194>
   484b4:	9cc03fcc 	andi	r19,r19,255
   484b8:	b811883a 	mov	r8,r23
   484bc:	98034f1e 	bne	r19,zero,491fc <___vfiprintf_internal_r+0x1474>
   484c0:	00800174 	movhi	r2,5
   484c4:	10bede04 	addi	r2,r2,-1160
   484c8:	d8802615 	stw	r2,152(sp)
   484cc:	8880080c 	andi	r2,r17,32
   484d0:	1000ac26 	beq	r2,zero,48784 <___vfiprintf_internal_r+0x9fc>
   484d4:	d9002217 	ldw	r4,136(sp)
   484d8:	24c00017 	ldw	r19,0(r4)
   484dc:	25000117 	ldw	r20,4(r4)
   484e0:	21000204 	addi	r4,r4,8
   484e4:	d9002215 	stw	r4,136(sp)
   484e8:	8880004c 	andi	r2,r17,1
   484ec:	1001e726 	beq	r2,zero,48c8c <___vfiprintf_internal_r+0xf04>
   484f0:	9d04b03a 	or	r2,r19,r20
   484f4:	10025c1e 	bne	r2,zero,48e68 <___vfiprintf_internal_r+0x10e0>
   484f8:	d8001d85 	stb	zero,118(sp)
   484fc:	80024416 	blt	r16,zero,48e10 <___vfiprintf_internal_r+0x1088>
   48500:	00bfdfc4 	movi	r2,-129
   48504:	88a2703a 	and	r17,r17,r2
   48508:	003f1d06 	br	48180 <__alt_data_end+0xfffd6180>
   4850c:	d8c02217 	ldw	r3,136(sp)
   48510:	04c00044 	movi	r19,1
   48514:	b811883a 	mov	r8,r23
   48518:	18800017 	ldw	r2,0(r3)
   4851c:	18c00104 	addi	r3,r3,4
   48520:	d8001d85 	stb	zero,118(sp)
   48524:	d8801005 	stb	r2,64(sp)
   48528:	d8c02215 	stw	r3,136(sp)
   4852c:	9829883a 	mov	r20,r19
   48530:	ddc01004 	addi	r23,sp,64
   48534:	0021883a 	mov	r16,zero
   48538:	003f1e06 	br	481b4 <__alt_data_end+0xfffd61b4>
   4853c:	9cc03fcc 	andi	r19,r19,255
   48540:	b811883a 	mov	r8,r23
   48544:	9803331e 	bne	r19,zero,49214 <___vfiprintf_internal_r+0x148c>
   48548:	8880080c 	andi	r2,r17,32
   4854c:	10004826 	beq	r2,zero,48670 <___vfiprintf_internal_r+0x8e8>
   48550:	d9002217 	ldw	r4,136(sp)
   48554:	20800117 	ldw	r2,4(r4)
   48558:	24c00017 	ldw	r19,0(r4)
   4855c:	21000204 	addi	r4,r4,8
   48560:	d9002215 	stw	r4,136(sp)
   48564:	1029883a 	mov	r20,r2
   48568:	10024c16 	blt	r2,zero,48e9c <___vfiprintf_internal_r+0x1114>
   4856c:	dd401d83 	ldbu	r21,118(sp)
   48570:	80007116 	blt	r16,zero,48738 <___vfiprintf_internal_r+0x9b0>
   48574:	00ffdfc4 	movi	r3,-129
   48578:	9d04b03a 	or	r2,r19,r20
   4857c:	88e2703a 	and	r17,r17,r3
   48580:	1000d126 	beq	r2,zero,488c8 <___vfiprintf_internal_r+0xb40>
   48584:	a0023526 	beq	r20,zero,48e5c <___vfiprintf_internal_r+0x10d4>
   48588:	ddc01a04 	addi	r23,sp,104
   4858c:	4039883a 	mov	fp,r8
   48590:	9809883a 	mov	r4,r19
   48594:	a00b883a 	mov	r5,r20
   48598:	01800284 	movi	r6,10
   4859c:	000f883a 	mov	r7,zero
   485a0:	004a2b40 	call	4a2b4 <__umoddi3>
   485a4:	10800c04 	addi	r2,r2,48
   485a8:	bdffffc4 	addi	r23,r23,-1
   485ac:	9809883a 	mov	r4,r19
   485b0:	a00b883a 	mov	r5,r20
   485b4:	b8800005 	stb	r2,0(r23)
   485b8:	01800284 	movi	r6,10
   485bc:	000f883a 	mov	r7,zero
   485c0:	0049cb80 	call	49cb8 <__udivdi3>
   485c4:	1027883a 	mov	r19,r2
   485c8:	10c4b03a 	or	r2,r2,r3
   485cc:	1829883a 	mov	r20,r3
   485d0:	103fef1e 	bne	r2,zero,48590 <__alt_data_end+0xfffd6590>
   485d4:	d9001e17 	ldw	r4,120(sp)
   485d8:	e011883a 	mov	r8,fp
   485dc:	25e9c83a 	sub	r20,r4,r23
   485e0:	003eec06 	br	48194 <__alt_data_end+0xfffd6194>
   485e4:	d8802307 	ldb	r2,140(sp)
   485e8:	1002361e 	bne	r2,zero,48ec4 <___vfiprintf_internal_r+0x113c>
   485ec:	00c00804 	movi	r3,32
   485f0:	d8c02305 	stb	r3,140(sp)
   485f4:	04c00044 	movi	r19,1
   485f8:	b0c00007 	ldb	r3,0(r22)
   485fc:	003e3f06 	br	47efc <__alt_data_end+0xfffd5efc>
   48600:	8c400054 	ori	r17,r17,1
   48604:	b0c00007 	ldb	r3,0(r22)
   48608:	003e3c06 	br	47efc <__alt_data_end+0xfffd5efc>
   4860c:	8c402014 	ori	r17,r17,128
   48610:	b0c00007 	ldb	r3,0(r22)
   48614:	003e3906 	br	47efc <__alt_data_end+0xfffd5efc>
   48618:	dc002715 	stw	r16,156(sp)
   4861c:	d8002515 	stw	zero,148(sp)
   48620:	1f3ff404 	addi	fp,r3,-48
   48624:	0009883a 	mov	r4,zero
   48628:	b021883a 	mov	r16,r22
   4862c:	01400284 	movi	r5,10
   48630:	004aa2c0 	call	4aa2c <__mulsi3>
   48634:	80c00007 	ldb	r3,0(r16)
   48638:	e089883a 	add	r4,fp,r2
   4863c:	b5800044 	addi	r22,r22,1
   48640:	1f3ff404 	addi	fp,r3,-48
   48644:	b021883a 	mov	r16,r22
   48648:	af3ff82e 	bgeu	r21,fp,4862c <__alt_data_end+0xfffd662c>
   4864c:	d9002515 	stw	r4,148(sp)
   48650:	dc002717 	ldw	r16,156(sp)
   48654:	003e2a06 	br	47f00 <__alt_data_end+0xfffd5f00>
   48658:	9cc03fcc 	andi	r19,r19,255
   4865c:	b811883a 	mov	r8,r23
   48660:	9802e91e 	bne	r19,zero,49208 <___vfiprintf_internal_r+0x1480>
   48664:	8c400414 	ori	r17,r17,16
   48668:	8880080c 	andi	r2,r17,32
   4866c:	103fb81e 	bne	r2,zero,48550 <__alt_data_end+0xfffd6550>
   48670:	8880040c 	andi	r2,r17,16
   48674:	10022e26 	beq	r2,zero,48f30 <___vfiprintf_internal_r+0x11a8>
   48678:	d9402217 	ldw	r5,136(sp)
   4867c:	2cc00017 	ldw	r19,0(r5)
   48680:	29400104 	addi	r5,r5,4
   48684:	d9402215 	stw	r5,136(sp)
   48688:	9829d7fa 	srai	r20,r19,31
   4868c:	a005883a 	mov	r2,r20
   48690:	003fb506 	br	48568 <__alt_data_end+0xfffd6568>
   48694:	9cc03fcc 	andi	r19,r19,255
   48698:	b811883a 	mov	r8,r23
   4869c:	9802fa1e 	bne	r19,zero,49288 <___vfiprintf_internal_r+0x1500>
   486a0:	8c400414 	ori	r17,r17,16
   486a4:	8880080c 	andi	r2,r17,32
   486a8:	103f661e 	bne	r2,zero,48444 <__alt_data_end+0xfffd6444>
   486ac:	8880040c 	andi	r2,r17,16
   486b0:	10020626 	beq	r2,zero,48ecc <___vfiprintf_internal_r+0x1144>
   486b4:	d9402217 	ldw	r5,136(sp)
   486b8:	d8001d85 	stb	zero,118(sp)
   486bc:	0029883a 	mov	r20,zero
   486c0:	28800104 	addi	r2,r5,4
   486c4:	2cc00017 	ldw	r19,0(r5)
   486c8:	80020816 	blt	r16,zero,48eec <___vfiprintf_internal_r+0x1164>
   486cc:	00ffdfc4 	movi	r3,-129
   486d0:	d8802215 	stw	r2,136(sp)
   486d4:	88e2703a 	and	r17,r17,r3
   486d8:	983f651e 	bne	r19,zero,48470 <__alt_data_end+0xfffd6470>
   486dc:	002b883a 	mov	r21,zero
   486e0:	8002cf26 	beq	r16,zero,49220 <___vfiprintf_internal_r+0x1498>
   486e4:	0027883a 	mov	r19,zero
   486e8:	0029883a 	mov	r20,zero
   486ec:	003f6106 	br	48474 <__alt_data_end+0xfffd6474>
   486f0:	9cc03fcc 	andi	r19,r19,255
   486f4:	b811883a 	mov	r8,r23
   486f8:	9802e01e 	bne	r19,zero,4927c <___vfiprintf_internal_r+0x14f4>
   486fc:	8c400414 	ori	r17,r17,16
   48700:	8880080c 	andi	r2,r17,32
   48704:	1000641e 	bne	r2,zero,48898 <___vfiprintf_internal_r+0xb10>
   48708:	8880040c 	andi	r2,r17,16
   4870c:	1001c81e 	bne	r2,zero,48e30 <___vfiprintf_internal_r+0x10a8>
   48710:	8880100c 	andi	r2,r17,64
   48714:	d8001d85 	stb	zero,118(sp)
   48718:	1002281e 	bne	r2,zero,48fbc <___vfiprintf_internal_r+0x1234>
   4871c:	d9002217 	ldw	r4,136(sp)
   48720:	0029883a 	mov	r20,zero
   48724:	20800104 	addi	r2,r4,4
   48728:	24c00017 	ldw	r19,0(r4)
   4872c:	8001c60e 	bge	r16,zero,48e48 <___vfiprintf_internal_r+0x10c0>
   48730:	d8802215 	stw	r2,136(sp)
   48734:	002b883a 	mov	r21,zero
   48738:	9d04b03a 	or	r2,r19,r20
   4873c:	103f911e 	bne	r2,zero,48584 <__alt_data_end+0xfffd6584>
   48740:	00800044 	movi	r2,1
   48744:	10803fcc 	andi	r2,r2,255
   48748:	00c00044 	movi	r3,1
   4874c:	10c05f26 	beq	r2,r3,488cc <___vfiprintf_internal_r+0xb44>
   48750:	00c00084 	movi	r3,2
   48754:	10ffe31e 	bne	r2,r3,486e4 <__alt_data_end+0xfffd66e4>
   48758:	0027883a 	mov	r19,zero
   4875c:	0029883a 	mov	r20,zero
   48760:	00015106 	br	48ca8 <___vfiprintf_internal_r+0xf20>
   48764:	9cc03fcc 	andi	r19,r19,255
   48768:	b811883a 	mov	r8,r23
   4876c:	9802c01e 	bne	r19,zero,49270 <___vfiprintf_internal_r+0x14e8>
   48770:	01400174 	movhi	r5,5
   48774:	297ed904 	addi	r5,r5,-1180
   48778:	d9402615 	stw	r5,152(sp)
   4877c:	8880080c 	andi	r2,r17,32
   48780:	103f541e 	bne	r2,zero,484d4 <__alt_data_end+0xfffd64d4>
   48784:	8880040c 	andi	r2,r17,16
   48788:	1001f226 	beq	r2,zero,48f54 <___vfiprintf_internal_r+0x11cc>
   4878c:	d9402217 	ldw	r5,136(sp)
   48790:	0029883a 	mov	r20,zero
   48794:	2cc00017 	ldw	r19,0(r5)
   48798:	29400104 	addi	r5,r5,4
   4879c:	d9402215 	stw	r5,136(sp)
   487a0:	003f5106 	br	484e8 <__alt_data_end+0xfffd64e8>
   487a4:	d8c02217 	ldw	r3,136(sp)
   487a8:	b811883a 	mov	r8,r23
   487ac:	d8001d85 	stb	zero,118(sp)
   487b0:	1dc00017 	ldw	r23,0(r3)
   487b4:	1f000104 	addi	fp,r3,4
   487b8:	b8025926 	beq	r23,zero,49120 <___vfiprintf_internal_r+0x1398>
   487bc:	80023316 	blt	r16,zero,4908c <___vfiprintf_internal_r+0x1304>
   487c0:	800d883a 	mov	r6,r16
   487c4:	000b883a 	mov	r5,zero
   487c8:	b809883a 	mov	r4,r23
   487cc:	da002a15 	stw	r8,168(sp)
   487d0:	0045ec80 	call	45ec8 <memchr>
   487d4:	da002a17 	ldw	r8,168(sp)
   487d8:	10026826 	beq	r2,zero,4917c <___vfiprintf_internal_r+0x13f4>
   487dc:	15e9c83a 	sub	r20,r2,r23
   487e0:	dd401d83 	ldbu	r21,118(sp)
   487e4:	df002215 	stw	fp,136(sp)
   487e8:	0021883a 	mov	r16,zero
   487ec:	003e6906 	br	48194 <__alt_data_end+0xfffd6194>
   487f0:	9cc03fcc 	andi	r19,r19,255
   487f4:	b811883a 	mov	r8,r23
   487f8:	983fc126 	beq	r19,zero,48700 <__alt_data_end+0xfffd6700>
   487fc:	d8c02303 	ldbu	r3,140(sp)
   48800:	d8c01d85 	stb	r3,118(sp)
   48804:	003fbe06 	br	48700 <__alt_data_end+0xfffd6700>
   48808:	d9002217 	ldw	r4,136(sp)
   4880c:	d9402217 	ldw	r5,136(sp)
   48810:	21000017 	ldw	r4,0(r4)
   48814:	28800104 	addi	r2,r5,4
   48818:	d9002515 	stw	r4,148(sp)
   4881c:	203e3d16 	blt	r4,zero,48114 <__alt_data_end+0xfffd6114>
   48820:	d8802215 	stw	r2,136(sp)
   48824:	b0c00007 	ldb	r3,0(r22)
   48828:	003db406 	br	47efc <__alt_data_end+0xfffd5efc>
   4882c:	00c00ac4 	movi	r3,43
   48830:	d8c02305 	stb	r3,140(sp)
   48834:	04c00044 	movi	r19,1
   48838:	b0c00007 	ldb	r3,0(r22)
   4883c:	003daf06 	br	47efc <__alt_data_end+0xfffd5efc>
   48840:	b0c00007 	ldb	r3,0(r22)
   48844:	01000a84 	movi	r4,42
   48848:	b4000044 	addi	r16,r22,1
   4884c:	19025e26 	beq	r3,r4,491c8 <___vfiprintf_internal_r+0x1440>
   48850:	1f3ff404 	addi	fp,r3,-48
   48854:	0009883a 	mov	r4,zero
   48858:	af025236 	bltu	r21,fp,491a4 <___vfiprintf_internal_r+0x141c>
   4885c:	01400284 	movi	r5,10
   48860:	004aa2c0 	call	4aa2c <__mulsi3>
   48864:	80c00007 	ldb	r3,0(r16)
   48868:	1709883a 	add	r4,r2,fp
   4886c:	85800044 	addi	r22,r16,1
   48870:	1f3ff404 	addi	fp,r3,-48
   48874:	b021883a 	mov	r16,r22
   48878:	af3ff82e 	bgeu	r21,fp,4885c <__alt_data_end+0xfffd685c>
   4887c:	2021883a 	mov	r16,r4
   48880:	203d9f0e 	bge	r4,zero,47f00 <__alt_data_end+0xfffd5f00>
   48884:	043fffc4 	movi	r16,-1
   48888:	003d9d06 	br	47f00 <__alt_data_end+0xfffd5f00>
   4888c:	8c401014 	ori	r17,r17,64
   48890:	b0c00007 	ldb	r3,0(r22)
   48894:	003d9906 	br	47efc <__alt_data_end+0xfffd5efc>
   48898:	d9002217 	ldw	r4,136(sp)
   4889c:	d8001d85 	stb	zero,118(sp)
   488a0:	20c00204 	addi	r3,r4,8
   488a4:	24c00017 	ldw	r19,0(r4)
   488a8:	25000117 	ldw	r20,4(r4)
   488ac:	8001e716 	blt	r16,zero,4904c <___vfiprintf_internal_r+0x12c4>
   488b0:	013fdfc4 	movi	r4,-129
   488b4:	9d04b03a 	or	r2,r19,r20
   488b8:	d8c02215 	stw	r3,136(sp)
   488bc:	8922703a 	and	r17,r17,r4
   488c0:	002b883a 	mov	r21,zero
   488c4:	103f2f1e 	bne	r2,zero,48584 <__alt_data_end+0xfffd6584>
   488c8:	803e2f26 	beq	r16,zero,48188 <__alt_data_end+0xfffd6188>
   488cc:	0027883a 	mov	r19,zero
   488d0:	9cc00c04 	addi	r19,r19,48
   488d4:	dcc019c5 	stb	r19,103(sp)
   488d8:	dd002817 	ldw	r20,160(sp)
   488dc:	ddc019c4 	addi	r23,sp,103
   488e0:	003e2c06 	br	48194 <__alt_data_end+0xfffd6194>
   488e4:	9cc03fcc 	andi	r19,r19,255
   488e8:	b811883a 	mov	r8,r23
   488ec:	9802571e 	bne	r19,zero,4924c <___vfiprintf_internal_r+0x14c4>
   488f0:	18005726 	beq	r3,zero,48a50 <___vfiprintf_internal_r+0xcc8>
   488f4:	04c00044 	movi	r19,1
   488f8:	d8c01005 	stb	r3,64(sp)
   488fc:	d8001d85 	stb	zero,118(sp)
   48900:	9829883a 	mov	r20,r19
   48904:	ddc01004 	addi	r23,sp,64
   48908:	003f0a06 	br	48534 <__alt_data_end+0xfffd6534>
   4890c:	d9402017 	ldw	r5,128(sp)
   48910:	d9002117 	ldw	r4,132(sp)
   48914:	d9801a04 	addi	r6,sp,104
   48918:	da802a15 	stw	r10,168(sp)
   4891c:	0047c740 	call	47c74 <__sprint_r.part.0>
   48920:	da802a17 	ldw	r10,168(sp)
   48924:	1000501e 	bne	r2,zero,48a68 <___vfiprintf_internal_r+0xce0>
   48928:	d9801b17 	ldw	r6,108(sp)
   4892c:	d8801c17 	ldw	r2,112(sp)
   48930:	d811883a 	mov	r8,sp
   48934:	31000044 	addi	r4,r6,1
   48938:	003e3606 	br	48214 <__alt_data_end+0xfffd6214>
   4893c:	d9001b17 	ldw	r4,108(sp)
   48940:	d8801c17 	ldw	r2,112(sp)
   48944:	21400044 	addi	r5,r4,1
   48948:	d9801d87 	ldb	r6,118(sp)
   4894c:	303e5226 	beq	r6,zero,48298 <__alt_data_end+0xfffd6298>
   48950:	01800044 	movi	r6,1
   48954:	d9001d84 	addi	r4,sp,118
   48958:	1185883a 	add	r2,r2,r6
   4895c:	41000015 	stw	r4,0(r8)
   48960:	41800115 	stw	r6,4(r8)
   48964:	d8801c15 	stw	r2,112(sp)
   48968:	d9401b15 	stw	r5,108(sp)
   4896c:	010001c4 	movi	r4,7
   48970:	2140b00e 	bge	r4,r5,48c34 <___vfiprintf_internal_r+0xeac>
   48974:	1000f61e 	bne	r2,zero,48d50 <___vfiprintf_internal_r+0xfc8>
   48978:	3800b31e 	bne	r7,zero,48c48 <___vfiprintf_internal_r+0xec0>
   4897c:	0009883a 	mov	r4,zero
   48980:	300b883a 	mov	r5,r6
   48984:	d811883a 	mov	r8,sp
   48988:	01802004 	movi	r6,128
   4898c:	19be5226 	beq	r3,r6,482d8 <__alt_data_end+0xfffd62d8>
   48990:	8521c83a 	sub	r16,r16,r20
   48994:	043e790e 	bge	zero,r16,4837c <__alt_data_end+0xfffd637c>
   48998:	05400404 	movi	r21,16
   4899c:	ac01b00e 	bge	r21,r16,49060 <___vfiprintf_internal_r+0x12d8>
   489a0:	01400174 	movhi	r5,5
   489a4:	297f3f04 	addi	r5,r5,-772
   489a8:	d9402315 	stw	r5,140(sp)
   489ac:	070001c4 	movi	fp,7
   489b0:	00000506 	br	489c8 <___vfiprintf_internal_r+0xc40>
   489b4:	21400084 	addi	r5,r4,2
   489b8:	42000204 	addi	r8,r8,8
   489bc:	1809883a 	mov	r4,r3
   489c0:	843ffc04 	addi	r16,r16,-16
   489c4:	ac000d0e 	bge	r21,r16,489fc <___vfiprintf_internal_r+0xc74>
   489c8:	10800404 	addi	r2,r2,16
   489cc:	20c00044 	addi	r3,r4,1
   489d0:	44800015 	stw	r18,0(r8)
   489d4:	45400115 	stw	r21,4(r8)
   489d8:	d8801c15 	stw	r2,112(sp)
   489dc:	d8c01b15 	stw	r3,108(sp)
   489e0:	e0fff40e 	bge	fp,r3,489b4 <__alt_data_end+0xfffd69b4>
   489e4:	1000101e 	bne	r2,zero,48a28 <___vfiprintf_internal_r+0xca0>
   489e8:	843ffc04 	addi	r16,r16,-16
   489ec:	01400044 	movi	r5,1
   489f0:	0009883a 	mov	r4,zero
   489f4:	d811883a 	mov	r8,sp
   489f8:	ac3ff316 	blt	r21,r16,489c8 <__alt_data_end+0xfffd69c8>
   489fc:	d8c02317 	ldw	r3,140(sp)
   48a00:	1405883a 	add	r2,r2,r16
   48a04:	44000115 	stw	r16,4(r8)
   48a08:	40c00015 	stw	r3,0(r8)
   48a0c:	d8801c15 	stw	r2,112(sp)
   48a10:	d9401b15 	stw	r5,108(sp)
   48a14:	00c001c4 	movi	r3,7
   48a18:	19401916 	blt	r3,r5,48a80 <___vfiprintf_internal_r+0xcf8>
   48a1c:	42000204 	addi	r8,r8,8
   48a20:	29400044 	addi	r5,r5,1
   48a24:	003e5506 	br	4837c <__alt_data_end+0xfffd637c>
   48a28:	d9402017 	ldw	r5,128(sp)
   48a2c:	d9002117 	ldw	r4,132(sp)
   48a30:	d9801a04 	addi	r6,sp,104
   48a34:	0047c740 	call	47c74 <__sprint_r.part.0>
   48a38:	10000b1e 	bne	r2,zero,48a68 <___vfiprintf_internal_r+0xce0>
   48a3c:	d9001b17 	ldw	r4,108(sp)
   48a40:	d8801c17 	ldw	r2,112(sp)
   48a44:	d811883a 	mov	r8,sp
   48a48:	21400044 	addi	r5,r4,1
   48a4c:	003fdc06 	br	489c0 <__alt_data_end+0xfffd69c0>
   48a50:	d8801c17 	ldw	r2,112(sp)
   48a54:	10000426 	beq	r2,zero,48a68 <___vfiprintf_internal_r+0xce0>
   48a58:	d9402017 	ldw	r5,128(sp)
   48a5c:	d9002117 	ldw	r4,132(sp)
   48a60:	d9801a04 	addi	r6,sp,104
   48a64:	0047c740 	call	47c74 <__sprint_r.part.0>
   48a68:	d9402017 	ldw	r5,128(sp)
   48a6c:	2880030b 	ldhu	r2,12(r5)
   48a70:	1080100c 	andi	r2,r2,64
   48a74:	10014d1e 	bne	r2,zero,48fac <___vfiprintf_internal_r+0x1224>
   48a78:	d8802417 	ldw	r2,144(sp)
   48a7c:	003d9706 	br	480dc <__alt_data_end+0xfffd60dc>
   48a80:	1000d21e 	bne	r2,zero,48dcc <___vfiprintf_internal_r+0x1044>
   48a84:	00c00044 	movi	r3,1
   48a88:	a005883a 	mov	r2,r20
   48a8c:	ddc00015 	stw	r23,0(sp)
   48a90:	dd000115 	stw	r20,4(sp)
   48a94:	dd001c15 	stw	r20,112(sp)
   48a98:	d8c01b15 	stw	r3,108(sp)
   48a9c:	d811883a 	mov	r8,sp
   48aa0:	42000204 	addi	r8,r8,8
   48aa4:	8c40010c 	andi	r17,r17,4
   48aa8:	88004026 	beq	r17,zero,48bac <___vfiprintf_internal_r+0xe24>
   48aac:	d9002517 	ldw	r4,148(sp)
   48ab0:	24e3c83a 	sub	r17,r4,r19
   48ab4:	04403d0e 	bge	zero,r17,48bac <___vfiprintf_internal_r+0xe24>
   48ab8:	04000404 	movi	r16,16
   48abc:	8441a90e 	bge	r16,r17,49164 <___vfiprintf_internal_r+0x13dc>
   48ac0:	00c00174 	movhi	r3,5
   48ac4:	18ff4304 	addi	r3,r3,-756
   48ac8:	d9001b17 	ldw	r4,108(sp)
   48acc:	d8c02315 	stw	r3,140(sp)
   48ad0:	050001c4 	movi	r20,7
   48ad4:	dd402117 	ldw	r21,132(sp)
   48ad8:	ddc02017 	ldw	r23,128(sp)
   48adc:	00000506 	br	48af4 <___vfiprintf_internal_r+0xd6c>
   48ae0:	21400084 	addi	r5,r4,2
   48ae4:	42000204 	addi	r8,r8,8
   48ae8:	1809883a 	mov	r4,r3
   48aec:	8c7ffc04 	addi	r17,r17,-16
   48af0:	84400f0e 	bge	r16,r17,48b30 <___vfiprintf_internal_r+0xda8>
   48af4:	01400174 	movhi	r5,5
   48af8:	10800404 	addi	r2,r2,16
   48afc:	20c00044 	addi	r3,r4,1
   48b00:	297f4304 	addi	r5,r5,-756
   48b04:	41400015 	stw	r5,0(r8)
   48b08:	44000115 	stw	r16,4(r8)
   48b0c:	d8801c15 	stw	r2,112(sp)
   48b10:	d8c01b15 	stw	r3,108(sp)
   48b14:	a0fff20e 	bge	r20,r3,48ae0 <__alt_data_end+0xfffd6ae0>
   48b18:	1000141e 	bne	r2,zero,48b6c <___vfiprintf_internal_r+0xde4>
   48b1c:	8c7ffc04 	addi	r17,r17,-16
   48b20:	01400044 	movi	r5,1
   48b24:	0009883a 	mov	r4,zero
   48b28:	d811883a 	mov	r8,sp
   48b2c:	847ff116 	blt	r16,r17,48af4 <__alt_data_end+0xfffd6af4>
   48b30:	d8c02317 	ldw	r3,140(sp)
   48b34:	1445883a 	add	r2,r2,r17
   48b38:	44400115 	stw	r17,4(r8)
   48b3c:	40c00015 	stw	r3,0(r8)
   48b40:	d8801c15 	stw	r2,112(sp)
   48b44:	d9401b15 	stw	r5,108(sp)
   48b48:	00c001c4 	movi	r3,7
   48b4c:	1940170e 	bge	r3,r5,48bac <___vfiprintf_internal_r+0xe24>
   48b50:	1000101e 	bne	r2,zero,48b94 <___vfiprintf_internal_r+0xe0c>
   48b54:	d8802517 	ldw	r2,148(sp)
   48b58:	14c11616 	blt	r2,r19,48fb4 <___vfiprintf_internal_r+0x122c>
   48b5c:	d9002417 	ldw	r4,144(sp)
   48b60:	2089883a 	add	r4,r4,r2
   48b64:	d9002415 	stw	r4,144(sp)
   48b68:	003e1806 	br	483cc <__alt_data_end+0xfffd63cc>
   48b6c:	d9801a04 	addi	r6,sp,104
   48b70:	b80b883a 	mov	r5,r23
   48b74:	a809883a 	mov	r4,r21
   48b78:	0047c740 	call	47c74 <__sprint_r.part.0>
   48b7c:	103fba1e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   48b80:	d9001b17 	ldw	r4,108(sp)
   48b84:	d8801c17 	ldw	r2,112(sp)
   48b88:	d811883a 	mov	r8,sp
   48b8c:	21400044 	addi	r5,r4,1
   48b90:	003fd606 	br	48aec <__alt_data_end+0xfffd6aec>
   48b94:	d9402017 	ldw	r5,128(sp)
   48b98:	d9002117 	ldw	r4,132(sp)
   48b9c:	d9801a04 	addi	r6,sp,104
   48ba0:	0047c740 	call	47c74 <__sprint_r.part.0>
   48ba4:	103fb01e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   48ba8:	d8801c17 	ldw	r2,112(sp)
   48bac:	d8c02517 	ldw	r3,148(sp)
   48bb0:	1cc0010e 	bge	r3,r19,48bb8 <___vfiprintf_internal_r+0xe30>
   48bb4:	9807883a 	mov	r3,r19
   48bb8:	d9002417 	ldw	r4,144(sp)
   48bbc:	20c9883a 	add	r4,r4,r3
   48bc0:	d9002415 	stw	r4,144(sp)
   48bc4:	103e0126 	beq	r2,zero,483cc <__alt_data_end+0xfffd63cc>
   48bc8:	d9402017 	ldw	r5,128(sp)
   48bcc:	d9002117 	ldw	r4,132(sp)
   48bd0:	d9801a04 	addi	r6,sp,104
   48bd4:	0047c740 	call	47c74 <__sprint_r.part.0>
   48bd8:	103dfc26 	beq	r2,zero,483cc <__alt_data_end+0xfffd63cc>
   48bdc:	003fa206 	br	48a68 <__alt_data_end+0xfffd6a68>
   48be0:	d9402017 	ldw	r5,128(sp)
   48be4:	d9002117 	ldw	r4,132(sp)
   48be8:	d9801a04 	addi	r6,sp,104
   48bec:	d9c02b15 	stw	r7,172(sp)
   48bf0:	0047c740 	call	47c74 <__sprint_r.part.0>
   48bf4:	d9c02b17 	ldw	r7,172(sp)
   48bf8:	103f9b1e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   48bfc:	d9001b17 	ldw	r4,108(sp)
   48c00:	d8801c17 	ldw	r2,112(sp)
   48c04:	d811883a 	mov	r8,sp
   48c08:	21800044 	addi	r6,r4,1
   48c0c:	003dbf06 	br	4830c <__alt_data_end+0xfffd630c>
   48c10:	1000d81e 	bne	r2,zero,48f74 <___vfiprintf_internal_r+0x11ec>
   48c14:	d9001d87 	ldb	r4,118(sp)
   48c18:	20000a26 	beq	r4,zero,48c44 <___vfiprintf_internal_r+0xebc>
   48c1c:	00800044 	movi	r2,1
   48c20:	d9001d84 	addi	r4,sp,118
   48c24:	100b883a 	mov	r5,r2
   48c28:	d9000015 	stw	r4,0(sp)
   48c2c:	d8800115 	stw	r2,4(sp)
   48c30:	d811883a 	mov	r8,sp
   48c34:	2809883a 	mov	r4,r5
   48c38:	42000204 	addi	r8,r8,8
   48c3c:	29400044 	addi	r5,r5,1
   48c40:	003d9506 	br	48298 <__alt_data_end+0xfffd6298>
   48c44:	3800fd26 	beq	r7,zero,4903c <___vfiprintf_internal_r+0x12b4>
   48c48:	00800084 	movi	r2,2
   48c4c:	d9001d04 	addi	r4,sp,116
   48c50:	d9000015 	stw	r4,0(sp)
   48c54:	d8800115 	stw	r2,4(sp)
   48c58:	01400044 	movi	r5,1
   48c5c:	d811883a 	mov	r8,sp
   48c60:	2809883a 	mov	r4,r5
   48c64:	42000204 	addi	r8,r8,8
   48c68:	29400044 	addi	r5,r5,1
   48c6c:	003f4606 	br	48988 <__alt_data_end+0xfffd6988>
   48c70:	d8802517 	ldw	r2,148(sp)
   48c74:	14c0010e 	bge	r2,r19,48c7c <___vfiprintf_internal_r+0xef4>
   48c78:	9805883a 	mov	r2,r19
   48c7c:	d9402417 	ldw	r5,144(sp)
   48c80:	288b883a 	add	r5,r5,r2
   48c84:	d9402415 	stw	r5,144(sp)
   48c88:	003dd006 	br	483cc <__alt_data_end+0xfffd63cc>
   48c8c:	d8001d85 	stb	zero,118(sp)
   48c90:	80005d16 	blt	r16,zero,48e08 <___vfiprintf_internal_r+0x1080>
   48c94:	00ffdfc4 	movi	r3,-129
   48c98:	9d04b03a 	or	r2,r19,r20
   48c9c:	88e2703a 	and	r17,r17,r3
   48ca0:	103d3726 	beq	r2,zero,48180 <__alt_data_end+0xfffd6180>
   48ca4:	002b883a 	mov	r21,zero
   48ca8:	d9002617 	ldw	r4,152(sp)
   48cac:	ddc01a04 	addi	r23,sp,104
   48cb0:	988003cc 	andi	r2,r19,15
   48cb4:	a006973a 	slli	r3,r20,28
   48cb8:	2085883a 	add	r2,r4,r2
   48cbc:	9826d13a 	srli	r19,r19,4
   48cc0:	10800003 	ldbu	r2,0(r2)
   48cc4:	a028d13a 	srli	r20,r20,4
   48cc8:	bdffffc4 	addi	r23,r23,-1
   48ccc:	1ce6b03a 	or	r19,r3,r19
   48cd0:	b8800005 	stb	r2,0(r23)
   48cd4:	9d04b03a 	or	r2,r19,r20
   48cd8:	103ff51e 	bne	r2,zero,48cb0 <__alt_data_end+0xfffd6cb0>
   48cdc:	d8801e17 	ldw	r2,120(sp)
   48ce0:	15e9c83a 	sub	r20,r2,r23
   48ce4:	003d2b06 	br	48194 <__alt_data_end+0xfffd6194>
   48ce8:	d9402017 	ldw	r5,128(sp)
   48cec:	d9002117 	ldw	r4,132(sp)
   48cf0:	d9801a04 	addi	r6,sp,104
   48cf4:	0047c740 	call	47c74 <__sprint_r.part.0>
   48cf8:	103f5b1e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   48cfc:	d8801c17 	ldw	r2,112(sp)
   48d00:	d811883a 	mov	r8,sp
   48d04:	003f6706 	br	48aa4 <__alt_data_end+0xfffd6aa4>
   48d08:	d9402017 	ldw	r5,128(sp)
   48d0c:	d9002117 	ldw	r4,132(sp)
   48d10:	d9801a04 	addi	r6,sp,104
   48d14:	0047c740 	call	47c74 <__sprint_r.part.0>
   48d18:	103f531e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   48d1c:	d811883a 	mov	r8,sp
   48d20:	003cd906 	br	48088 <__alt_data_end+0xfffd6088>
   48d24:	10803fcc 	andi	r2,r2,255
   48d28:	1080201c 	xori	r2,r2,128
   48d2c:	10bfe004 	addi	r2,r2,-128
   48d30:	00c00c04 	movi	r3,48
   48d34:	10ffe926 	beq	r2,r3,48cdc <__alt_data_end+0xfffd6cdc>
   48d38:	b8ffffc5 	stb	r3,-1(r23)
   48d3c:	d8c01e17 	ldw	r3,120(sp)
   48d40:	b8bfffc4 	addi	r2,r23,-1
   48d44:	102f883a 	mov	r23,r2
   48d48:	18a9c83a 	sub	r20,r3,r2
   48d4c:	003d1106 	br	48194 <__alt_data_end+0xfffd6194>
   48d50:	d9402017 	ldw	r5,128(sp)
   48d54:	d9002117 	ldw	r4,132(sp)
   48d58:	d9801a04 	addi	r6,sp,104
   48d5c:	d8c02a15 	stw	r3,168(sp)
   48d60:	d9c02b15 	stw	r7,172(sp)
   48d64:	0047c740 	call	47c74 <__sprint_r.part.0>
   48d68:	d8c02a17 	ldw	r3,168(sp)
   48d6c:	d9c02b17 	ldw	r7,172(sp)
   48d70:	103f3d1e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   48d74:	d9001b17 	ldw	r4,108(sp)
   48d78:	d8801c17 	ldw	r2,112(sp)
   48d7c:	d811883a 	mov	r8,sp
   48d80:	21400044 	addi	r5,r4,1
   48d84:	003d4406 	br	48298 <__alt_data_end+0xfffd6298>
   48d88:	d9402017 	ldw	r5,128(sp)
   48d8c:	d9002117 	ldw	r4,132(sp)
   48d90:	d9801a04 	addi	r6,sp,104
   48d94:	d8c02a15 	stw	r3,168(sp)
   48d98:	0047c740 	call	47c74 <__sprint_r.part.0>
   48d9c:	d8c02a17 	ldw	r3,168(sp)
   48da0:	103f311e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   48da4:	d9001b17 	ldw	r4,108(sp)
   48da8:	d8801c17 	ldw	r2,112(sp)
   48dac:	d811883a 	mov	r8,sp
   48db0:	21400044 	addi	r5,r4,1
   48db4:	003ef406 	br	48988 <__alt_data_end+0xfffd6988>
   48db8:	1000bd1e 	bne	r2,zero,490b0 <___vfiprintf_internal_r+0x1328>
   48dbc:	01400044 	movi	r5,1
   48dc0:	0009883a 	mov	r4,zero
   48dc4:	d811883a 	mov	r8,sp
   48dc8:	003ef106 	br	48990 <__alt_data_end+0xfffd6990>
   48dcc:	d9402017 	ldw	r5,128(sp)
   48dd0:	d9002117 	ldw	r4,132(sp)
   48dd4:	d9801a04 	addi	r6,sp,104
   48dd8:	0047c740 	call	47c74 <__sprint_r.part.0>
   48ddc:	103f221e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   48de0:	d9401b17 	ldw	r5,108(sp)
   48de4:	d8801c17 	ldw	r2,112(sp)
   48de8:	d811883a 	mov	r8,sp
   48dec:	29400044 	addi	r5,r5,1
   48df0:	003d6206 	br	4837c <__alt_data_end+0xfffd637c>
   48df4:	01400174 	movhi	r5,5
   48df8:	297ede04 	addi	r5,r5,-1160
   48dfc:	d9402615 	stw	r5,152(sp)
   48e00:	d8c02215 	stw	r3,136(sp)
   48e04:	1023883a 	mov	r17,r2
   48e08:	9d04b03a 	or	r2,r19,r20
   48e0c:	103fa51e 	bne	r2,zero,48ca4 <__alt_data_end+0xfffd6ca4>
   48e10:	002b883a 	mov	r21,zero
   48e14:	00800084 	movi	r2,2
   48e18:	003e4a06 	br	48744 <__alt_data_end+0xfffd6744>
   48e1c:	01400174 	movhi	r5,5
   48e20:	297ede04 	addi	r5,r5,-1160
   48e24:	002b883a 	mov	r21,zero
   48e28:	d9402615 	stw	r5,152(sp)
   48e2c:	003f9e06 	br	48ca8 <__alt_data_end+0xfffd6ca8>
   48e30:	d9402217 	ldw	r5,136(sp)
   48e34:	d8001d85 	stb	zero,118(sp)
   48e38:	0029883a 	mov	r20,zero
   48e3c:	28800104 	addi	r2,r5,4
   48e40:	2cc00017 	ldw	r19,0(r5)
   48e44:	803e3a16 	blt	r16,zero,48730 <__alt_data_end+0xfffd6730>
   48e48:	00ffdfc4 	movi	r3,-129
   48e4c:	d8802215 	stw	r2,136(sp)
   48e50:	88e2703a 	and	r17,r17,r3
   48e54:	002b883a 	mov	r21,zero
   48e58:	983e9b26 	beq	r19,zero,488c8 <__alt_data_end+0xfffd68c8>
   48e5c:	00800244 	movi	r2,9
   48e60:	14fdc936 	bltu	r2,r19,48588 <__alt_data_end+0xfffd6588>
   48e64:	003e9a06 	br	488d0 <__alt_data_end+0xfffd68d0>
   48e68:	00800c04 	movi	r2,48
   48e6c:	d8c01d45 	stb	r3,117(sp)
   48e70:	d8801d05 	stb	r2,116(sp)
   48e74:	d8001d85 	stb	zero,118(sp)
   48e78:	88c00094 	ori	r3,r17,2
   48e7c:	80009c16 	blt	r16,zero,490f0 <___vfiprintf_internal_r+0x1368>
   48e80:	00bfdfc4 	movi	r2,-129
   48e84:	88a2703a 	and	r17,r17,r2
   48e88:	8c400094 	ori	r17,r17,2
   48e8c:	002b883a 	mov	r21,zero
   48e90:	003f8506 	br	48ca8 <__alt_data_end+0xfffd6ca8>
   48e94:	b029883a 	mov	r20,r22
   48e98:	003c0b06 	br	47ec8 <__alt_data_end+0xfffd5ec8>
   48e9c:	04e7c83a 	sub	r19,zero,r19
   48ea0:	05400b44 	movi	r21,45
   48ea4:	9804c03a 	cmpne	r2,r19,zero
   48ea8:	0529c83a 	sub	r20,zero,r20
   48eac:	dd401d85 	stb	r21,118(sp)
   48eb0:	a0a9c83a 	sub	r20,r20,r2
   48eb4:	80009716 	blt	r16,zero,49114 <___vfiprintf_internal_r+0x138c>
   48eb8:	00bfdfc4 	movi	r2,-129
   48ebc:	88a2703a 	and	r17,r17,r2
   48ec0:	003db006 	br	48584 <__alt_data_end+0xfffd6584>
   48ec4:	b0c00007 	ldb	r3,0(r22)
   48ec8:	003c0c06 	br	47efc <__alt_data_end+0xfffd5efc>
   48ecc:	8880100c 	andi	r2,r17,64
   48ed0:	d8001d85 	stb	zero,118(sp)
   48ed4:	1000461e 	bne	r2,zero,48ff0 <___vfiprintf_internal_r+0x1268>
   48ed8:	d9002217 	ldw	r4,136(sp)
   48edc:	0029883a 	mov	r20,zero
   48ee0:	20800104 	addi	r2,r4,4
   48ee4:	24c00017 	ldw	r19,0(r4)
   48ee8:	803df80e 	bge	r16,zero,486cc <__alt_data_end+0xfffd66cc>
   48eec:	9d06b03a 	or	r3,r19,r20
   48ef0:	d8802215 	stw	r2,136(sp)
   48ef4:	183d5e1e 	bne	r3,zero,48470 <__alt_data_end+0xfffd6470>
   48ef8:	002b883a 	mov	r21,zero
   48efc:	0005883a 	mov	r2,zero
   48f00:	003e1006 	br	48744 <__alt_data_end+0xfffd6744>
   48f04:	8880040c 	andi	r2,r17,16
   48f08:	1000321e 	bne	r2,zero,48fd4 <___vfiprintf_internal_r+0x124c>
   48f0c:	8c40100c 	andi	r17,r17,64
   48f10:	88008d26 	beq	r17,zero,49148 <___vfiprintf_internal_r+0x13c0>
   48f14:	d9402217 	ldw	r5,136(sp)
   48f18:	d8c02417 	ldw	r3,144(sp)
   48f1c:	28800017 	ldw	r2,0(r5)
   48f20:	29400104 	addi	r5,r5,4
   48f24:	d9402215 	stw	r5,136(sp)
   48f28:	10c0000d 	sth	r3,0(r2)
   48f2c:	003bca06 	br	47e58 <__alt_data_end+0xfffd5e58>
   48f30:	8880100c 	andi	r2,r17,64
   48f34:	10003a26 	beq	r2,zero,49020 <___vfiprintf_internal_r+0x1298>
   48f38:	d8802217 	ldw	r2,136(sp)
   48f3c:	14c0000f 	ldh	r19,0(r2)
   48f40:	10800104 	addi	r2,r2,4
   48f44:	d8802215 	stw	r2,136(sp)
   48f48:	9829d7fa 	srai	r20,r19,31
   48f4c:	a005883a 	mov	r2,r20
   48f50:	003d8506 	br	48568 <__alt_data_end+0xfffd6568>
   48f54:	8880100c 	andi	r2,r17,64
   48f58:	10002b26 	beq	r2,zero,49008 <___vfiprintf_internal_r+0x1280>
   48f5c:	d8802217 	ldw	r2,136(sp)
   48f60:	0029883a 	mov	r20,zero
   48f64:	14c0000b 	ldhu	r19,0(r2)
   48f68:	10800104 	addi	r2,r2,4
   48f6c:	d8802215 	stw	r2,136(sp)
   48f70:	003d5d06 	br	484e8 <__alt_data_end+0xfffd64e8>
   48f74:	d9402017 	ldw	r5,128(sp)
   48f78:	d9002117 	ldw	r4,132(sp)
   48f7c:	d9801a04 	addi	r6,sp,104
   48f80:	d8c02a15 	stw	r3,168(sp)
   48f84:	d9c02b15 	stw	r7,172(sp)
   48f88:	0047c740 	call	47c74 <__sprint_r.part.0>
   48f8c:	d8c02a17 	ldw	r3,168(sp)
   48f90:	d9c02b17 	ldw	r7,172(sp)
   48f94:	103eb41e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   48f98:	d9001b17 	ldw	r4,108(sp)
   48f9c:	d8801c17 	ldw	r2,112(sp)
   48fa0:	d811883a 	mov	r8,sp
   48fa4:	21400044 	addi	r5,r4,1
   48fa8:	003e6706 	br	48948 <__alt_data_end+0xfffd6948>
   48fac:	00bfffc4 	movi	r2,-1
   48fb0:	003c4a06 	br	480dc <__alt_data_end+0xfffd60dc>
   48fb4:	9805883a 	mov	r2,r19
   48fb8:	003ee806 	br	48b5c <__alt_data_end+0xfffd6b5c>
   48fbc:	d8c02217 	ldw	r3,136(sp)
   48fc0:	0029883a 	mov	r20,zero
   48fc4:	18800104 	addi	r2,r3,4
   48fc8:	1cc0000b 	ldhu	r19,0(r3)
   48fcc:	803f9e0e 	bge	r16,zero,48e48 <__alt_data_end+0xfffd6e48>
   48fd0:	003dd706 	br	48730 <__alt_data_end+0xfffd6730>
   48fd4:	d8c02217 	ldw	r3,136(sp)
   48fd8:	d9002417 	ldw	r4,144(sp)
   48fdc:	18800017 	ldw	r2,0(r3)
   48fe0:	18c00104 	addi	r3,r3,4
   48fe4:	d8c02215 	stw	r3,136(sp)
   48fe8:	11000015 	stw	r4,0(r2)
   48fec:	003b9a06 	br	47e58 <__alt_data_end+0xfffd5e58>
   48ff0:	d8c02217 	ldw	r3,136(sp)
   48ff4:	0029883a 	mov	r20,zero
   48ff8:	18800104 	addi	r2,r3,4
   48ffc:	1cc0000b 	ldhu	r19,0(r3)
   49000:	803db20e 	bge	r16,zero,486cc <__alt_data_end+0xfffd66cc>
   49004:	003fb906 	br	48eec <__alt_data_end+0xfffd6eec>
   49008:	d9002217 	ldw	r4,136(sp)
   4900c:	0029883a 	mov	r20,zero
   49010:	24c00017 	ldw	r19,0(r4)
   49014:	21000104 	addi	r4,r4,4
   49018:	d9002215 	stw	r4,136(sp)
   4901c:	003d3206 	br	484e8 <__alt_data_end+0xfffd64e8>
   49020:	d8c02217 	ldw	r3,136(sp)
   49024:	1cc00017 	ldw	r19,0(r3)
   49028:	18c00104 	addi	r3,r3,4
   4902c:	d8c02215 	stw	r3,136(sp)
   49030:	9829d7fa 	srai	r20,r19,31
   49034:	a005883a 	mov	r2,r20
   49038:	003d4b06 	br	48568 <__alt_data_end+0xfffd6568>
   4903c:	0009883a 	mov	r4,zero
   49040:	01400044 	movi	r5,1
   49044:	d811883a 	mov	r8,sp
   49048:	003e4f06 	br	48988 <__alt_data_end+0xfffd6988>
   4904c:	d8c02215 	stw	r3,136(sp)
   49050:	002b883a 	mov	r21,zero
   49054:	003db806 	br	48738 <__alt_data_end+0xfffd6738>
   49058:	d811883a 	mov	r8,sp
   4905c:	003e9606 	br	48ab8 <__alt_data_end+0xfffd6ab8>
   49060:	01000174 	movhi	r4,5
   49064:	213f3f04 	addi	r4,r4,-772
   49068:	d9002315 	stw	r4,140(sp)
   4906c:	003e6306 	br	489fc <__alt_data_end+0xfffd69fc>
   49070:	b0c00043 	ldbu	r3,1(r22)
   49074:	8c400814 	ori	r17,r17,32
   49078:	b5800044 	addi	r22,r22,1
   4907c:	18c03fcc 	andi	r3,r3,255
   49080:	18c0201c 	xori	r3,r3,128
   49084:	18ffe004 	addi	r3,r3,-128
   49088:	003b9c06 	br	47efc <__alt_data_end+0xfffd5efc>
   4908c:	b809883a 	mov	r4,r23
   49090:	da002a15 	stw	r8,168(sp)
   49094:	00404f80 	call	404f8 <strlen>
   49098:	1029883a 	mov	r20,r2
   4909c:	dd401d83 	ldbu	r21,118(sp)
   490a0:	df002215 	stw	fp,136(sp)
   490a4:	0021883a 	mov	r16,zero
   490a8:	da002a17 	ldw	r8,168(sp)
   490ac:	003c3906 	br	48194 <__alt_data_end+0xfffd6194>
   490b0:	d9402017 	ldw	r5,128(sp)
   490b4:	d9002117 	ldw	r4,132(sp)
   490b8:	d9801a04 	addi	r6,sp,104
   490bc:	0047c740 	call	47c74 <__sprint_r.part.0>
   490c0:	103e691e 	bne	r2,zero,48a68 <__alt_data_end+0xfffd6a68>
   490c4:	d9001b17 	ldw	r4,108(sp)
   490c8:	d8801c17 	ldw	r2,112(sp)
   490cc:	d811883a 	mov	r8,sp
   490d0:	21400044 	addi	r5,r4,1
   490d4:	003e2e06 	br	48990 <__alt_data_end+0xfffd6990>
   490d8:	01000174 	movhi	r4,5
   490dc:	213f4304 	addi	r4,r4,-756
   490e0:	d9002315 	stw	r4,140(sp)
   490e4:	d9001b17 	ldw	r4,108(sp)
   490e8:	21000044 	addi	r4,r4,1
   490ec:	003c5e06 	br	48268 <__alt_data_end+0xfffd6268>
   490f0:	002b883a 	mov	r21,zero
   490f4:	00800084 	movi	r2,2
   490f8:	10803fcc 	andi	r2,r2,255
   490fc:	01000044 	movi	r4,1
   49100:	11002b26 	beq	r2,r4,491b0 <___vfiprintf_internal_r+0x1428>
   49104:	01000084 	movi	r4,2
   49108:	11002b1e 	bne	r2,r4,491b8 <___vfiprintf_internal_r+0x1430>
   4910c:	1823883a 	mov	r17,r3
   49110:	003ee506 	br	48ca8 <__alt_data_end+0xfffd6ca8>
   49114:	8807883a 	mov	r3,r17
   49118:	00800044 	movi	r2,1
   4911c:	003ff606 	br	490f8 <__alt_data_end+0xfffd70f8>
   49120:	00800184 	movi	r2,6
   49124:	1400012e 	bgeu	r2,r16,4912c <___vfiprintf_internal_r+0x13a4>
   49128:	1021883a 	mov	r16,r2
   4912c:	8029883a 	mov	r20,r16
   49130:	8027883a 	mov	r19,r16
   49134:	80002216 	blt	r16,zero,491c0 <___vfiprintf_internal_r+0x1438>
   49138:	05c00174 	movhi	r23,5
   4913c:	df002215 	stw	fp,136(sp)
   49140:	bdfee304 	addi	r23,r23,-1140
   49144:	003cfb06 	br	48534 <__alt_data_end+0xfffd6534>
   49148:	d9002217 	ldw	r4,136(sp)
   4914c:	d9402417 	ldw	r5,144(sp)
   49150:	20800017 	ldw	r2,0(r4)
   49154:	21000104 	addi	r4,r4,4
   49158:	d9002215 	stw	r4,136(sp)
   4915c:	11400015 	stw	r5,0(r2)
   49160:	003b3d06 	br	47e58 <__alt_data_end+0xfffd5e58>
   49164:	01400174 	movhi	r5,5
   49168:	297f4304 	addi	r5,r5,-756
   4916c:	d9402315 	stw	r5,140(sp)
   49170:	d9401b17 	ldw	r5,108(sp)
   49174:	29400044 	addi	r5,r5,1
   49178:	003e6d06 	br	48b30 <__alt_data_end+0xfffd6b30>
   4917c:	8029883a 	mov	r20,r16
   49180:	dd401d83 	ldbu	r21,118(sp)
   49184:	df002215 	stw	fp,136(sp)
   49188:	0021883a 	mov	r16,zero
   4918c:	003c0106 	br	48194 <__alt_data_end+0xfffd6194>
   49190:	00c00174 	movhi	r3,5
   49194:	18ff3f04 	addi	r3,r3,-772
   49198:	d8c02315 	stw	r3,140(sp)
   4919c:	280d883a 	mov	r6,r5
   491a0:	003c6906 	br	48348 <__alt_data_end+0xfffd6348>
   491a4:	802d883a 	mov	r22,r16
   491a8:	0021883a 	mov	r16,zero
   491ac:	003b5406 	br	47f00 <__alt_data_end+0xfffd5f00>
   491b0:	1823883a 	mov	r17,r3
   491b4:	003cf306 	br	48584 <__alt_data_end+0xfffd6584>
   491b8:	1823883a 	mov	r17,r3
   491bc:	003cad06 	br	48474 <__alt_data_end+0xfffd6474>
   491c0:	0027883a 	mov	r19,zero
   491c4:	003fdc06 	br	49138 <__alt_data_end+0xfffd7138>
   491c8:	d9402217 	ldw	r5,136(sp)
   491cc:	8005883a 	mov	r2,r16
   491d0:	b0c00043 	ldbu	r3,1(r22)
   491d4:	2c000017 	ldw	r16,0(r5)
   491d8:	29000104 	addi	r4,r5,4
   491dc:	d9002215 	stw	r4,136(sp)
   491e0:	102d883a 	mov	r22,r2
   491e4:	803fa50e 	bge	r16,zero,4907c <__alt_data_end+0xfffd707c>
   491e8:	18c03fcc 	andi	r3,r3,255
   491ec:	18c0201c 	xori	r3,r3,128
   491f0:	043fffc4 	movi	r16,-1
   491f4:	18ffe004 	addi	r3,r3,-128
   491f8:	003b4006 	br	47efc <__alt_data_end+0xfffd5efc>
   491fc:	d9402303 	ldbu	r5,140(sp)
   49200:	d9401d85 	stb	r5,118(sp)
   49204:	003cae06 	br	484c0 <__alt_data_end+0xfffd64c0>
   49208:	d8c02303 	ldbu	r3,140(sp)
   4920c:	d8c01d85 	stb	r3,118(sp)
   49210:	003d1406 	br	48664 <__alt_data_end+0xfffd6664>
   49214:	d8c02303 	ldbu	r3,140(sp)
   49218:	d8c01d85 	stb	r3,118(sp)
   4921c:	003cca06 	br	48548 <__alt_data_end+0xfffd6548>
   49220:	8880004c 	andi	r2,r17,1
   49224:	002b883a 	mov	r21,zero
   49228:	10000526 	beq	r2,zero,49240 <___vfiprintf_internal_r+0x14b8>
   4922c:	00800c04 	movi	r2,48
   49230:	d88019c5 	stb	r2,103(sp)
   49234:	dd002817 	ldw	r20,160(sp)
   49238:	ddc019c4 	addi	r23,sp,103
   4923c:	003bd506 	br	48194 <__alt_data_end+0xfffd6194>
   49240:	0029883a 	mov	r20,zero
   49244:	ddc01a04 	addi	r23,sp,104
   49248:	003bd206 	br	48194 <__alt_data_end+0xfffd6194>
   4924c:	d9002303 	ldbu	r4,140(sp)
   49250:	d9001d85 	stb	r4,118(sp)
   49254:	003da606 	br	488f0 <__alt_data_end+0xfffd68f0>
   49258:	d8c02303 	ldbu	r3,140(sp)
   4925c:	d8c01d85 	stb	r3,118(sp)
   49260:	003c7606 	br	4843c <__alt_data_end+0xfffd643c>
   49264:	d8c02303 	ldbu	r3,140(sp)
   49268:	d8c01d85 	stb	r3,118(sp)
   4926c:	003c6506 	br	48404 <__alt_data_end+0xfffd6404>
   49270:	d9002303 	ldbu	r4,140(sp)
   49274:	d9001d85 	stb	r4,118(sp)
   49278:	003d3d06 	br	48770 <__alt_data_end+0xfffd6770>
   4927c:	d8c02303 	ldbu	r3,140(sp)
   49280:	d8c01d85 	stb	r3,118(sp)
   49284:	003d1d06 	br	486fc <__alt_data_end+0xfffd66fc>
   49288:	d8c02303 	ldbu	r3,140(sp)
   4928c:	d8c01d85 	stb	r3,118(sp)
   49290:	003d0306 	br	486a0 <__alt_data_end+0xfffd66a0>

00049294 <__vfiprintf_internal>:
   49294:	00800174 	movhi	r2,5
   49298:	10863c04 	addi	r2,r2,6384
   4929c:	300f883a 	mov	r7,r6
   492a0:	280d883a 	mov	r6,r5
   492a4:	200b883a 	mov	r5,r4
   492a8:	11000017 	ldw	r4,0(r2)
   492ac:	0047d881 	jmpi	47d88 <___vfiprintf_internal_r>

000492b0 <__sbprintf>:
   492b0:	2880030b 	ldhu	r2,12(r5)
   492b4:	2ac01917 	ldw	r11,100(r5)
   492b8:	2a80038b 	ldhu	r10,14(r5)
   492bc:	2a400717 	ldw	r9,28(r5)
   492c0:	2a000917 	ldw	r8,36(r5)
   492c4:	defee204 	addi	sp,sp,-1144
   492c8:	00c10004 	movi	r3,1024
   492cc:	dc011a15 	stw	r16,1128(sp)
   492d0:	10bfff4c 	andi	r2,r2,65533
   492d4:	2821883a 	mov	r16,r5
   492d8:	d8cb883a 	add	r5,sp,r3
   492dc:	dc811c15 	stw	r18,1136(sp)
   492e0:	dc411b15 	stw	r17,1132(sp)
   492e4:	dfc11d15 	stw	ra,1140(sp)
   492e8:	2025883a 	mov	r18,r4
   492ec:	d881030d 	sth	r2,1036(sp)
   492f0:	dac11915 	stw	r11,1124(sp)
   492f4:	da81038d 	sth	r10,1038(sp)
   492f8:	da410715 	stw	r9,1052(sp)
   492fc:	da010915 	stw	r8,1060(sp)
   49300:	dec10015 	stw	sp,1024(sp)
   49304:	dec10415 	stw	sp,1040(sp)
   49308:	d8c10215 	stw	r3,1032(sp)
   4930c:	d8c10515 	stw	r3,1044(sp)
   49310:	d8010615 	stw	zero,1048(sp)
   49314:	0047d880 	call	47d88 <___vfiprintf_internal_r>
   49318:	1023883a 	mov	r17,r2
   4931c:	10000416 	blt	r2,zero,49330 <__sbprintf+0x80>
   49320:	d9410004 	addi	r5,sp,1024
   49324:	9009883a 	mov	r4,r18
   49328:	00445640 	call	44564 <_fflush_r>
   4932c:	10000d1e 	bne	r2,zero,49364 <__sbprintf+0xb4>
   49330:	d881030b 	ldhu	r2,1036(sp)
   49334:	1080100c 	andi	r2,r2,64
   49338:	10000326 	beq	r2,zero,49348 <__sbprintf+0x98>
   4933c:	8080030b 	ldhu	r2,12(r16)
   49340:	10801014 	ori	r2,r2,64
   49344:	8080030d 	sth	r2,12(r16)
   49348:	8805883a 	mov	r2,r17
   4934c:	dfc11d17 	ldw	ra,1140(sp)
   49350:	dc811c17 	ldw	r18,1136(sp)
   49354:	dc411b17 	ldw	r17,1132(sp)
   49358:	dc011a17 	ldw	r16,1128(sp)
   4935c:	dec11e04 	addi	sp,sp,1144
   49360:	f800283a 	ret
   49364:	047fffc4 	movi	r17,-1
   49368:	003ff106 	br	49330 <__alt_data_end+0xfffd7330>

0004936c <_write_r>:
   4936c:	defffd04 	addi	sp,sp,-12
   49370:	2805883a 	mov	r2,r5
   49374:	dc000015 	stw	r16,0(sp)
   49378:	04000174 	movhi	r16,5
   4937c:	dc400115 	stw	r17,4(sp)
   49380:	300b883a 	mov	r5,r6
   49384:	840d0e04 	addi	r16,r16,13368
   49388:	2023883a 	mov	r17,r4
   4938c:	380d883a 	mov	r6,r7
   49390:	1009883a 	mov	r4,r2
   49394:	dfc00215 	stw	ra,8(sp)
   49398:	80000015 	stw	zero,0(r16)
   4939c:	004de5c0 	call	4de5c <write>
   493a0:	00ffffc4 	movi	r3,-1
   493a4:	10c00526 	beq	r2,r3,493bc <_write_r+0x50>
   493a8:	dfc00217 	ldw	ra,8(sp)
   493ac:	dc400117 	ldw	r17,4(sp)
   493b0:	dc000017 	ldw	r16,0(sp)
   493b4:	dec00304 	addi	sp,sp,12
   493b8:	f800283a 	ret
   493bc:	80c00017 	ldw	r3,0(r16)
   493c0:	183ff926 	beq	r3,zero,493a8 <__alt_data_end+0xfffd73a8>
   493c4:	88c00015 	stw	r3,0(r17)
   493c8:	003ff706 	br	493a8 <__alt_data_end+0xfffd73a8>

000493cc <_close_r>:
   493cc:	defffd04 	addi	sp,sp,-12
   493d0:	dc000015 	stw	r16,0(sp)
   493d4:	04000174 	movhi	r16,5
   493d8:	dc400115 	stw	r17,4(sp)
   493dc:	840d0e04 	addi	r16,r16,13368
   493e0:	2023883a 	mov	r17,r4
   493e4:	2809883a 	mov	r4,r5
   493e8:	dfc00215 	stw	ra,8(sp)
   493ec:	80000015 	stw	zero,0(r16)
   493f0:	004d3340 	call	4d334 <close>
   493f4:	00ffffc4 	movi	r3,-1
   493f8:	10c00526 	beq	r2,r3,49410 <_close_r+0x44>
   493fc:	dfc00217 	ldw	ra,8(sp)
   49400:	dc400117 	ldw	r17,4(sp)
   49404:	dc000017 	ldw	r16,0(sp)
   49408:	dec00304 	addi	sp,sp,12
   4940c:	f800283a 	ret
   49410:	80c00017 	ldw	r3,0(r16)
   49414:	183ff926 	beq	r3,zero,493fc <__alt_data_end+0xfffd73fc>
   49418:	88c00015 	stw	r3,0(r17)
   4941c:	003ff706 	br	493fc <__alt_data_end+0xfffd73fc>

00049420 <_calloc_r>:
   49420:	defffe04 	addi	sp,sp,-8
   49424:	2805883a 	mov	r2,r5
   49428:	dc000015 	stw	r16,0(sp)
   4942c:	300b883a 	mov	r5,r6
   49430:	2021883a 	mov	r16,r4
   49434:	1009883a 	mov	r4,r2
   49438:	dfc00115 	stw	ra,4(sp)
   4943c:	004aa2c0 	call	4aa2c <__mulsi3>
   49440:	100b883a 	mov	r5,r2
   49444:	8009883a 	mov	r4,r16
   49448:	00456bc0 	call	456bc <_malloc_r>
   4944c:	10002926 	beq	r2,zero,494f4 <_calloc_r+0xd4>
   49450:	11bfff17 	ldw	r6,-4(r2)
   49454:	1021883a 	mov	r16,r2
   49458:	00bfff04 	movi	r2,-4
   4945c:	308c703a 	and	r6,r6,r2
   49460:	00c00904 	movi	r3,36
   49464:	308d883a 	add	r6,r6,r2
   49468:	19801636 	bltu	r3,r6,494c4 <_calloc_r+0xa4>
   4946c:	008004c4 	movi	r2,19
   49470:	11800b2e 	bgeu	r2,r6,494a0 <_calloc_r+0x80>
   49474:	80000015 	stw	zero,0(r16)
   49478:	80000115 	stw	zero,4(r16)
   4947c:	008006c4 	movi	r2,27
   49480:	11801a2e 	bgeu	r2,r6,494ec <_calloc_r+0xcc>
   49484:	80000215 	stw	zero,8(r16)
   49488:	80000315 	stw	zero,12(r16)
   4948c:	30c0151e 	bne	r6,r3,494e4 <_calloc_r+0xc4>
   49490:	80000415 	stw	zero,16(r16)
   49494:	80800604 	addi	r2,r16,24
   49498:	80000515 	stw	zero,20(r16)
   4949c:	00000106 	br	494a4 <_calloc_r+0x84>
   494a0:	8005883a 	mov	r2,r16
   494a4:	10000015 	stw	zero,0(r2)
   494a8:	10000115 	stw	zero,4(r2)
   494ac:	10000215 	stw	zero,8(r2)
   494b0:	8005883a 	mov	r2,r16
   494b4:	dfc00117 	ldw	ra,4(sp)
   494b8:	dc000017 	ldw	r16,0(sp)
   494bc:	dec00204 	addi	sp,sp,8
   494c0:	f800283a 	ret
   494c4:	000b883a 	mov	r5,zero
   494c8:	8009883a 	mov	r4,r16
   494cc:	00462500 	call	46250 <memset>
   494d0:	8005883a 	mov	r2,r16
   494d4:	dfc00117 	ldw	ra,4(sp)
   494d8:	dc000017 	ldw	r16,0(sp)
   494dc:	dec00204 	addi	sp,sp,8
   494e0:	f800283a 	ret
   494e4:	80800404 	addi	r2,r16,16
   494e8:	003fee06 	br	494a4 <__alt_data_end+0xfffd74a4>
   494ec:	80800204 	addi	r2,r16,8
   494f0:	003fec06 	br	494a4 <__alt_data_end+0xfffd74a4>
   494f4:	0005883a 	mov	r2,zero
   494f8:	003fee06 	br	494b4 <__alt_data_end+0xfffd74b4>

000494fc <_fclose_r>:
   494fc:	28003926 	beq	r5,zero,495e4 <_fclose_r+0xe8>
   49500:	defffc04 	addi	sp,sp,-16
   49504:	dc400115 	stw	r17,4(sp)
   49508:	dc000015 	stw	r16,0(sp)
   4950c:	dfc00315 	stw	ra,12(sp)
   49510:	dc800215 	stw	r18,8(sp)
   49514:	2023883a 	mov	r17,r4
   49518:	2821883a 	mov	r16,r5
   4951c:	20000226 	beq	r4,zero,49528 <_fclose_r+0x2c>
   49520:	20800e17 	ldw	r2,56(r4)
   49524:	10002726 	beq	r2,zero,495c4 <_fclose_r+0xc8>
   49528:	8080030f 	ldh	r2,12(r16)
   4952c:	1000071e 	bne	r2,zero,4954c <_fclose_r+0x50>
   49530:	0005883a 	mov	r2,zero
   49534:	dfc00317 	ldw	ra,12(sp)
   49538:	dc800217 	ldw	r18,8(sp)
   4953c:	dc400117 	ldw	r17,4(sp)
   49540:	dc000017 	ldw	r16,0(sp)
   49544:	dec00404 	addi	sp,sp,16
   49548:	f800283a 	ret
   4954c:	800b883a 	mov	r5,r16
   49550:	8809883a 	mov	r4,r17
   49554:	00443480 	call	44348 <__sflush_r>
   49558:	1025883a 	mov	r18,r2
   4955c:	80800b17 	ldw	r2,44(r16)
   49560:	10000426 	beq	r2,zero,49574 <_fclose_r+0x78>
   49564:	81400717 	ldw	r5,28(r16)
   49568:	8809883a 	mov	r4,r17
   4956c:	103ee83a 	callr	r2
   49570:	10001616 	blt	r2,zero,495cc <_fclose_r+0xd0>
   49574:	8080030b 	ldhu	r2,12(r16)
   49578:	1080200c 	andi	r2,r2,128
   4957c:	1000151e 	bne	r2,zero,495d4 <_fclose_r+0xd8>
   49580:	81400c17 	ldw	r5,48(r16)
   49584:	28000526 	beq	r5,zero,4959c <_fclose_r+0xa0>
   49588:	80801004 	addi	r2,r16,64
   4958c:	28800226 	beq	r5,r2,49598 <_fclose_r+0x9c>
   49590:	8809883a 	mov	r4,r17
   49594:	0044ac40 	call	44ac4 <_free_r>
   49598:	80000c15 	stw	zero,48(r16)
   4959c:	81401117 	ldw	r5,68(r16)
   495a0:	28000326 	beq	r5,zero,495b0 <_fclose_r+0xb4>
   495a4:	8809883a 	mov	r4,r17
   495a8:	0044ac40 	call	44ac4 <_free_r>
   495ac:	80001115 	stw	zero,68(r16)
   495b0:	00449600 	call	44960 <__sfp_lock_acquire>
   495b4:	8000030d 	sth	zero,12(r16)
   495b8:	00449640 	call	44964 <__sfp_lock_release>
   495bc:	9005883a 	mov	r2,r18
   495c0:	003fdc06 	br	49534 <__alt_data_end+0xfffd7534>
   495c4:	00449500 	call	44950 <__sinit>
   495c8:	003fd706 	br	49528 <__alt_data_end+0xfffd7528>
   495cc:	04bfffc4 	movi	r18,-1
   495d0:	003fe806 	br	49574 <__alt_data_end+0xfffd7574>
   495d4:	81400417 	ldw	r5,16(r16)
   495d8:	8809883a 	mov	r4,r17
   495dc:	0044ac40 	call	44ac4 <_free_r>
   495e0:	003fe706 	br	49580 <__alt_data_end+0xfffd7580>
   495e4:	0005883a 	mov	r2,zero
   495e8:	f800283a 	ret

000495ec <fclose>:
   495ec:	00800174 	movhi	r2,5
   495f0:	10863c04 	addi	r2,r2,6384
   495f4:	200b883a 	mov	r5,r4
   495f8:	11000017 	ldw	r4,0(r2)
   495fc:	00494fc1 	jmpi	494fc <_fclose_r>

00049600 <__fputwc>:
   49600:	defff804 	addi	sp,sp,-32
   49604:	dcc00415 	stw	r19,16(sp)
   49608:	dc800315 	stw	r18,12(sp)
   4960c:	dc000115 	stw	r16,4(sp)
   49610:	dfc00715 	stw	ra,28(sp)
   49614:	dd400615 	stw	r21,24(sp)
   49618:	dd000515 	stw	r20,20(sp)
   4961c:	dc400215 	stw	r17,8(sp)
   49620:	2027883a 	mov	r19,r4
   49624:	2825883a 	mov	r18,r5
   49628:	3021883a 	mov	r16,r6
   4962c:	00454ac0 	call	454ac <__locale_mb_cur_max>
   49630:	00c00044 	movi	r3,1
   49634:	10c03e26 	beq	r2,r3,49730 <__fputwc+0x130>
   49638:	81c01704 	addi	r7,r16,92
   4963c:	900d883a 	mov	r6,r18
   49640:	d80b883a 	mov	r5,sp
   49644:	9809883a 	mov	r4,r19
   49648:	0049ad00 	call	49ad0 <_wcrtomb_r>
   4964c:	1029883a 	mov	r20,r2
   49650:	00bfffc4 	movi	r2,-1
   49654:	a0802026 	beq	r20,r2,496d8 <__fputwc+0xd8>
   49658:	d9400003 	ldbu	r5,0(sp)
   4965c:	a0001c26 	beq	r20,zero,496d0 <__fputwc+0xd0>
   49660:	0023883a 	mov	r17,zero
   49664:	05400284 	movi	r21,10
   49668:	00000906 	br	49690 <__fputwc+0x90>
   4966c:	80800017 	ldw	r2,0(r16)
   49670:	11400005 	stb	r5,0(r2)
   49674:	80c00017 	ldw	r3,0(r16)
   49678:	18c00044 	addi	r3,r3,1
   4967c:	80c00015 	stw	r3,0(r16)
   49680:	8c400044 	addi	r17,r17,1
   49684:	dc45883a 	add	r2,sp,r17
   49688:	8d00112e 	bgeu	r17,r20,496d0 <__fputwc+0xd0>
   4968c:	11400003 	ldbu	r5,0(r2)
   49690:	80c00217 	ldw	r3,8(r16)
   49694:	18ffffc4 	addi	r3,r3,-1
   49698:	80c00215 	stw	r3,8(r16)
   4969c:	183ff30e 	bge	r3,zero,4966c <__alt_data_end+0xfffd766c>
   496a0:	80800617 	ldw	r2,24(r16)
   496a4:	18801916 	blt	r3,r2,4970c <__fputwc+0x10c>
   496a8:	80800017 	ldw	r2,0(r16)
   496ac:	11400005 	stb	r5,0(r2)
   496b0:	80800017 	ldw	r2,0(r16)
   496b4:	10c00003 	ldbu	r3,0(r2)
   496b8:	10800044 	addi	r2,r2,1
   496bc:	1d402326 	beq	r3,r21,4974c <__fputwc+0x14c>
   496c0:	80800015 	stw	r2,0(r16)
   496c4:	8c400044 	addi	r17,r17,1
   496c8:	dc45883a 	add	r2,sp,r17
   496cc:	8d3fef36 	bltu	r17,r20,4968c <__alt_data_end+0xfffd768c>
   496d0:	9005883a 	mov	r2,r18
   496d4:	00000406 	br	496e8 <__fputwc+0xe8>
   496d8:	80c0030b 	ldhu	r3,12(r16)
   496dc:	a005883a 	mov	r2,r20
   496e0:	18c01014 	ori	r3,r3,64
   496e4:	80c0030d 	sth	r3,12(r16)
   496e8:	dfc00717 	ldw	ra,28(sp)
   496ec:	dd400617 	ldw	r21,24(sp)
   496f0:	dd000517 	ldw	r20,20(sp)
   496f4:	dcc00417 	ldw	r19,16(sp)
   496f8:	dc800317 	ldw	r18,12(sp)
   496fc:	dc400217 	ldw	r17,8(sp)
   49700:	dc000117 	ldw	r16,4(sp)
   49704:	dec00804 	addi	sp,sp,32
   49708:	f800283a 	ret
   4970c:	800d883a 	mov	r6,r16
   49710:	29403fcc 	andi	r5,r5,255
   49714:	9809883a 	mov	r4,r19
   49718:	00499780 	call	49978 <__swbuf_r>
   4971c:	10bfffe0 	cmpeqi	r2,r2,-1
   49720:	10803fcc 	andi	r2,r2,255
   49724:	103fd626 	beq	r2,zero,49680 <__alt_data_end+0xfffd7680>
   49728:	00bfffc4 	movi	r2,-1
   4972c:	003fee06 	br	496e8 <__alt_data_end+0xfffd76e8>
   49730:	90ffffc4 	addi	r3,r18,-1
   49734:	01003f84 	movi	r4,254
   49738:	20ffbf36 	bltu	r4,r3,49638 <__alt_data_end+0xfffd7638>
   4973c:	900b883a 	mov	r5,r18
   49740:	dc800005 	stb	r18,0(sp)
   49744:	1029883a 	mov	r20,r2
   49748:	003fc506 	br	49660 <__alt_data_end+0xfffd7660>
   4974c:	800d883a 	mov	r6,r16
   49750:	a80b883a 	mov	r5,r21
   49754:	9809883a 	mov	r4,r19
   49758:	00499780 	call	49978 <__swbuf_r>
   4975c:	10bfffe0 	cmpeqi	r2,r2,-1
   49760:	003fef06 	br	49720 <__alt_data_end+0xfffd7720>

00049764 <_fputwc_r>:
   49764:	3080030b 	ldhu	r2,12(r6)
   49768:	10c8000c 	andi	r3,r2,8192
   4976c:	1800051e 	bne	r3,zero,49784 <_fputwc_r+0x20>
   49770:	30c01917 	ldw	r3,100(r6)
   49774:	10880014 	ori	r2,r2,8192
   49778:	3080030d 	sth	r2,12(r6)
   4977c:	18880014 	ori	r2,r3,8192
   49780:	30801915 	stw	r2,100(r6)
   49784:	00496001 	jmpi	49600 <__fputwc>

00049788 <fputwc>:
   49788:	00800174 	movhi	r2,5
   4978c:	defffc04 	addi	sp,sp,-16
   49790:	10863c04 	addi	r2,r2,6384
   49794:	dc000115 	stw	r16,4(sp)
   49798:	14000017 	ldw	r16,0(r2)
   4979c:	dc400215 	stw	r17,8(sp)
   497a0:	dfc00315 	stw	ra,12(sp)
   497a4:	2023883a 	mov	r17,r4
   497a8:	80000226 	beq	r16,zero,497b4 <fputwc+0x2c>
   497ac:	80800e17 	ldw	r2,56(r16)
   497b0:	10001026 	beq	r2,zero,497f4 <fputwc+0x6c>
   497b4:	2880030b 	ldhu	r2,12(r5)
   497b8:	10c8000c 	andi	r3,r2,8192
   497bc:	1800051e 	bne	r3,zero,497d4 <fputwc+0x4c>
   497c0:	28c01917 	ldw	r3,100(r5)
   497c4:	10880014 	ori	r2,r2,8192
   497c8:	2880030d 	sth	r2,12(r5)
   497cc:	18880014 	ori	r2,r3,8192
   497d0:	28801915 	stw	r2,100(r5)
   497d4:	280d883a 	mov	r6,r5
   497d8:	8009883a 	mov	r4,r16
   497dc:	880b883a 	mov	r5,r17
   497e0:	dfc00317 	ldw	ra,12(sp)
   497e4:	dc400217 	ldw	r17,8(sp)
   497e8:	dc000117 	ldw	r16,4(sp)
   497ec:	dec00404 	addi	sp,sp,16
   497f0:	00496001 	jmpi	49600 <__fputwc>
   497f4:	8009883a 	mov	r4,r16
   497f8:	d9400015 	stw	r5,0(sp)
   497fc:	00449500 	call	44950 <__sinit>
   49800:	d9400017 	ldw	r5,0(sp)
   49804:	003feb06 	br	497b4 <__alt_data_end+0xfffd77b4>

00049808 <_fstat_r>:
   49808:	defffd04 	addi	sp,sp,-12
   4980c:	2805883a 	mov	r2,r5
   49810:	dc000015 	stw	r16,0(sp)
   49814:	04000174 	movhi	r16,5
   49818:	dc400115 	stw	r17,4(sp)
   4981c:	840d0e04 	addi	r16,r16,13368
   49820:	2023883a 	mov	r17,r4
   49824:	300b883a 	mov	r5,r6
   49828:	1009883a 	mov	r4,r2
   4982c:	dfc00215 	stw	ra,8(sp)
   49830:	80000015 	stw	zero,0(r16)
   49834:	004d4740 	call	4d474 <fstat>
   49838:	00ffffc4 	movi	r3,-1
   4983c:	10c00526 	beq	r2,r3,49854 <_fstat_r+0x4c>
   49840:	dfc00217 	ldw	ra,8(sp)
   49844:	dc400117 	ldw	r17,4(sp)
   49848:	dc000017 	ldw	r16,0(sp)
   4984c:	dec00304 	addi	sp,sp,12
   49850:	f800283a 	ret
   49854:	80c00017 	ldw	r3,0(r16)
   49858:	183ff926 	beq	r3,zero,49840 <__alt_data_end+0xfffd7840>
   4985c:	88c00015 	stw	r3,0(r17)
   49860:	003ff706 	br	49840 <__alt_data_end+0xfffd7840>

00049864 <_isatty_r>:
   49864:	defffd04 	addi	sp,sp,-12
   49868:	dc000015 	stw	r16,0(sp)
   4986c:	04000174 	movhi	r16,5
   49870:	dc400115 	stw	r17,4(sp)
   49874:	840d0e04 	addi	r16,r16,13368
   49878:	2023883a 	mov	r17,r4
   4987c:	2809883a 	mov	r4,r5
   49880:	dfc00215 	stw	ra,8(sp)
   49884:	80000015 	stw	zero,0(r16)
   49888:	004d8080 	call	4d808 <isatty>
   4988c:	00ffffc4 	movi	r3,-1
   49890:	10c00526 	beq	r2,r3,498a8 <_isatty_r+0x44>
   49894:	dfc00217 	ldw	ra,8(sp)
   49898:	dc400117 	ldw	r17,4(sp)
   4989c:	dc000017 	ldw	r16,0(sp)
   498a0:	dec00304 	addi	sp,sp,12
   498a4:	f800283a 	ret
   498a8:	80c00017 	ldw	r3,0(r16)
   498ac:	183ff926 	beq	r3,zero,49894 <__alt_data_end+0xfffd7894>
   498b0:	88c00015 	stw	r3,0(r17)
   498b4:	003ff706 	br	49894 <__alt_data_end+0xfffd7894>

000498b8 <_lseek_r>:
   498b8:	defffd04 	addi	sp,sp,-12
   498bc:	2805883a 	mov	r2,r5
   498c0:	dc000015 	stw	r16,0(sp)
   498c4:	04000174 	movhi	r16,5
   498c8:	dc400115 	stw	r17,4(sp)
   498cc:	300b883a 	mov	r5,r6
   498d0:	840d0e04 	addi	r16,r16,13368
   498d4:	2023883a 	mov	r17,r4
   498d8:	380d883a 	mov	r6,r7
   498dc:	1009883a 	mov	r4,r2
   498e0:	dfc00215 	stw	ra,8(sp)
   498e4:	80000015 	stw	zero,0(r16)
   498e8:	004d9dc0 	call	4d9dc <lseek>
   498ec:	00ffffc4 	movi	r3,-1
   498f0:	10c00526 	beq	r2,r3,49908 <_lseek_r+0x50>
   498f4:	dfc00217 	ldw	ra,8(sp)
   498f8:	dc400117 	ldw	r17,4(sp)
   498fc:	dc000017 	ldw	r16,0(sp)
   49900:	dec00304 	addi	sp,sp,12
   49904:	f800283a 	ret
   49908:	80c00017 	ldw	r3,0(r16)
   4990c:	183ff926 	beq	r3,zero,498f4 <__alt_data_end+0xfffd78f4>
   49910:	88c00015 	stw	r3,0(r17)
   49914:	003ff706 	br	498f4 <__alt_data_end+0xfffd78f4>

00049918 <_read_r>:
   49918:	defffd04 	addi	sp,sp,-12
   4991c:	2805883a 	mov	r2,r5
   49920:	dc000015 	stw	r16,0(sp)
   49924:	04000174 	movhi	r16,5
   49928:	dc400115 	stw	r17,4(sp)
   4992c:	300b883a 	mov	r5,r6
   49930:	840d0e04 	addi	r16,r16,13368
   49934:	2023883a 	mov	r17,r4
   49938:	380d883a 	mov	r6,r7
   4993c:	1009883a 	mov	r4,r2
   49940:	dfc00215 	stw	ra,8(sp)
   49944:	80000015 	stw	zero,0(r16)
   49948:	004dbb80 	call	4dbb8 <read>
   4994c:	00ffffc4 	movi	r3,-1
   49950:	10c00526 	beq	r2,r3,49968 <_read_r+0x50>
   49954:	dfc00217 	ldw	ra,8(sp)
   49958:	dc400117 	ldw	r17,4(sp)
   4995c:	dc000017 	ldw	r16,0(sp)
   49960:	dec00304 	addi	sp,sp,12
   49964:	f800283a 	ret
   49968:	80c00017 	ldw	r3,0(r16)
   4996c:	183ff926 	beq	r3,zero,49954 <__alt_data_end+0xfffd7954>
   49970:	88c00015 	stw	r3,0(r17)
   49974:	003ff706 	br	49954 <__alt_data_end+0xfffd7954>

00049978 <__swbuf_r>:
   49978:	defffb04 	addi	sp,sp,-20
   4997c:	dcc00315 	stw	r19,12(sp)
   49980:	dc800215 	stw	r18,8(sp)
   49984:	dc000015 	stw	r16,0(sp)
   49988:	dfc00415 	stw	ra,16(sp)
   4998c:	dc400115 	stw	r17,4(sp)
   49990:	2025883a 	mov	r18,r4
   49994:	2827883a 	mov	r19,r5
   49998:	3021883a 	mov	r16,r6
   4999c:	20000226 	beq	r4,zero,499a8 <__swbuf_r+0x30>
   499a0:	20800e17 	ldw	r2,56(r4)
   499a4:	10004226 	beq	r2,zero,49ab0 <__swbuf_r+0x138>
   499a8:	80800617 	ldw	r2,24(r16)
   499ac:	8100030b 	ldhu	r4,12(r16)
   499b0:	80800215 	stw	r2,8(r16)
   499b4:	2080020c 	andi	r2,r4,8
   499b8:	10003626 	beq	r2,zero,49a94 <__swbuf_r+0x11c>
   499bc:	80c00417 	ldw	r3,16(r16)
   499c0:	18003426 	beq	r3,zero,49a94 <__swbuf_r+0x11c>
   499c4:	2088000c 	andi	r2,r4,8192
   499c8:	9c403fcc 	andi	r17,r19,255
   499cc:	10001a26 	beq	r2,zero,49a38 <__swbuf_r+0xc0>
   499d0:	80800017 	ldw	r2,0(r16)
   499d4:	81000517 	ldw	r4,20(r16)
   499d8:	10c7c83a 	sub	r3,r2,r3
   499dc:	1900200e 	bge	r3,r4,49a60 <__swbuf_r+0xe8>
   499e0:	18c00044 	addi	r3,r3,1
   499e4:	81000217 	ldw	r4,8(r16)
   499e8:	11400044 	addi	r5,r2,1
   499ec:	81400015 	stw	r5,0(r16)
   499f0:	213fffc4 	addi	r4,r4,-1
   499f4:	81000215 	stw	r4,8(r16)
   499f8:	14c00005 	stb	r19,0(r2)
   499fc:	80800517 	ldw	r2,20(r16)
   49a00:	10c01e26 	beq	r2,r3,49a7c <__swbuf_r+0x104>
   49a04:	8080030b 	ldhu	r2,12(r16)
   49a08:	1080004c 	andi	r2,r2,1
   49a0c:	10000226 	beq	r2,zero,49a18 <__swbuf_r+0xa0>
   49a10:	00800284 	movi	r2,10
   49a14:	88801926 	beq	r17,r2,49a7c <__swbuf_r+0x104>
   49a18:	8805883a 	mov	r2,r17
   49a1c:	dfc00417 	ldw	ra,16(sp)
   49a20:	dcc00317 	ldw	r19,12(sp)
   49a24:	dc800217 	ldw	r18,8(sp)
   49a28:	dc400117 	ldw	r17,4(sp)
   49a2c:	dc000017 	ldw	r16,0(sp)
   49a30:	dec00504 	addi	sp,sp,20
   49a34:	f800283a 	ret
   49a38:	81401917 	ldw	r5,100(r16)
   49a3c:	00b7ffc4 	movi	r2,-8193
   49a40:	21080014 	ori	r4,r4,8192
   49a44:	2884703a 	and	r2,r5,r2
   49a48:	80801915 	stw	r2,100(r16)
   49a4c:	80800017 	ldw	r2,0(r16)
   49a50:	8100030d 	sth	r4,12(r16)
   49a54:	81000517 	ldw	r4,20(r16)
   49a58:	10c7c83a 	sub	r3,r2,r3
   49a5c:	193fe016 	blt	r3,r4,499e0 <__alt_data_end+0xfffd79e0>
   49a60:	800b883a 	mov	r5,r16
   49a64:	9009883a 	mov	r4,r18
   49a68:	00445640 	call	44564 <_fflush_r>
   49a6c:	1000071e 	bne	r2,zero,49a8c <__swbuf_r+0x114>
   49a70:	80800017 	ldw	r2,0(r16)
   49a74:	00c00044 	movi	r3,1
   49a78:	003fda06 	br	499e4 <__alt_data_end+0xfffd79e4>
   49a7c:	800b883a 	mov	r5,r16
   49a80:	9009883a 	mov	r4,r18
   49a84:	00445640 	call	44564 <_fflush_r>
   49a88:	103fe326 	beq	r2,zero,49a18 <__alt_data_end+0xfffd7a18>
   49a8c:	00bfffc4 	movi	r2,-1
   49a90:	003fe206 	br	49a1c <__alt_data_end+0xfffd7a1c>
   49a94:	800b883a 	mov	r5,r16
   49a98:	9009883a 	mov	r4,r18
   49a9c:	00429440 	call	42944 <__swsetup_r>
   49aa0:	103ffa1e 	bne	r2,zero,49a8c <__alt_data_end+0xfffd7a8c>
   49aa4:	8100030b 	ldhu	r4,12(r16)
   49aa8:	80c00417 	ldw	r3,16(r16)
   49aac:	003fc506 	br	499c4 <__alt_data_end+0xfffd79c4>
   49ab0:	00449500 	call	44950 <__sinit>
   49ab4:	003fbc06 	br	499a8 <__alt_data_end+0xfffd79a8>

00049ab8 <__swbuf>:
   49ab8:	00800174 	movhi	r2,5
   49abc:	10863c04 	addi	r2,r2,6384
   49ac0:	280d883a 	mov	r6,r5
   49ac4:	200b883a 	mov	r5,r4
   49ac8:	11000017 	ldw	r4,0(r2)
   49acc:	00499781 	jmpi	49978 <__swbuf_r>

00049ad0 <_wcrtomb_r>:
   49ad0:	defff604 	addi	sp,sp,-40
   49ad4:	00800174 	movhi	r2,5
   49ad8:	dc800815 	stw	r18,32(sp)
   49adc:	dc400715 	stw	r17,28(sp)
   49ae0:	dc000615 	stw	r16,24(sp)
   49ae4:	10864004 	addi	r2,r2,6400
   49ae8:	dfc00915 	stw	ra,36(sp)
   49aec:	2021883a 	mov	r16,r4
   49af0:	3823883a 	mov	r17,r7
   49af4:	14800017 	ldw	r18,0(r2)
   49af8:	28001426 	beq	r5,zero,49b4c <_wcrtomb_r+0x7c>
   49afc:	d9400415 	stw	r5,16(sp)
   49b00:	d9800515 	stw	r6,20(sp)
   49b04:	00454a00 	call	454a0 <__locale_charset>
   49b08:	d9800517 	ldw	r6,20(sp)
   49b0c:	d9400417 	ldw	r5,16(sp)
   49b10:	100f883a 	mov	r7,r2
   49b14:	dc400015 	stw	r17,0(sp)
   49b18:	8009883a 	mov	r4,r16
   49b1c:	903ee83a 	callr	r18
   49b20:	00ffffc4 	movi	r3,-1
   49b24:	10c0031e 	bne	r2,r3,49b34 <_wcrtomb_r+0x64>
   49b28:	88000015 	stw	zero,0(r17)
   49b2c:	00c02284 	movi	r3,138
   49b30:	80c00015 	stw	r3,0(r16)
   49b34:	dfc00917 	ldw	ra,36(sp)
   49b38:	dc800817 	ldw	r18,32(sp)
   49b3c:	dc400717 	ldw	r17,28(sp)
   49b40:	dc000617 	ldw	r16,24(sp)
   49b44:	dec00a04 	addi	sp,sp,40
   49b48:	f800283a 	ret
   49b4c:	00454a00 	call	454a0 <__locale_charset>
   49b50:	100f883a 	mov	r7,r2
   49b54:	dc400015 	stw	r17,0(sp)
   49b58:	000d883a 	mov	r6,zero
   49b5c:	d9400104 	addi	r5,sp,4
   49b60:	8009883a 	mov	r4,r16
   49b64:	903ee83a 	callr	r18
   49b68:	003fed06 	br	49b20 <__alt_data_end+0xfffd7b20>

00049b6c <wcrtomb>:
   49b6c:	defff604 	addi	sp,sp,-40
   49b70:	00800174 	movhi	r2,5
   49b74:	dc800615 	stw	r18,24(sp)
   49b78:	dc400515 	stw	r17,20(sp)
   49b7c:	10863c04 	addi	r2,r2,6384
   49b80:	dfc00915 	stw	ra,36(sp)
   49b84:	dd000815 	stw	r20,32(sp)
   49b88:	dcc00715 	stw	r19,28(sp)
   49b8c:	dc000415 	stw	r16,16(sp)
   49b90:	3025883a 	mov	r18,r6
   49b94:	14400017 	ldw	r17,0(r2)
   49b98:	20001926 	beq	r4,zero,49c00 <wcrtomb+0x94>
   49b9c:	00800174 	movhi	r2,5
   49ba0:	10864004 	addi	r2,r2,6400
   49ba4:	15000017 	ldw	r20,0(r2)
   49ba8:	2021883a 	mov	r16,r4
   49bac:	2827883a 	mov	r19,r5
   49bb0:	00454a00 	call	454a0 <__locale_charset>
   49bb4:	100f883a 	mov	r7,r2
   49bb8:	dc800015 	stw	r18,0(sp)
   49bbc:	980d883a 	mov	r6,r19
   49bc0:	800b883a 	mov	r5,r16
   49bc4:	8809883a 	mov	r4,r17
   49bc8:	a03ee83a 	callr	r20
   49bcc:	00ffffc4 	movi	r3,-1
   49bd0:	10c0031e 	bne	r2,r3,49be0 <wcrtomb+0x74>
   49bd4:	90000015 	stw	zero,0(r18)
   49bd8:	00c02284 	movi	r3,138
   49bdc:	88c00015 	stw	r3,0(r17)
   49be0:	dfc00917 	ldw	ra,36(sp)
   49be4:	dd000817 	ldw	r20,32(sp)
   49be8:	dcc00717 	ldw	r19,28(sp)
   49bec:	dc800617 	ldw	r18,24(sp)
   49bf0:	dc400517 	ldw	r17,20(sp)
   49bf4:	dc000417 	ldw	r16,16(sp)
   49bf8:	dec00a04 	addi	sp,sp,40
   49bfc:	f800283a 	ret
   49c00:	00800174 	movhi	r2,5
   49c04:	10864004 	addi	r2,r2,6400
   49c08:	14000017 	ldw	r16,0(r2)
   49c0c:	00454a00 	call	454a0 <__locale_charset>
   49c10:	100f883a 	mov	r7,r2
   49c14:	dc800015 	stw	r18,0(sp)
   49c18:	000d883a 	mov	r6,zero
   49c1c:	d9400104 	addi	r5,sp,4
   49c20:	8809883a 	mov	r4,r17
   49c24:	803ee83a 	callr	r16
   49c28:	003fe806 	br	49bcc <__alt_data_end+0xfffd7bcc>

00049c2c <__ascii_wctomb>:
   49c2c:	28000526 	beq	r5,zero,49c44 <__ascii_wctomb+0x18>
   49c30:	00803fc4 	movi	r2,255
   49c34:	11800536 	bltu	r2,r6,49c4c <__ascii_wctomb+0x20>
   49c38:	29800005 	stb	r6,0(r5)
   49c3c:	00800044 	movi	r2,1
   49c40:	f800283a 	ret
   49c44:	0005883a 	mov	r2,zero
   49c48:	f800283a 	ret
   49c4c:	00802284 	movi	r2,138
   49c50:	20800015 	stw	r2,0(r4)
   49c54:	00bfffc4 	movi	r2,-1
   49c58:	f800283a 	ret

00049c5c <_wctomb_r>:
   49c5c:	00800174 	movhi	r2,5
   49c60:	defff904 	addi	sp,sp,-28
   49c64:	10864004 	addi	r2,r2,6400
   49c68:	dfc00615 	stw	ra,24(sp)
   49c6c:	dc400515 	stw	r17,20(sp)
   49c70:	dc000415 	stw	r16,16(sp)
   49c74:	3823883a 	mov	r17,r7
   49c78:	14000017 	ldw	r16,0(r2)
   49c7c:	d9000115 	stw	r4,4(sp)
   49c80:	d9400215 	stw	r5,8(sp)
   49c84:	d9800315 	stw	r6,12(sp)
   49c88:	00454a00 	call	454a0 <__locale_charset>
   49c8c:	d9800317 	ldw	r6,12(sp)
   49c90:	d9400217 	ldw	r5,8(sp)
   49c94:	d9000117 	ldw	r4,4(sp)
   49c98:	100f883a 	mov	r7,r2
   49c9c:	dc400015 	stw	r17,0(sp)
   49ca0:	803ee83a 	callr	r16
   49ca4:	dfc00617 	ldw	ra,24(sp)
   49ca8:	dc400517 	ldw	r17,20(sp)
   49cac:	dc000417 	ldw	r16,16(sp)
   49cb0:	dec00704 	addi	sp,sp,28
   49cb4:	f800283a 	ret

00049cb8 <__udivdi3>:
   49cb8:	defff404 	addi	sp,sp,-48
   49cbc:	dcc00515 	stw	r19,20(sp)
   49cc0:	dc000215 	stw	r16,8(sp)
   49cc4:	dfc00b15 	stw	ra,44(sp)
   49cc8:	df000a15 	stw	fp,40(sp)
   49ccc:	ddc00915 	stw	r23,36(sp)
   49cd0:	dd800815 	stw	r22,32(sp)
   49cd4:	dd400715 	stw	r21,28(sp)
   49cd8:	dd000615 	stw	r20,24(sp)
   49cdc:	dc800415 	stw	r18,16(sp)
   49ce0:	dc400315 	stw	r17,12(sp)
   49ce4:	2027883a 	mov	r19,r4
   49ce8:	2821883a 	mov	r16,r5
   49cec:	3800461e 	bne	r7,zero,49e08 <__udivdi3+0x150>
   49cf0:	3023883a 	mov	r17,r6
   49cf4:	2025883a 	mov	r18,r4
   49cf8:	2980572e 	bgeu	r5,r6,49e58 <__udivdi3+0x1a0>
   49cfc:	00bfffd4 	movui	r2,65535
   49d00:	282d883a 	mov	r22,r5
   49d04:	1180b236 	bltu	r2,r6,49fd0 <__udivdi3+0x318>
   49d08:	00803fc4 	movi	r2,255
   49d0c:	1185803a 	cmpltu	r2,r2,r6
   49d10:	100490fa 	slli	r2,r2,3
   49d14:	3086d83a 	srl	r3,r6,r2
   49d18:	01000174 	movhi	r4,5
   49d1c:	213f4704 	addi	r4,r4,-740
   49d20:	20c7883a 	add	r3,r4,r3
   49d24:	18c00003 	ldbu	r3,0(r3)
   49d28:	1885883a 	add	r2,r3,r2
   49d2c:	00c00804 	movi	r3,32
   49d30:	1887c83a 	sub	r3,r3,r2
   49d34:	18000526 	beq	r3,zero,49d4c <__udivdi3+0x94>
   49d38:	80e0983a 	sll	r16,r16,r3
   49d3c:	9884d83a 	srl	r2,r19,r2
   49d40:	30e2983a 	sll	r17,r6,r3
   49d44:	98e4983a 	sll	r18,r19,r3
   49d48:	142cb03a 	or	r22,r2,r16
   49d4c:	882ad43a 	srli	r21,r17,16
   49d50:	b009883a 	mov	r4,r22
   49d54:	8d3fffcc 	andi	r20,r17,65535
   49d58:	a80b883a 	mov	r5,r21
   49d5c:	004a9d40 	call	4a9d4 <__umodsi3>
   49d60:	b009883a 	mov	r4,r22
   49d64:	a80b883a 	mov	r5,r21
   49d68:	1027883a 	mov	r19,r2
   49d6c:	004a9700 	call	4a970 <__udivsi3>
   49d70:	100b883a 	mov	r5,r2
   49d74:	a009883a 	mov	r4,r20
   49d78:	102d883a 	mov	r22,r2
   49d7c:	004aa2c0 	call	4aa2c <__mulsi3>
   49d80:	9826943a 	slli	r19,r19,16
   49d84:	9006d43a 	srli	r3,r18,16
   49d88:	1cc6b03a 	or	r3,r3,r19
   49d8c:	1880052e 	bgeu	r3,r2,49da4 <__udivdi3+0xec>
   49d90:	1c47883a 	add	r3,r3,r17
   49d94:	b13fffc4 	addi	r4,r22,-1
   49d98:	1c400136 	bltu	r3,r17,49da0 <__udivdi3+0xe8>
   49d9c:	18814236 	bltu	r3,r2,4a2a8 <__udivdi3+0x5f0>
   49da0:	202d883a 	mov	r22,r4
   49da4:	18a1c83a 	sub	r16,r3,r2
   49da8:	8009883a 	mov	r4,r16
   49dac:	a80b883a 	mov	r5,r21
   49db0:	004a9d40 	call	4a9d4 <__umodsi3>
   49db4:	1027883a 	mov	r19,r2
   49db8:	8009883a 	mov	r4,r16
   49dbc:	a80b883a 	mov	r5,r21
   49dc0:	9826943a 	slli	r19,r19,16
   49dc4:	004a9700 	call	4a970 <__udivsi3>
   49dc8:	100b883a 	mov	r5,r2
   49dcc:	a009883a 	mov	r4,r20
   49dd0:	94bfffcc 	andi	r18,r18,65535
   49dd4:	1021883a 	mov	r16,r2
   49dd8:	94e4b03a 	or	r18,r18,r19
   49ddc:	004aa2c0 	call	4aa2c <__mulsi3>
   49de0:	9080052e 	bgeu	r18,r2,49df8 <__udivdi3+0x140>
   49de4:	8ca5883a 	add	r18,r17,r18
   49de8:	80ffffc4 	addi	r3,r16,-1
   49dec:	94410c36 	bltu	r18,r17,4a220 <__udivdi3+0x568>
   49df0:	90810b2e 	bgeu	r18,r2,4a220 <__udivdi3+0x568>
   49df4:	843fff84 	addi	r16,r16,-2
   49df8:	b004943a 	slli	r2,r22,16
   49dfc:	0007883a 	mov	r3,zero
   49e00:	1404b03a 	or	r2,r2,r16
   49e04:	00005e06 	br	49f80 <__udivdi3+0x2c8>
   49e08:	29c05b36 	bltu	r5,r7,49f78 <__udivdi3+0x2c0>
   49e0c:	00bfffd4 	movui	r2,65535
   49e10:	11c0672e 	bgeu	r2,r7,49fb0 <__udivdi3+0x2f8>
   49e14:	00804034 	movhi	r2,256
   49e18:	10bfffc4 	addi	r2,r2,-1
   49e1c:	11c10a36 	bltu	r2,r7,4a248 <__udivdi3+0x590>
   49e20:	00800404 	movi	r2,16
   49e24:	3886d83a 	srl	r3,r7,r2
   49e28:	01000174 	movhi	r4,5
   49e2c:	213f4704 	addi	r4,r4,-740
   49e30:	20c7883a 	add	r3,r4,r3
   49e34:	18c00003 	ldbu	r3,0(r3)
   49e38:	05c00804 	movi	r23,32
   49e3c:	1885883a 	add	r2,r3,r2
   49e40:	b8afc83a 	sub	r23,r23,r2
   49e44:	b800671e 	bne	r23,zero,49fe4 <__udivdi3+0x32c>
   49e48:	3c010536 	bltu	r7,r16,4a260 <__udivdi3+0x5a8>
   49e4c:	9985403a 	cmpgeu	r2,r19,r6
   49e50:	0007883a 	mov	r3,zero
   49e54:	00004a06 	br	49f80 <__udivdi3+0x2c8>
   49e58:	3000041e 	bne	r6,zero,49e6c <__udivdi3+0x1b4>
   49e5c:	000b883a 	mov	r5,zero
   49e60:	01000044 	movi	r4,1
   49e64:	004a9700 	call	4a970 <__udivsi3>
   49e68:	1023883a 	mov	r17,r2
   49e6c:	00bfffd4 	movui	r2,65535
   49e70:	1440532e 	bgeu	r2,r17,49fc0 <__udivdi3+0x308>
   49e74:	00804034 	movhi	r2,256
   49e78:	10bfffc4 	addi	r2,r2,-1
   49e7c:	1440f436 	bltu	r2,r17,4a250 <__udivdi3+0x598>
   49e80:	00800404 	movi	r2,16
   49e84:	8886d83a 	srl	r3,r17,r2
   49e88:	01000174 	movhi	r4,5
   49e8c:	213f4704 	addi	r4,r4,-740
   49e90:	20c7883a 	add	r3,r4,r3
   49e94:	18c00003 	ldbu	r3,0(r3)
   49e98:	1885883a 	add	r2,r3,r2
   49e9c:	00c00804 	movi	r3,32
   49ea0:	1887c83a 	sub	r3,r3,r2
   49ea4:	1800a51e 	bne	r3,zero,4a13c <__udivdi3+0x484>
   49ea8:	882ad43a 	srli	r21,r17,16
   49eac:	8461c83a 	sub	r16,r16,r17
   49eb0:	8d3fffcc 	andi	r20,r17,65535
   49eb4:	00c00044 	movi	r3,1
   49eb8:	a80b883a 	mov	r5,r21
   49ebc:	8009883a 	mov	r4,r16
   49ec0:	d8c00115 	stw	r3,4(sp)
   49ec4:	004a9d40 	call	4a9d4 <__umodsi3>
   49ec8:	a80b883a 	mov	r5,r21
   49ecc:	8009883a 	mov	r4,r16
   49ed0:	1027883a 	mov	r19,r2
   49ed4:	004a9700 	call	4a970 <__udivsi3>
   49ed8:	a00b883a 	mov	r5,r20
   49edc:	1009883a 	mov	r4,r2
   49ee0:	102d883a 	mov	r22,r2
   49ee4:	004aa2c0 	call	4aa2c <__mulsi3>
   49ee8:	9826943a 	slli	r19,r19,16
   49eec:	900ed43a 	srli	r7,r18,16
   49ef0:	d8c00117 	ldw	r3,4(sp)
   49ef4:	3cceb03a 	or	r7,r7,r19
   49ef8:	3880052e 	bgeu	r7,r2,49f10 <__udivdi3+0x258>
   49efc:	3c4f883a 	add	r7,r7,r17
   49f00:	b13fffc4 	addi	r4,r22,-1
   49f04:	3c400136 	bltu	r7,r17,49f0c <__udivdi3+0x254>
   49f08:	3880e436 	bltu	r7,r2,4a29c <__udivdi3+0x5e4>
   49f0c:	202d883a 	mov	r22,r4
   49f10:	38a1c83a 	sub	r16,r7,r2
   49f14:	8009883a 	mov	r4,r16
   49f18:	a80b883a 	mov	r5,r21
   49f1c:	d8c00115 	stw	r3,4(sp)
   49f20:	004a9d40 	call	4a9d4 <__umodsi3>
   49f24:	1027883a 	mov	r19,r2
   49f28:	8009883a 	mov	r4,r16
   49f2c:	a80b883a 	mov	r5,r21
   49f30:	9826943a 	slli	r19,r19,16
   49f34:	004a9700 	call	4a970 <__udivsi3>
   49f38:	a00b883a 	mov	r5,r20
   49f3c:	1009883a 	mov	r4,r2
   49f40:	94bfffcc 	andi	r18,r18,65535
   49f44:	1021883a 	mov	r16,r2
   49f48:	94e4b03a 	or	r18,r18,r19
   49f4c:	004aa2c0 	call	4aa2c <__mulsi3>
   49f50:	d8c00117 	ldw	r3,4(sp)
   49f54:	9080052e 	bgeu	r18,r2,49f6c <__udivdi3+0x2b4>
   49f58:	8ca5883a 	add	r18,r17,r18
   49f5c:	813fffc4 	addi	r4,r16,-1
   49f60:	9440ad36 	bltu	r18,r17,4a218 <__udivdi3+0x560>
   49f64:	9080ac2e 	bgeu	r18,r2,4a218 <__udivdi3+0x560>
   49f68:	843fff84 	addi	r16,r16,-2
   49f6c:	b004943a 	slli	r2,r22,16
   49f70:	1404b03a 	or	r2,r2,r16
   49f74:	00000206 	br	49f80 <__udivdi3+0x2c8>
   49f78:	0007883a 	mov	r3,zero
   49f7c:	0005883a 	mov	r2,zero
   49f80:	dfc00b17 	ldw	ra,44(sp)
   49f84:	df000a17 	ldw	fp,40(sp)
   49f88:	ddc00917 	ldw	r23,36(sp)
   49f8c:	dd800817 	ldw	r22,32(sp)
   49f90:	dd400717 	ldw	r21,28(sp)
   49f94:	dd000617 	ldw	r20,24(sp)
   49f98:	dcc00517 	ldw	r19,20(sp)
   49f9c:	dc800417 	ldw	r18,16(sp)
   49fa0:	dc400317 	ldw	r17,12(sp)
   49fa4:	dc000217 	ldw	r16,8(sp)
   49fa8:	dec00c04 	addi	sp,sp,48
   49fac:	f800283a 	ret
   49fb0:	00803fc4 	movi	r2,255
   49fb4:	11c5803a 	cmpltu	r2,r2,r7
   49fb8:	100490fa 	slli	r2,r2,3
   49fbc:	003f9906 	br	49e24 <__alt_data_end+0xfffd7e24>
   49fc0:	00803fc4 	movi	r2,255
   49fc4:	1445803a 	cmpltu	r2,r2,r17
   49fc8:	100490fa 	slli	r2,r2,3
   49fcc:	003fad06 	br	49e84 <__alt_data_end+0xfffd7e84>
   49fd0:	00804034 	movhi	r2,256
   49fd4:	10bfffc4 	addi	r2,r2,-1
   49fd8:	11809f36 	bltu	r2,r6,4a258 <__udivdi3+0x5a0>
   49fdc:	00800404 	movi	r2,16
   49fe0:	003f4c06 	br	49d14 <__alt_data_end+0xfffd7d14>
   49fe4:	3dce983a 	sll	r7,r7,r23
   49fe8:	30b8d83a 	srl	fp,r6,r2
   49fec:	80a2d83a 	srl	r17,r16,r2
   49ff0:	35cc983a 	sll	r6,r6,r23
   49ff4:	3f38b03a 	or	fp,r7,fp
   49ff8:	e024d43a 	srli	r18,fp,16
   49ffc:	9884d83a 	srl	r2,r19,r2
   4a000:	85e0983a 	sll	r16,r16,r23
   4a004:	8809883a 	mov	r4,r17
   4a008:	900b883a 	mov	r5,r18
   4a00c:	d9800015 	stw	r6,0(sp)
   4a010:	1420b03a 	or	r16,r2,r16
   4a014:	004a9d40 	call	4a9d4 <__umodsi3>
   4a018:	900b883a 	mov	r5,r18
   4a01c:	8809883a 	mov	r4,r17
   4a020:	1029883a 	mov	r20,r2
   4a024:	e5bfffcc 	andi	r22,fp,65535
   4a028:	004a9700 	call	4a970 <__udivsi3>
   4a02c:	100b883a 	mov	r5,r2
   4a030:	b009883a 	mov	r4,r22
   4a034:	102b883a 	mov	r21,r2
   4a038:	004aa2c0 	call	4aa2c <__mulsi3>
   4a03c:	a028943a 	slli	r20,r20,16
   4a040:	8006d43a 	srli	r3,r16,16
   4a044:	1d06b03a 	or	r3,r3,r20
   4a048:	1880042e 	bgeu	r3,r2,4a05c <__udivdi3+0x3a4>
   4a04c:	1f07883a 	add	r3,r3,fp
   4a050:	a93fffc4 	addi	r4,r21,-1
   4a054:	1f00892e 	bgeu	r3,fp,4a27c <__udivdi3+0x5c4>
   4a058:	202b883a 	mov	r21,r4
   4a05c:	18a3c83a 	sub	r17,r3,r2
   4a060:	8809883a 	mov	r4,r17
   4a064:	900b883a 	mov	r5,r18
   4a068:	004a9d40 	call	4a9d4 <__umodsi3>
   4a06c:	1029883a 	mov	r20,r2
   4a070:	8809883a 	mov	r4,r17
   4a074:	900b883a 	mov	r5,r18
   4a078:	a028943a 	slli	r20,r20,16
   4a07c:	004a9700 	call	4a970 <__udivsi3>
   4a080:	100b883a 	mov	r5,r2
   4a084:	b009883a 	mov	r4,r22
   4a088:	843fffcc 	andi	r16,r16,65535
   4a08c:	1023883a 	mov	r17,r2
   4a090:	8520b03a 	or	r16,r16,r20
   4a094:	004aa2c0 	call	4aa2c <__mulsi3>
   4a098:	8080042e 	bgeu	r16,r2,4a0ac <__udivdi3+0x3f4>
   4a09c:	8721883a 	add	r16,r16,fp
   4a0a0:	88ffffc4 	addi	r3,r17,-1
   4a0a4:	8700712e 	bgeu	r16,fp,4a26c <__udivdi3+0x5b4>
   4a0a8:	1823883a 	mov	r17,r3
   4a0ac:	a80e943a 	slli	r7,r21,16
   4a0b0:	d8c00017 	ldw	r3,0(sp)
   4a0b4:	80a1c83a 	sub	r16,r16,r2
   4a0b8:	3c64b03a 	or	r18,r7,r17
   4a0bc:	1d3fffcc 	andi	r20,r3,65535
   4a0c0:	9022d43a 	srli	r17,r18,16
   4a0c4:	95bfffcc 	andi	r22,r18,65535
   4a0c8:	a00b883a 	mov	r5,r20
   4a0cc:	b009883a 	mov	r4,r22
   4a0d0:	182ad43a 	srli	r21,r3,16
   4a0d4:	004aa2c0 	call	4aa2c <__mulsi3>
   4a0d8:	a00b883a 	mov	r5,r20
   4a0dc:	8809883a 	mov	r4,r17
   4a0e0:	1039883a 	mov	fp,r2
   4a0e4:	004aa2c0 	call	4aa2c <__mulsi3>
   4a0e8:	8809883a 	mov	r4,r17
   4a0ec:	a80b883a 	mov	r5,r21
   4a0f0:	1029883a 	mov	r20,r2
   4a0f4:	004aa2c0 	call	4aa2c <__mulsi3>
   4a0f8:	a80b883a 	mov	r5,r21
   4a0fc:	b009883a 	mov	r4,r22
   4a100:	1023883a 	mov	r17,r2
   4a104:	004aa2c0 	call	4aa2c <__mulsi3>
   4a108:	e006d43a 	srli	r3,fp,16
   4a10c:	1505883a 	add	r2,r2,r20
   4a110:	1887883a 	add	r3,r3,r2
   4a114:	1d00022e 	bgeu	r3,r20,4a120 <__udivdi3+0x468>
   4a118:	00800074 	movhi	r2,1
   4a11c:	88a3883a 	add	r17,r17,r2
   4a120:	1804d43a 	srli	r2,r3,16
   4a124:	1463883a 	add	r17,r2,r17
   4a128:	84404436 	bltu	r16,r17,4a23c <__udivdi3+0x584>
   4a12c:	84403e26 	beq	r16,r17,4a228 <__udivdi3+0x570>
   4a130:	9005883a 	mov	r2,r18
   4a134:	0007883a 	mov	r3,zero
   4a138:	003f9106 	br	49f80 <__alt_data_end+0xfffd7f80>
   4a13c:	88e2983a 	sll	r17,r17,r3
   4a140:	80aed83a 	srl	r23,r16,r2
   4a144:	80e0983a 	sll	r16,r16,r3
   4a148:	882ad43a 	srli	r21,r17,16
   4a14c:	9884d83a 	srl	r2,r19,r2
   4a150:	b809883a 	mov	r4,r23
   4a154:	a80b883a 	mov	r5,r21
   4a158:	98e4983a 	sll	r18,r19,r3
   4a15c:	142cb03a 	or	r22,r2,r16
   4a160:	004a9d40 	call	4a9d4 <__umodsi3>
   4a164:	b809883a 	mov	r4,r23
   4a168:	a80b883a 	mov	r5,r21
   4a16c:	1027883a 	mov	r19,r2
   4a170:	8d3fffcc 	andi	r20,r17,65535
   4a174:	004a9700 	call	4a970 <__udivsi3>
   4a178:	a009883a 	mov	r4,r20
   4a17c:	100b883a 	mov	r5,r2
   4a180:	102f883a 	mov	r23,r2
   4a184:	004aa2c0 	call	4aa2c <__mulsi3>
   4a188:	9826943a 	slli	r19,r19,16
   4a18c:	b008d43a 	srli	r4,r22,16
   4a190:	24c8b03a 	or	r4,r4,r19
   4a194:	2080062e 	bgeu	r4,r2,4a1b0 <__udivdi3+0x4f8>
   4a198:	2449883a 	add	r4,r4,r17
   4a19c:	b8ffffc4 	addi	r3,r23,-1
   4a1a0:	24403c36 	bltu	r4,r17,4a294 <__udivdi3+0x5dc>
   4a1a4:	20803b2e 	bgeu	r4,r2,4a294 <__udivdi3+0x5dc>
   4a1a8:	bdffff84 	addi	r23,r23,-2
   4a1ac:	2449883a 	add	r4,r4,r17
   4a1b0:	20a1c83a 	sub	r16,r4,r2
   4a1b4:	a80b883a 	mov	r5,r21
   4a1b8:	8009883a 	mov	r4,r16
   4a1bc:	004a9d40 	call	4a9d4 <__umodsi3>
   4a1c0:	a80b883a 	mov	r5,r21
   4a1c4:	8009883a 	mov	r4,r16
   4a1c8:	1027883a 	mov	r19,r2
   4a1cc:	004a9700 	call	4a970 <__udivsi3>
   4a1d0:	a009883a 	mov	r4,r20
   4a1d4:	100b883a 	mov	r5,r2
   4a1d8:	9826943a 	slli	r19,r19,16
   4a1dc:	1039883a 	mov	fp,r2
   4a1e0:	004aa2c0 	call	4aa2c <__mulsi3>
   4a1e4:	b13fffcc 	andi	r4,r22,65535
   4a1e8:	24c8b03a 	or	r4,r4,r19
   4a1ec:	2080062e 	bgeu	r4,r2,4a208 <__udivdi3+0x550>
   4a1f0:	2449883a 	add	r4,r4,r17
   4a1f4:	e0ffffc4 	addi	r3,fp,-1
   4a1f8:	24402436 	bltu	r4,r17,4a28c <__udivdi3+0x5d4>
   4a1fc:	2080232e 	bgeu	r4,r2,4a28c <__udivdi3+0x5d4>
   4a200:	e73fff84 	addi	fp,fp,-2
   4a204:	2449883a 	add	r4,r4,r17
   4a208:	b82e943a 	slli	r23,r23,16
   4a20c:	20a1c83a 	sub	r16,r4,r2
   4a210:	bf06b03a 	or	r3,r23,fp
   4a214:	003f2806 	br	49eb8 <__alt_data_end+0xfffd7eb8>
   4a218:	2021883a 	mov	r16,r4
   4a21c:	003f5306 	br	49f6c <__alt_data_end+0xfffd7f6c>
   4a220:	1821883a 	mov	r16,r3
   4a224:	003ef406 	br	49df8 <__alt_data_end+0xfffd7df8>
   4a228:	1806943a 	slli	r3,r3,16
   4a22c:	9de6983a 	sll	r19,r19,r23
   4a230:	e73fffcc 	andi	fp,fp,65535
   4a234:	1f07883a 	add	r3,r3,fp
   4a238:	98ffbd2e 	bgeu	r19,r3,4a130 <__alt_data_end+0xfffd8130>
   4a23c:	90bfffc4 	addi	r2,r18,-1
   4a240:	0007883a 	mov	r3,zero
   4a244:	003f4e06 	br	49f80 <__alt_data_end+0xfffd7f80>
   4a248:	00800604 	movi	r2,24
   4a24c:	003ef506 	br	49e24 <__alt_data_end+0xfffd7e24>
   4a250:	00800604 	movi	r2,24
   4a254:	003f0b06 	br	49e84 <__alt_data_end+0xfffd7e84>
   4a258:	00800604 	movi	r2,24
   4a25c:	003ead06 	br	49d14 <__alt_data_end+0xfffd7d14>
   4a260:	0007883a 	mov	r3,zero
   4a264:	00800044 	movi	r2,1
   4a268:	003f4506 	br	49f80 <__alt_data_end+0xfffd7f80>
   4a26c:	80bf8e2e 	bgeu	r16,r2,4a0a8 <__alt_data_end+0xfffd80a8>
   4a270:	8c7fff84 	addi	r17,r17,-2
   4a274:	8721883a 	add	r16,r16,fp
   4a278:	003f8c06 	br	4a0ac <__alt_data_end+0xfffd80ac>
   4a27c:	18bf762e 	bgeu	r3,r2,4a058 <__alt_data_end+0xfffd8058>
   4a280:	ad7fff84 	addi	r21,r21,-2
   4a284:	1f07883a 	add	r3,r3,fp
   4a288:	003f7406 	br	4a05c <__alt_data_end+0xfffd805c>
   4a28c:	1839883a 	mov	fp,r3
   4a290:	003fdd06 	br	4a208 <__alt_data_end+0xfffd8208>
   4a294:	182f883a 	mov	r23,r3
   4a298:	003fc506 	br	4a1b0 <__alt_data_end+0xfffd81b0>
   4a29c:	b5bfff84 	addi	r22,r22,-2
   4a2a0:	3c4f883a 	add	r7,r7,r17
   4a2a4:	003f1a06 	br	49f10 <__alt_data_end+0xfffd7f10>
   4a2a8:	b5bfff84 	addi	r22,r22,-2
   4a2ac:	1c47883a 	add	r3,r3,r17
   4a2b0:	003ebc06 	br	49da4 <__alt_data_end+0xfffd7da4>

0004a2b4 <__umoddi3>:
   4a2b4:	defff304 	addi	sp,sp,-52
   4a2b8:	df000b15 	stw	fp,44(sp)
   4a2bc:	dc400415 	stw	r17,16(sp)
   4a2c0:	dc000315 	stw	r16,12(sp)
   4a2c4:	dfc00c15 	stw	ra,48(sp)
   4a2c8:	ddc00a15 	stw	r23,40(sp)
   4a2cc:	dd800915 	stw	r22,36(sp)
   4a2d0:	dd400815 	stw	r21,32(sp)
   4a2d4:	dd000715 	stw	r20,28(sp)
   4a2d8:	dcc00615 	stw	r19,24(sp)
   4a2dc:	dc800515 	stw	r18,20(sp)
   4a2e0:	2021883a 	mov	r16,r4
   4a2e4:	2823883a 	mov	r17,r5
   4a2e8:	2839883a 	mov	fp,r5
   4a2ec:	3800401e 	bne	r7,zero,4a3f0 <__umoddi3+0x13c>
   4a2f0:	3027883a 	mov	r19,r6
   4a2f4:	2029883a 	mov	r20,r4
   4a2f8:	2980552e 	bgeu	r5,r6,4a450 <__umoddi3+0x19c>
   4a2fc:	00bfffd4 	movui	r2,65535
   4a300:	1180a236 	bltu	r2,r6,4a58c <__umoddi3+0x2d8>
   4a304:	01003fc4 	movi	r4,255
   4a308:	2189803a 	cmpltu	r4,r4,r6
   4a30c:	200890fa 	slli	r4,r4,3
   4a310:	3104d83a 	srl	r2,r6,r4
   4a314:	00c00174 	movhi	r3,5
   4a318:	18ff4704 	addi	r3,r3,-740
   4a31c:	1885883a 	add	r2,r3,r2
   4a320:	10c00003 	ldbu	r3,0(r2)
   4a324:	00800804 	movi	r2,32
   4a328:	1909883a 	add	r4,r3,r4
   4a32c:	1125c83a 	sub	r18,r2,r4
   4a330:	90000526 	beq	r18,zero,4a348 <__umoddi3+0x94>
   4a334:	8ca2983a 	sll	r17,r17,r18
   4a338:	8108d83a 	srl	r4,r16,r4
   4a33c:	34a6983a 	sll	r19,r6,r18
   4a340:	84a8983a 	sll	r20,r16,r18
   4a344:	2478b03a 	or	fp,r4,r17
   4a348:	982cd43a 	srli	r22,r19,16
   4a34c:	e009883a 	mov	r4,fp
   4a350:	9dffffcc 	andi	r23,r19,65535
   4a354:	b00b883a 	mov	r5,r22
   4a358:	004a9d40 	call	4a9d4 <__umodsi3>
   4a35c:	b00b883a 	mov	r5,r22
   4a360:	e009883a 	mov	r4,fp
   4a364:	102b883a 	mov	r21,r2
   4a368:	004a9700 	call	4a970 <__udivsi3>
   4a36c:	100b883a 	mov	r5,r2
   4a370:	b809883a 	mov	r4,r23
   4a374:	004aa2c0 	call	4aa2c <__mulsi3>
   4a378:	a82a943a 	slli	r21,r21,16
   4a37c:	a006d43a 	srli	r3,r20,16
   4a380:	1d46b03a 	or	r3,r3,r21
   4a384:	1880032e 	bgeu	r3,r2,4a394 <__umoddi3+0xe0>
   4a388:	1cc7883a 	add	r3,r3,r19
   4a38c:	1cc00136 	bltu	r3,r19,4a394 <__umoddi3+0xe0>
   4a390:	18813136 	bltu	r3,r2,4a858 <__umoddi3+0x5a4>
   4a394:	18a1c83a 	sub	r16,r3,r2
   4a398:	b00b883a 	mov	r5,r22
   4a39c:	8009883a 	mov	r4,r16
   4a3a0:	004a9d40 	call	4a9d4 <__umodsi3>
   4a3a4:	b00b883a 	mov	r5,r22
   4a3a8:	8009883a 	mov	r4,r16
   4a3ac:	1023883a 	mov	r17,r2
   4a3b0:	004a9700 	call	4a970 <__udivsi3>
   4a3b4:	100b883a 	mov	r5,r2
   4a3b8:	b809883a 	mov	r4,r23
   4a3bc:	8822943a 	slli	r17,r17,16
   4a3c0:	004aa2c0 	call	4aa2c <__mulsi3>
   4a3c4:	a0ffffcc 	andi	r3,r20,65535
   4a3c8:	1c46b03a 	or	r3,r3,r17
   4a3cc:	1880042e 	bgeu	r3,r2,4a3e0 <__umoddi3+0x12c>
   4a3d0:	1cc7883a 	add	r3,r3,r19
   4a3d4:	1cc00236 	bltu	r3,r19,4a3e0 <__umoddi3+0x12c>
   4a3d8:	1880012e 	bgeu	r3,r2,4a3e0 <__umoddi3+0x12c>
   4a3dc:	1cc7883a 	add	r3,r3,r19
   4a3e0:	1885c83a 	sub	r2,r3,r2
   4a3e4:	1484d83a 	srl	r2,r2,r18
   4a3e8:	0007883a 	mov	r3,zero
   4a3ec:	00005306 	br	4a53c <__umoddi3+0x288>
   4a3f0:	29c05036 	bltu	r5,r7,4a534 <__umoddi3+0x280>
   4a3f4:	00bfffd4 	movui	r2,65535
   4a3f8:	11c05c2e 	bgeu	r2,r7,4a56c <__umoddi3+0x2b8>
   4a3fc:	00804034 	movhi	r2,256
   4a400:	10bfffc4 	addi	r2,r2,-1
   4a404:	11c10636 	bltu	r2,r7,4a820 <__umoddi3+0x56c>
   4a408:	01000404 	movi	r4,16
   4a40c:	3904d83a 	srl	r2,r7,r4
   4a410:	00c00174 	movhi	r3,5
   4a414:	18ff4704 	addi	r3,r3,-740
   4a418:	1885883a 	add	r2,r3,r2
   4a41c:	14c00003 	ldbu	r19,0(r2)
   4a420:	00c00804 	movi	r3,32
   4a424:	9927883a 	add	r19,r19,r4
   4a428:	1ce9c83a 	sub	r20,r3,r19
   4a42c:	a0005c1e 	bne	r20,zero,4a5a0 <__umoddi3+0x2ec>
   4a430:	3c400136 	bltu	r7,r17,4a438 <__umoddi3+0x184>
   4a434:	81810a36 	bltu	r16,r6,4a860 <__umoddi3+0x5ac>
   4a438:	8185c83a 	sub	r2,r16,r6
   4a43c:	89e3c83a 	sub	r17,r17,r7
   4a440:	8089803a 	cmpltu	r4,r16,r2
   4a444:	8939c83a 	sub	fp,r17,r4
   4a448:	e007883a 	mov	r3,fp
   4a44c:	00003b06 	br	4a53c <__umoddi3+0x288>
   4a450:	3000041e 	bne	r6,zero,4a464 <__umoddi3+0x1b0>
   4a454:	000b883a 	mov	r5,zero
   4a458:	01000044 	movi	r4,1
   4a45c:	004a9700 	call	4a970 <__udivsi3>
   4a460:	1027883a 	mov	r19,r2
   4a464:	00bfffd4 	movui	r2,65535
   4a468:	14c0442e 	bgeu	r2,r19,4a57c <__umoddi3+0x2c8>
   4a46c:	00804034 	movhi	r2,256
   4a470:	10bfffc4 	addi	r2,r2,-1
   4a474:	14c0ec36 	bltu	r2,r19,4a828 <__umoddi3+0x574>
   4a478:	00800404 	movi	r2,16
   4a47c:	9886d83a 	srl	r3,r19,r2
   4a480:	01000174 	movhi	r4,5
   4a484:	213f4704 	addi	r4,r4,-740
   4a488:	20c7883a 	add	r3,r4,r3
   4a48c:	18c00003 	ldbu	r3,0(r3)
   4a490:	1887883a 	add	r3,r3,r2
   4a494:	00800804 	movi	r2,32
   4a498:	10e5c83a 	sub	r18,r2,r3
   4a49c:	9000ab1e 	bne	r18,zero,4a74c <__umoddi3+0x498>
   4a4a0:	982cd43a 	srli	r22,r19,16
   4a4a4:	8ce3c83a 	sub	r17,r17,r19
   4a4a8:	9dffffcc 	andi	r23,r19,65535
   4a4ac:	b00b883a 	mov	r5,r22
   4a4b0:	8809883a 	mov	r4,r17
   4a4b4:	004a9d40 	call	4a9d4 <__umodsi3>
   4a4b8:	b00b883a 	mov	r5,r22
   4a4bc:	8809883a 	mov	r4,r17
   4a4c0:	102b883a 	mov	r21,r2
   4a4c4:	004a9700 	call	4a970 <__udivsi3>
   4a4c8:	b80b883a 	mov	r5,r23
   4a4cc:	1009883a 	mov	r4,r2
   4a4d0:	004aa2c0 	call	4aa2c <__mulsi3>
   4a4d4:	a82a943a 	slli	r21,r21,16
   4a4d8:	a006d43a 	srli	r3,r20,16
   4a4dc:	1d46b03a 	or	r3,r3,r21
   4a4e0:	1880042e 	bgeu	r3,r2,4a4f4 <__umoddi3+0x240>
   4a4e4:	1cc7883a 	add	r3,r3,r19
   4a4e8:	1cc00236 	bltu	r3,r19,4a4f4 <__umoddi3+0x240>
   4a4ec:	1880012e 	bgeu	r3,r2,4a4f4 <__umoddi3+0x240>
   4a4f0:	1cc7883a 	add	r3,r3,r19
   4a4f4:	18a1c83a 	sub	r16,r3,r2
   4a4f8:	b00b883a 	mov	r5,r22
   4a4fc:	8009883a 	mov	r4,r16
   4a500:	004a9d40 	call	4a9d4 <__umodsi3>
   4a504:	1023883a 	mov	r17,r2
   4a508:	b00b883a 	mov	r5,r22
   4a50c:	8009883a 	mov	r4,r16
   4a510:	004a9700 	call	4a970 <__udivsi3>
   4a514:	8822943a 	slli	r17,r17,16
   4a518:	b80b883a 	mov	r5,r23
   4a51c:	1009883a 	mov	r4,r2
   4a520:	004aa2c0 	call	4aa2c <__mulsi3>
   4a524:	a53fffcc 	andi	r20,r20,65535
   4a528:	a446b03a 	or	r3,r20,r17
   4a52c:	18bfac2e 	bgeu	r3,r2,4a3e0 <__alt_data_end+0xfffd83e0>
   4a530:	003fa706 	br	4a3d0 <__alt_data_end+0xfffd83d0>
   4a534:	2005883a 	mov	r2,r4
   4a538:	2807883a 	mov	r3,r5
   4a53c:	dfc00c17 	ldw	ra,48(sp)
   4a540:	df000b17 	ldw	fp,44(sp)
   4a544:	ddc00a17 	ldw	r23,40(sp)
   4a548:	dd800917 	ldw	r22,36(sp)
   4a54c:	dd400817 	ldw	r21,32(sp)
   4a550:	dd000717 	ldw	r20,28(sp)
   4a554:	dcc00617 	ldw	r19,24(sp)
   4a558:	dc800517 	ldw	r18,20(sp)
   4a55c:	dc400417 	ldw	r17,16(sp)
   4a560:	dc000317 	ldw	r16,12(sp)
   4a564:	dec00d04 	addi	sp,sp,52
   4a568:	f800283a 	ret
   4a56c:	04c03fc4 	movi	r19,255
   4a570:	99c9803a 	cmpltu	r4,r19,r7
   4a574:	200890fa 	slli	r4,r4,3
   4a578:	003fa406 	br	4a40c <__alt_data_end+0xfffd840c>
   4a57c:	00803fc4 	movi	r2,255
   4a580:	14c5803a 	cmpltu	r2,r2,r19
   4a584:	100490fa 	slli	r2,r2,3
   4a588:	003fbc06 	br	4a47c <__alt_data_end+0xfffd847c>
   4a58c:	00804034 	movhi	r2,256
   4a590:	10bfffc4 	addi	r2,r2,-1
   4a594:	1180a636 	bltu	r2,r6,4a830 <__umoddi3+0x57c>
   4a598:	01000404 	movi	r4,16
   4a59c:	003f5c06 	br	4a310 <__alt_data_end+0xfffd8310>
   4a5a0:	3d0e983a 	sll	r7,r7,r20
   4a5a4:	34ead83a 	srl	r21,r6,r19
   4a5a8:	8cc6d83a 	srl	r3,r17,r19
   4a5ac:	8d10983a 	sll	r8,r17,r20
   4a5b0:	3d6ab03a 	or	r21,r7,r21
   4a5b4:	a82cd43a 	srli	r22,r21,16
   4a5b8:	84e2d83a 	srl	r17,r16,r19
   4a5bc:	1809883a 	mov	r4,r3
   4a5c0:	b00b883a 	mov	r5,r22
   4a5c4:	8a22b03a 	or	r17,r17,r8
   4a5c8:	3524983a 	sll	r18,r6,r20
   4a5cc:	dc400015 	stw	r17,0(sp)
   4a5d0:	d8c00115 	stw	r3,4(sp)
   4a5d4:	004a9d40 	call	4a9d4 <__umodsi3>
   4a5d8:	d8c00117 	ldw	r3,4(sp)
   4a5dc:	b00b883a 	mov	r5,r22
   4a5e0:	1039883a 	mov	fp,r2
   4a5e4:	1809883a 	mov	r4,r3
   4a5e8:	004a9700 	call	4a970 <__udivsi3>
   4a5ec:	adffffcc 	andi	r23,r21,65535
   4a5f0:	100b883a 	mov	r5,r2
   4a5f4:	b809883a 	mov	r4,r23
   4a5f8:	1023883a 	mov	r17,r2
   4a5fc:	004aa2c0 	call	4aa2c <__mulsi3>
   4a600:	d9400017 	ldw	r5,0(sp)
   4a604:	e008943a 	slli	r4,fp,16
   4a608:	8520983a 	sll	r16,r16,r20
   4a60c:	2806d43a 	srli	r3,r5,16
   4a610:	1906b03a 	or	r3,r3,r4
   4a614:	1880042e 	bgeu	r3,r2,4a628 <__umoddi3+0x374>
   4a618:	1d47883a 	add	r3,r3,r21
   4a61c:	893fffc4 	addi	r4,r17,-1
   4a620:	1d40892e 	bgeu	r3,r21,4a848 <__umoddi3+0x594>
   4a624:	2023883a 	mov	r17,r4
   4a628:	18b9c83a 	sub	fp,r3,r2
   4a62c:	b00b883a 	mov	r5,r22
   4a630:	e009883a 	mov	r4,fp
   4a634:	004a9d40 	call	4a9d4 <__umodsi3>
   4a638:	b00b883a 	mov	r5,r22
   4a63c:	e009883a 	mov	r4,fp
   4a640:	d8800215 	stw	r2,8(sp)
   4a644:	004a9700 	call	4a970 <__udivsi3>
   4a648:	100b883a 	mov	r5,r2
   4a64c:	b809883a 	mov	r4,r23
   4a650:	102d883a 	mov	r22,r2
   4a654:	004aa2c0 	call	4aa2c <__mulsi3>
   4a658:	d9800217 	ldw	r6,8(sp)
   4a65c:	d8c00017 	ldw	r3,0(sp)
   4a660:	300c943a 	slli	r6,r6,16
   4a664:	1a3fffcc 	andi	r8,r3,65535
   4a668:	4190b03a 	or	r8,r8,r6
   4a66c:	4080042e 	bgeu	r8,r2,4a680 <__umoddi3+0x3cc>
   4a670:	4551883a 	add	r8,r8,r21
   4a674:	b0ffffc4 	addi	r3,r22,-1
   4a678:	45406f2e 	bgeu	r8,r21,4a838 <__umoddi3+0x584>
   4a67c:	182d883a 	mov	r22,r3
   4a680:	880e943a 	slli	r7,r17,16
   4a684:	9006d43a 	srli	r3,r18,16
   4a688:	91bfffcc 	andi	r6,r18,65535
   4a68c:	3dacb03a 	or	r22,r7,r22
   4a690:	b02ed43a 	srli	r23,r22,16
   4a694:	b5bfffcc 	andi	r22,r22,65535
   4a698:	300b883a 	mov	r5,r6
   4a69c:	b009883a 	mov	r4,r22
   4a6a0:	40a3c83a 	sub	r17,r8,r2
   4a6a4:	d8c00115 	stw	r3,4(sp)
   4a6a8:	d9800215 	stw	r6,8(sp)
   4a6ac:	004aa2c0 	call	4aa2c <__mulsi3>
   4a6b0:	d9800217 	ldw	r6,8(sp)
   4a6b4:	b809883a 	mov	r4,r23
   4a6b8:	1039883a 	mov	fp,r2
   4a6bc:	300b883a 	mov	r5,r6
   4a6c0:	004aa2c0 	call	4aa2c <__mulsi3>
   4a6c4:	d8c00117 	ldw	r3,4(sp)
   4a6c8:	b809883a 	mov	r4,r23
   4a6cc:	d8800215 	stw	r2,8(sp)
   4a6d0:	180b883a 	mov	r5,r3
   4a6d4:	004aa2c0 	call	4aa2c <__mulsi3>
   4a6d8:	d8c00117 	ldw	r3,4(sp)
   4a6dc:	b009883a 	mov	r4,r22
   4a6e0:	102f883a 	mov	r23,r2
   4a6e4:	180b883a 	mov	r5,r3
   4a6e8:	004aa2c0 	call	4aa2c <__mulsi3>
   4a6ec:	d9800217 	ldw	r6,8(sp)
   4a6f0:	e006d43a 	srli	r3,fp,16
   4a6f4:	1185883a 	add	r2,r2,r6
   4a6f8:	1885883a 	add	r2,r3,r2
   4a6fc:	1180022e 	bgeu	r2,r6,4a708 <__umoddi3+0x454>
   4a700:	00c00074 	movhi	r3,1
   4a704:	b8ef883a 	add	r23,r23,r3
   4a708:	1006d43a 	srli	r3,r2,16
   4a70c:	1004943a 	slli	r2,r2,16
   4a710:	e73fffcc 	andi	fp,fp,65535
   4a714:	1dc7883a 	add	r3,r3,r23
   4a718:	1739883a 	add	fp,r2,fp
   4a71c:	88c03a36 	bltu	r17,r3,4a808 <__umoddi3+0x554>
   4a720:	88c05126 	beq	r17,r3,4a868 <__umoddi3+0x5b4>
   4a724:	88c9c83a 	sub	r4,r17,r3
   4a728:	e00f883a 	mov	r7,fp
   4a72c:	81cfc83a 	sub	r7,r16,r7
   4a730:	81c7803a 	cmpltu	r3,r16,r7
   4a734:	20c7c83a 	sub	r3,r4,r3
   4a738:	1cc4983a 	sll	r2,r3,r19
   4a73c:	3d0ed83a 	srl	r7,r7,r20
   4a740:	1d06d83a 	srl	r3,r3,r20
   4a744:	11c4b03a 	or	r2,r2,r7
   4a748:	003f7c06 	br	4a53c <__alt_data_end+0xfffd853c>
   4a74c:	9ca6983a 	sll	r19,r19,r18
   4a750:	88f8d83a 	srl	fp,r17,r3
   4a754:	80c4d83a 	srl	r2,r16,r3
   4a758:	982cd43a 	srli	r22,r19,16
   4a75c:	8ca2983a 	sll	r17,r17,r18
   4a760:	e009883a 	mov	r4,fp
   4a764:	b00b883a 	mov	r5,r22
   4a768:	146ab03a 	or	r21,r2,r17
   4a76c:	004a9d40 	call	4a9d4 <__umodsi3>
   4a770:	b00b883a 	mov	r5,r22
   4a774:	e009883a 	mov	r4,fp
   4a778:	1029883a 	mov	r20,r2
   4a77c:	9dffffcc 	andi	r23,r19,65535
   4a780:	004a9700 	call	4a970 <__udivsi3>
   4a784:	b809883a 	mov	r4,r23
   4a788:	100b883a 	mov	r5,r2
   4a78c:	004aa2c0 	call	4aa2c <__mulsi3>
   4a790:	a008943a 	slli	r4,r20,16
   4a794:	a806d43a 	srli	r3,r21,16
   4a798:	84a8983a 	sll	r20,r16,r18
   4a79c:	1906b03a 	or	r3,r3,r4
   4a7a0:	1880042e 	bgeu	r3,r2,4a7b4 <__umoddi3+0x500>
   4a7a4:	1cc7883a 	add	r3,r3,r19
   4a7a8:	1cc00236 	bltu	r3,r19,4a7b4 <__umoddi3+0x500>
   4a7ac:	1880012e 	bgeu	r3,r2,4a7b4 <__umoddi3+0x500>
   4a7b0:	1cc7883a 	add	r3,r3,r19
   4a7b4:	18a3c83a 	sub	r17,r3,r2
   4a7b8:	b00b883a 	mov	r5,r22
   4a7bc:	8809883a 	mov	r4,r17
   4a7c0:	004a9d40 	call	4a9d4 <__umodsi3>
   4a7c4:	b00b883a 	mov	r5,r22
   4a7c8:	8809883a 	mov	r4,r17
   4a7cc:	1021883a 	mov	r16,r2
   4a7d0:	004a9700 	call	4a970 <__udivsi3>
   4a7d4:	100b883a 	mov	r5,r2
   4a7d8:	b809883a 	mov	r4,r23
   4a7dc:	8020943a 	slli	r16,r16,16
   4a7e0:	004aa2c0 	call	4aa2c <__mulsi3>
   4a7e4:	a8ffffcc 	andi	r3,r21,65535
   4a7e8:	1c06b03a 	or	r3,r3,r16
   4a7ec:	1880042e 	bgeu	r3,r2,4a800 <__umoddi3+0x54c>
   4a7f0:	1cc7883a 	add	r3,r3,r19
   4a7f4:	1cc00236 	bltu	r3,r19,4a800 <__umoddi3+0x54c>
   4a7f8:	1880012e 	bgeu	r3,r2,4a800 <__umoddi3+0x54c>
   4a7fc:	1cc7883a 	add	r3,r3,r19
   4a800:	18a3c83a 	sub	r17,r3,r2
   4a804:	003f2906 	br	4a4ac <__alt_data_end+0xfffd84ac>
   4a808:	e48fc83a 	sub	r7,fp,r18
   4a80c:	1d49c83a 	sub	r4,r3,r21
   4a810:	e1f9803a 	cmpltu	fp,fp,r7
   4a814:	2739c83a 	sub	fp,r4,fp
   4a818:	8f09c83a 	sub	r4,r17,fp
   4a81c:	003fc306 	br	4a72c <__alt_data_end+0xfffd872c>
   4a820:	01000604 	movi	r4,24
   4a824:	003ef906 	br	4a40c <__alt_data_end+0xfffd840c>
   4a828:	00800604 	movi	r2,24
   4a82c:	003f1306 	br	4a47c <__alt_data_end+0xfffd847c>
   4a830:	01000604 	movi	r4,24
   4a834:	003eb606 	br	4a310 <__alt_data_end+0xfffd8310>
   4a838:	40bf902e 	bgeu	r8,r2,4a67c <__alt_data_end+0xfffd867c>
   4a83c:	b5bfff84 	addi	r22,r22,-2
   4a840:	4551883a 	add	r8,r8,r21
   4a844:	003f8e06 	br	4a680 <__alt_data_end+0xfffd8680>
   4a848:	18bf762e 	bgeu	r3,r2,4a624 <__alt_data_end+0xfffd8624>
   4a84c:	8c7fff84 	addi	r17,r17,-2
   4a850:	1d47883a 	add	r3,r3,r21
   4a854:	003f7406 	br	4a628 <__alt_data_end+0xfffd8628>
   4a858:	1cc7883a 	add	r3,r3,r19
   4a85c:	003ecd06 	br	4a394 <__alt_data_end+0xfffd8394>
   4a860:	8005883a 	mov	r2,r16
   4a864:	003ef806 	br	4a448 <__alt_data_end+0xfffd8448>
   4a868:	873fe736 	bltu	r16,fp,4a808 <__alt_data_end+0xfffd8808>
   4a86c:	e00f883a 	mov	r7,fp
   4a870:	0009883a 	mov	r4,zero
   4a874:	003fad06 	br	4a72c <__alt_data_end+0xfffd872c>

0004a878 <__divsi3>:
   4a878:	20001b16 	blt	r4,zero,4a8e8 <__divsi3+0x70>
   4a87c:	000f883a 	mov	r7,zero
   4a880:	28001616 	blt	r5,zero,4a8dc <__divsi3+0x64>
   4a884:	200d883a 	mov	r6,r4
   4a888:	29001a2e 	bgeu	r5,r4,4a8f4 <__divsi3+0x7c>
   4a88c:	00800804 	movi	r2,32
   4a890:	00c00044 	movi	r3,1
   4a894:	00000106 	br	4a89c <__divsi3+0x24>
   4a898:	10000d26 	beq	r2,zero,4a8d0 <__divsi3+0x58>
   4a89c:	294b883a 	add	r5,r5,r5
   4a8a0:	10bfffc4 	addi	r2,r2,-1
   4a8a4:	18c7883a 	add	r3,r3,r3
   4a8a8:	293ffb36 	bltu	r5,r4,4a898 <__alt_data_end+0xfffd8898>
   4a8ac:	0005883a 	mov	r2,zero
   4a8b0:	18000726 	beq	r3,zero,4a8d0 <__divsi3+0x58>
   4a8b4:	0005883a 	mov	r2,zero
   4a8b8:	31400236 	bltu	r6,r5,4a8c4 <__divsi3+0x4c>
   4a8bc:	314dc83a 	sub	r6,r6,r5
   4a8c0:	10c4b03a 	or	r2,r2,r3
   4a8c4:	1806d07a 	srli	r3,r3,1
   4a8c8:	280ad07a 	srli	r5,r5,1
   4a8cc:	183ffa1e 	bne	r3,zero,4a8b8 <__alt_data_end+0xfffd88b8>
   4a8d0:	38000126 	beq	r7,zero,4a8d8 <__divsi3+0x60>
   4a8d4:	0085c83a 	sub	r2,zero,r2
   4a8d8:	f800283a 	ret
   4a8dc:	014bc83a 	sub	r5,zero,r5
   4a8e0:	39c0005c 	xori	r7,r7,1
   4a8e4:	003fe706 	br	4a884 <__alt_data_end+0xfffd8884>
   4a8e8:	0109c83a 	sub	r4,zero,r4
   4a8ec:	01c00044 	movi	r7,1
   4a8f0:	003fe306 	br	4a880 <__alt_data_end+0xfffd8880>
   4a8f4:	00c00044 	movi	r3,1
   4a8f8:	003fee06 	br	4a8b4 <__alt_data_end+0xfffd88b4>

0004a8fc <__modsi3>:
   4a8fc:	20001716 	blt	r4,zero,4a95c <__modsi3+0x60>
   4a900:	000f883a 	mov	r7,zero
   4a904:	2005883a 	mov	r2,r4
   4a908:	28001216 	blt	r5,zero,4a954 <__modsi3+0x58>
   4a90c:	2900162e 	bgeu	r5,r4,4a968 <__modsi3+0x6c>
   4a910:	01800804 	movi	r6,32
   4a914:	00c00044 	movi	r3,1
   4a918:	00000106 	br	4a920 <__modsi3+0x24>
   4a91c:	30000a26 	beq	r6,zero,4a948 <__modsi3+0x4c>
   4a920:	294b883a 	add	r5,r5,r5
   4a924:	31bfffc4 	addi	r6,r6,-1
   4a928:	18c7883a 	add	r3,r3,r3
   4a92c:	293ffb36 	bltu	r5,r4,4a91c <__alt_data_end+0xfffd891c>
   4a930:	18000526 	beq	r3,zero,4a948 <__modsi3+0x4c>
   4a934:	1806d07a 	srli	r3,r3,1
   4a938:	11400136 	bltu	r2,r5,4a940 <__modsi3+0x44>
   4a93c:	1145c83a 	sub	r2,r2,r5
   4a940:	280ad07a 	srli	r5,r5,1
   4a944:	183ffb1e 	bne	r3,zero,4a934 <__alt_data_end+0xfffd8934>
   4a948:	38000126 	beq	r7,zero,4a950 <__modsi3+0x54>
   4a94c:	0085c83a 	sub	r2,zero,r2
   4a950:	f800283a 	ret
   4a954:	014bc83a 	sub	r5,zero,r5
   4a958:	003fec06 	br	4a90c <__alt_data_end+0xfffd890c>
   4a95c:	0109c83a 	sub	r4,zero,r4
   4a960:	01c00044 	movi	r7,1
   4a964:	003fe706 	br	4a904 <__alt_data_end+0xfffd8904>
   4a968:	00c00044 	movi	r3,1
   4a96c:	003ff106 	br	4a934 <__alt_data_end+0xfffd8934>

0004a970 <__udivsi3>:
   4a970:	200d883a 	mov	r6,r4
   4a974:	2900152e 	bgeu	r5,r4,4a9cc <__udivsi3+0x5c>
   4a978:	28001416 	blt	r5,zero,4a9cc <__udivsi3+0x5c>
   4a97c:	00800804 	movi	r2,32
   4a980:	00c00044 	movi	r3,1
   4a984:	00000206 	br	4a990 <__udivsi3+0x20>
   4a988:	10000e26 	beq	r2,zero,4a9c4 <__udivsi3+0x54>
   4a98c:	28000516 	blt	r5,zero,4a9a4 <__udivsi3+0x34>
   4a990:	294b883a 	add	r5,r5,r5
   4a994:	10bfffc4 	addi	r2,r2,-1
   4a998:	18c7883a 	add	r3,r3,r3
   4a99c:	293ffa36 	bltu	r5,r4,4a988 <__alt_data_end+0xfffd8988>
   4a9a0:	18000826 	beq	r3,zero,4a9c4 <__udivsi3+0x54>
   4a9a4:	0005883a 	mov	r2,zero
   4a9a8:	31400236 	bltu	r6,r5,4a9b4 <__udivsi3+0x44>
   4a9ac:	314dc83a 	sub	r6,r6,r5
   4a9b0:	10c4b03a 	or	r2,r2,r3
   4a9b4:	1806d07a 	srli	r3,r3,1
   4a9b8:	280ad07a 	srli	r5,r5,1
   4a9bc:	183ffa1e 	bne	r3,zero,4a9a8 <__alt_data_end+0xfffd89a8>
   4a9c0:	f800283a 	ret
   4a9c4:	0005883a 	mov	r2,zero
   4a9c8:	f800283a 	ret
   4a9cc:	00c00044 	movi	r3,1
   4a9d0:	003ff406 	br	4a9a4 <__alt_data_end+0xfffd89a4>

0004a9d4 <__umodsi3>:
   4a9d4:	2005883a 	mov	r2,r4
   4a9d8:	2900122e 	bgeu	r5,r4,4aa24 <__umodsi3+0x50>
   4a9dc:	28001116 	blt	r5,zero,4aa24 <__umodsi3+0x50>
   4a9e0:	01800804 	movi	r6,32
   4a9e4:	00c00044 	movi	r3,1
   4a9e8:	00000206 	br	4a9f4 <__umodsi3+0x20>
   4a9ec:	30000c26 	beq	r6,zero,4aa20 <__umodsi3+0x4c>
   4a9f0:	28000516 	blt	r5,zero,4aa08 <__umodsi3+0x34>
   4a9f4:	294b883a 	add	r5,r5,r5
   4a9f8:	31bfffc4 	addi	r6,r6,-1
   4a9fc:	18c7883a 	add	r3,r3,r3
   4aa00:	293ffa36 	bltu	r5,r4,4a9ec <__alt_data_end+0xfffd89ec>
   4aa04:	18000626 	beq	r3,zero,4aa20 <__umodsi3+0x4c>
   4aa08:	1806d07a 	srli	r3,r3,1
   4aa0c:	11400136 	bltu	r2,r5,4aa14 <__umodsi3+0x40>
   4aa10:	1145c83a 	sub	r2,r2,r5
   4aa14:	280ad07a 	srli	r5,r5,1
   4aa18:	183ffb1e 	bne	r3,zero,4aa08 <__alt_data_end+0xfffd8a08>
   4aa1c:	f800283a 	ret
   4aa20:	f800283a 	ret
   4aa24:	00c00044 	movi	r3,1
   4aa28:	003ff706 	br	4aa08 <__alt_data_end+0xfffd8a08>

0004aa2c <__mulsi3>:
   4aa2c:	0005883a 	mov	r2,zero
   4aa30:	20000726 	beq	r4,zero,4aa50 <__mulsi3+0x24>
   4aa34:	20c0004c 	andi	r3,r4,1
   4aa38:	2008d07a 	srli	r4,r4,1
   4aa3c:	18000126 	beq	r3,zero,4aa44 <__mulsi3+0x18>
   4aa40:	1145883a 	add	r2,r2,r5
   4aa44:	294b883a 	add	r5,r5,r5
   4aa48:	203ffa1e 	bne	r4,zero,4aa34 <__alt_data_end+0xfffd8a34>
   4aa4c:	f800283a 	ret
   4aa50:	f800283a 	ret

0004aa54 <__adddf3>:
   4aa54:	02c00434 	movhi	r11,16
   4aa58:	5affffc4 	addi	r11,r11,-1
   4aa5c:	2806d7fa 	srli	r3,r5,31
   4aa60:	2ad4703a 	and	r10,r5,r11
   4aa64:	3ad2703a 	and	r9,r7,r11
   4aa68:	3804d53a 	srli	r2,r7,20
   4aa6c:	3018d77a 	srli	r12,r6,29
   4aa70:	280ad53a 	srli	r5,r5,20
   4aa74:	501490fa 	slli	r10,r10,3
   4aa78:	2010d77a 	srli	r8,r4,29
   4aa7c:	481290fa 	slli	r9,r9,3
   4aa80:	380ed7fa 	srli	r7,r7,31
   4aa84:	defffb04 	addi	sp,sp,-20
   4aa88:	dc800215 	stw	r18,8(sp)
   4aa8c:	dc400115 	stw	r17,4(sp)
   4aa90:	dc000015 	stw	r16,0(sp)
   4aa94:	dfc00415 	stw	ra,16(sp)
   4aa98:	dcc00315 	stw	r19,12(sp)
   4aa9c:	1c803fcc 	andi	r18,r3,255
   4aaa0:	2c01ffcc 	andi	r16,r5,2047
   4aaa4:	5210b03a 	or	r8,r10,r8
   4aaa8:	202290fa 	slli	r17,r4,3
   4aaac:	1081ffcc 	andi	r2,r2,2047
   4aab0:	4b12b03a 	or	r9,r9,r12
   4aab4:	300c90fa 	slli	r6,r6,3
   4aab8:	91c07526 	beq	r18,r7,4ac90 <__adddf3+0x23c>
   4aabc:	8087c83a 	sub	r3,r16,r2
   4aac0:	00c0ab0e 	bge	zero,r3,4ad70 <__adddf3+0x31c>
   4aac4:	10002a1e 	bne	r2,zero,4ab70 <__adddf3+0x11c>
   4aac8:	4984b03a 	or	r2,r9,r6
   4aacc:	1000961e 	bne	r2,zero,4ad28 <__adddf3+0x2d4>
   4aad0:	888001cc 	andi	r2,r17,7
   4aad4:	10000726 	beq	r2,zero,4aaf4 <__adddf3+0xa0>
   4aad8:	888003cc 	andi	r2,r17,15
   4aadc:	00c00104 	movi	r3,4
   4aae0:	10c00426 	beq	r2,r3,4aaf4 <__adddf3+0xa0>
   4aae4:	88c7883a 	add	r3,r17,r3
   4aae8:	1c63803a 	cmpltu	r17,r3,r17
   4aaec:	4451883a 	add	r8,r8,r17
   4aaf0:	1823883a 	mov	r17,r3
   4aaf4:	4080202c 	andhi	r2,r8,128
   4aaf8:	10005926 	beq	r2,zero,4ac60 <__adddf3+0x20c>
   4aafc:	84000044 	addi	r16,r16,1
   4ab00:	0081ffc4 	movi	r2,2047
   4ab04:	8080ba26 	beq	r16,r2,4adf0 <__adddf3+0x39c>
   4ab08:	00bfe034 	movhi	r2,65408
   4ab0c:	10bfffc4 	addi	r2,r2,-1
   4ab10:	4090703a 	and	r8,r8,r2
   4ab14:	4004977a 	slli	r2,r8,29
   4ab18:	4010927a 	slli	r8,r8,9
   4ab1c:	8822d0fa 	srli	r17,r17,3
   4ab20:	8401ffcc 	andi	r16,r16,2047
   4ab24:	4010d33a 	srli	r8,r8,12
   4ab28:	9007883a 	mov	r3,r18
   4ab2c:	1444b03a 	or	r2,r2,r17
   4ab30:	8401ffcc 	andi	r16,r16,2047
   4ab34:	8020953a 	slli	r16,r16,20
   4ab38:	18c03fcc 	andi	r3,r3,255
   4ab3c:	01000434 	movhi	r4,16
   4ab40:	213fffc4 	addi	r4,r4,-1
   4ab44:	180697fa 	slli	r3,r3,31
   4ab48:	4110703a 	and	r8,r8,r4
   4ab4c:	4410b03a 	or	r8,r8,r16
   4ab50:	40c6b03a 	or	r3,r8,r3
   4ab54:	dfc00417 	ldw	ra,16(sp)
   4ab58:	dcc00317 	ldw	r19,12(sp)
   4ab5c:	dc800217 	ldw	r18,8(sp)
   4ab60:	dc400117 	ldw	r17,4(sp)
   4ab64:	dc000017 	ldw	r16,0(sp)
   4ab68:	dec00504 	addi	sp,sp,20
   4ab6c:	f800283a 	ret
   4ab70:	0081ffc4 	movi	r2,2047
   4ab74:	80bfd626 	beq	r16,r2,4aad0 <__alt_data_end+0xfffd8ad0>
   4ab78:	4a402034 	orhi	r9,r9,128
   4ab7c:	00800e04 	movi	r2,56
   4ab80:	10c09f16 	blt	r2,r3,4ae00 <__adddf3+0x3ac>
   4ab84:	008007c4 	movi	r2,31
   4ab88:	10c0c216 	blt	r2,r3,4ae94 <__adddf3+0x440>
   4ab8c:	00800804 	movi	r2,32
   4ab90:	10c5c83a 	sub	r2,r2,r3
   4ab94:	488a983a 	sll	r5,r9,r2
   4ab98:	30c8d83a 	srl	r4,r6,r3
   4ab9c:	3084983a 	sll	r2,r6,r2
   4aba0:	48c6d83a 	srl	r3,r9,r3
   4aba4:	290cb03a 	or	r6,r5,r4
   4aba8:	1004c03a 	cmpne	r2,r2,zero
   4abac:	308cb03a 	or	r6,r6,r2
   4abb0:	898dc83a 	sub	r6,r17,r6
   4abb4:	89a3803a 	cmpltu	r17,r17,r6
   4abb8:	40d1c83a 	sub	r8,r8,r3
   4abbc:	4451c83a 	sub	r8,r8,r17
   4abc0:	3023883a 	mov	r17,r6
   4abc4:	4080202c 	andhi	r2,r8,128
   4abc8:	10002326 	beq	r2,zero,4ac58 <__adddf3+0x204>
   4abcc:	04c02034 	movhi	r19,128
   4abd0:	9cffffc4 	addi	r19,r19,-1
   4abd4:	44e6703a 	and	r19,r8,r19
   4abd8:	98007626 	beq	r19,zero,4adb4 <__adddf3+0x360>
   4abdc:	9809883a 	mov	r4,r19
   4abe0:	004d2940 	call	4d294 <__clzsi2>
   4abe4:	10fffe04 	addi	r3,r2,-8
   4abe8:	010007c4 	movi	r4,31
   4abec:	20c07716 	blt	r4,r3,4adcc <__adddf3+0x378>
   4abf0:	00800804 	movi	r2,32
   4abf4:	10c5c83a 	sub	r2,r2,r3
   4abf8:	8884d83a 	srl	r2,r17,r2
   4abfc:	98d0983a 	sll	r8,r19,r3
   4ac00:	88e2983a 	sll	r17,r17,r3
   4ac04:	1204b03a 	or	r2,r2,r8
   4ac08:	1c007416 	blt	r3,r16,4addc <__adddf3+0x388>
   4ac0c:	1c21c83a 	sub	r16,r3,r16
   4ac10:	82000044 	addi	r8,r16,1
   4ac14:	00c007c4 	movi	r3,31
   4ac18:	1a009116 	blt	r3,r8,4ae60 <__adddf3+0x40c>
   4ac1c:	00c00804 	movi	r3,32
   4ac20:	1a07c83a 	sub	r3,r3,r8
   4ac24:	8a08d83a 	srl	r4,r17,r8
   4ac28:	88e2983a 	sll	r17,r17,r3
   4ac2c:	10c6983a 	sll	r3,r2,r3
   4ac30:	1210d83a 	srl	r8,r2,r8
   4ac34:	8804c03a 	cmpne	r2,r17,zero
   4ac38:	1906b03a 	or	r3,r3,r4
   4ac3c:	18a2b03a 	or	r17,r3,r2
   4ac40:	0021883a 	mov	r16,zero
   4ac44:	003fa206 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4ac48:	1890b03a 	or	r8,r3,r2
   4ac4c:	40017d26 	beq	r8,zero,4b244 <__adddf3+0x7f0>
   4ac50:	1011883a 	mov	r8,r2
   4ac54:	1823883a 	mov	r17,r3
   4ac58:	888001cc 	andi	r2,r17,7
   4ac5c:	103f9e1e 	bne	r2,zero,4aad8 <__alt_data_end+0xfffd8ad8>
   4ac60:	4004977a 	slli	r2,r8,29
   4ac64:	8822d0fa 	srli	r17,r17,3
   4ac68:	4010d0fa 	srli	r8,r8,3
   4ac6c:	9007883a 	mov	r3,r18
   4ac70:	1444b03a 	or	r2,r2,r17
   4ac74:	0101ffc4 	movi	r4,2047
   4ac78:	81002426 	beq	r16,r4,4ad0c <__adddf3+0x2b8>
   4ac7c:	8120703a 	and	r16,r16,r4
   4ac80:	01000434 	movhi	r4,16
   4ac84:	213fffc4 	addi	r4,r4,-1
   4ac88:	4110703a 	and	r8,r8,r4
   4ac8c:	003fa806 	br	4ab30 <__alt_data_end+0xfffd8b30>
   4ac90:	8089c83a 	sub	r4,r16,r2
   4ac94:	01005e0e 	bge	zero,r4,4ae10 <__adddf3+0x3bc>
   4ac98:	10002b26 	beq	r2,zero,4ad48 <__adddf3+0x2f4>
   4ac9c:	0081ffc4 	movi	r2,2047
   4aca0:	80bf8b26 	beq	r16,r2,4aad0 <__alt_data_end+0xfffd8ad0>
   4aca4:	4a402034 	orhi	r9,r9,128
   4aca8:	00800e04 	movi	r2,56
   4acac:	1100a40e 	bge	r2,r4,4af40 <__adddf3+0x4ec>
   4acb0:	498cb03a 	or	r6,r9,r6
   4acb4:	300ac03a 	cmpne	r5,r6,zero
   4acb8:	0013883a 	mov	r9,zero
   4acbc:	2c4b883a 	add	r5,r5,r17
   4acc0:	2c63803a 	cmpltu	r17,r5,r17
   4acc4:	4a11883a 	add	r8,r9,r8
   4acc8:	8a11883a 	add	r8,r17,r8
   4accc:	2823883a 	mov	r17,r5
   4acd0:	4080202c 	andhi	r2,r8,128
   4acd4:	103fe026 	beq	r2,zero,4ac58 <__alt_data_end+0xfffd8c58>
   4acd8:	84000044 	addi	r16,r16,1
   4acdc:	0081ffc4 	movi	r2,2047
   4ace0:	8080d226 	beq	r16,r2,4b02c <__adddf3+0x5d8>
   4ace4:	00bfe034 	movhi	r2,65408
   4ace8:	10bfffc4 	addi	r2,r2,-1
   4acec:	4090703a 	and	r8,r8,r2
   4acf0:	880ad07a 	srli	r5,r17,1
   4acf4:	400897fa 	slli	r4,r8,31
   4acf8:	88c0004c 	andi	r3,r17,1
   4acfc:	28e2b03a 	or	r17,r5,r3
   4ad00:	4010d07a 	srli	r8,r8,1
   4ad04:	2462b03a 	or	r17,r4,r17
   4ad08:	003f7106 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4ad0c:	4088b03a 	or	r4,r8,r2
   4ad10:	20014526 	beq	r4,zero,4b228 <__adddf3+0x7d4>
   4ad14:	01000434 	movhi	r4,16
   4ad18:	42000234 	orhi	r8,r8,8
   4ad1c:	213fffc4 	addi	r4,r4,-1
   4ad20:	4110703a 	and	r8,r8,r4
   4ad24:	003f8206 	br	4ab30 <__alt_data_end+0xfffd8b30>
   4ad28:	18ffffc4 	addi	r3,r3,-1
   4ad2c:	1800491e 	bne	r3,zero,4ae54 <__adddf3+0x400>
   4ad30:	898bc83a 	sub	r5,r17,r6
   4ad34:	8963803a 	cmpltu	r17,r17,r5
   4ad38:	4251c83a 	sub	r8,r8,r9
   4ad3c:	4451c83a 	sub	r8,r8,r17
   4ad40:	2823883a 	mov	r17,r5
   4ad44:	003f9f06 	br	4abc4 <__alt_data_end+0xfffd8bc4>
   4ad48:	4984b03a 	or	r2,r9,r6
   4ad4c:	103f6026 	beq	r2,zero,4aad0 <__alt_data_end+0xfffd8ad0>
   4ad50:	213fffc4 	addi	r4,r4,-1
   4ad54:	2000931e 	bne	r4,zero,4afa4 <__adddf3+0x550>
   4ad58:	898d883a 	add	r6,r17,r6
   4ad5c:	3463803a 	cmpltu	r17,r6,r17
   4ad60:	4251883a 	add	r8,r8,r9
   4ad64:	8a11883a 	add	r8,r17,r8
   4ad68:	3023883a 	mov	r17,r6
   4ad6c:	003fd806 	br	4acd0 <__alt_data_end+0xfffd8cd0>
   4ad70:	1800541e 	bne	r3,zero,4aec4 <__adddf3+0x470>
   4ad74:	80800044 	addi	r2,r16,1
   4ad78:	1081ffcc 	andi	r2,r2,2047
   4ad7c:	00c00044 	movi	r3,1
   4ad80:	1880a00e 	bge	r3,r2,4b004 <__adddf3+0x5b0>
   4ad84:	8989c83a 	sub	r4,r17,r6
   4ad88:	8905803a 	cmpltu	r2,r17,r4
   4ad8c:	4267c83a 	sub	r19,r8,r9
   4ad90:	98a7c83a 	sub	r19,r19,r2
   4ad94:	9880202c 	andhi	r2,r19,128
   4ad98:	10006326 	beq	r2,zero,4af28 <__adddf3+0x4d4>
   4ad9c:	3463c83a 	sub	r17,r6,r17
   4ada0:	4a07c83a 	sub	r3,r9,r8
   4ada4:	344d803a 	cmpltu	r6,r6,r17
   4ada8:	19a7c83a 	sub	r19,r3,r6
   4adac:	3825883a 	mov	r18,r7
   4adb0:	983f8a1e 	bne	r19,zero,4abdc <__alt_data_end+0xfffd8bdc>
   4adb4:	8809883a 	mov	r4,r17
   4adb8:	004d2940 	call	4d294 <__clzsi2>
   4adbc:	10800804 	addi	r2,r2,32
   4adc0:	10fffe04 	addi	r3,r2,-8
   4adc4:	010007c4 	movi	r4,31
   4adc8:	20ff890e 	bge	r4,r3,4abf0 <__alt_data_end+0xfffd8bf0>
   4adcc:	10bff604 	addi	r2,r2,-40
   4add0:	8884983a 	sll	r2,r17,r2
   4add4:	0023883a 	mov	r17,zero
   4add8:	1c3f8c0e 	bge	r3,r16,4ac0c <__alt_data_end+0xfffd8c0c>
   4addc:	023fe034 	movhi	r8,65408
   4ade0:	423fffc4 	addi	r8,r8,-1
   4ade4:	80e1c83a 	sub	r16,r16,r3
   4ade8:	1210703a 	and	r8,r2,r8
   4adec:	003f3806 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4adf0:	9007883a 	mov	r3,r18
   4adf4:	0011883a 	mov	r8,zero
   4adf8:	0005883a 	mov	r2,zero
   4adfc:	003f4c06 	br	4ab30 <__alt_data_end+0xfffd8b30>
   4ae00:	498cb03a 	or	r6,r9,r6
   4ae04:	300cc03a 	cmpne	r6,r6,zero
   4ae08:	0007883a 	mov	r3,zero
   4ae0c:	003f6806 	br	4abb0 <__alt_data_end+0xfffd8bb0>
   4ae10:	20009c1e 	bne	r4,zero,4b084 <__adddf3+0x630>
   4ae14:	80800044 	addi	r2,r16,1
   4ae18:	1141ffcc 	andi	r5,r2,2047
   4ae1c:	01000044 	movi	r4,1
   4ae20:	2140670e 	bge	r4,r5,4afc0 <__adddf3+0x56c>
   4ae24:	0101ffc4 	movi	r4,2047
   4ae28:	11007f26 	beq	r2,r4,4b028 <__adddf3+0x5d4>
   4ae2c:	898d883a 	add	r6,r17,r6
   4ae30:	4247883a 	add	r3,r8,r9
   4ae34:	3451803a 	cmpltu	r8,r6,r17
   4ae38:	40d1883a 	add	r8,r8,r3
   4ae3c:	402297fa 	slli	r17,r8,31
   4ae40:	300cd07a 	srli	r6,r6,1
   4ae44:	4010d07a 	srli	r8,r8,1
   4ae48:	1021883a 	mov	r16,r2
   4ae4c:	89a2b03a 	or	r17,r17,r6
   4ae50:	003f1f06 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4ae54:	0081ffc4 	movi	r2,2047
   4ae58:	80bf481e 	bne	r16,r2,4ab7c <__alt_data_end+0xfffd8b7c>
   4ae5c:	003f1c06 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4ae60:	843ff844 	addi	r16,r16,-31
   4ae64:	01000804 	movi	r4,32
   4ae68:	1406d83a 	srl	r3,r2,r16
   4ae6c:	41005026 	beq	r8,r4,4afb0 <__adddf3+0x55c>
   4ae70:	01001004 	movi	r4,64
   4ae74:	2211c83a 	sub	r8,r4,r8
   4ae78:	1204983a 	sll	r2,r2,r8
   4ae7c:	88a2b03a 	or	r17,r17,r2
   4ae80:	8822c03a 	cmpne	r17,r17,zero
   4ae84:	1c62b03a 	or	r17,r3,r17
   4ae88:	0011883a 	mov	r8,zero
   4ae8c:	0021883a 	mov	r16,zero
   4ae90:	003f7106 	br	4ac58 <__alt_data_end+0xfffd8c58>
   4ae94:	193ff804 	addi	r4,r3,-32
   4ae98:	00800804 	movi	r2,32
   4ae9c:	4908d83a 	srl	r4,r9,r4
   4aea0:	18804526 	beq	r3,r2,4afb8 <__adddf3+0x564>
   4aea4:	00801004 	movi	r2,64
   4aea8:	10c5c83a 	sub	r2,r2,r3
   4aeac:	4886983a 	sll	r3,r9,r2
   4aeb0:	198cb03a 	or	r6,r3,r6
   4aeb4:	300cc03a 	cmpne	r6,r6,zero
   4aeb8:	218cb03a 	or	r6,r4,r6
   4aebc:	0007883a 	mov	r3,zero
   4aec0:	003f3b06 	br	4abb0 <__alt_data_end+0xfffd8bb0>
   4aec4:	80002a26 	beq	r16,zero,4af70 <__adddf3+0x51c>
   4aec8:	0101ffc4 	movi	r4,2047
   4aecc:	11006826 	beq	r2,r4,4b070 <__adddf3+0x61c>
   4aed0:	00c7c83a 	sub	r3,zero,r3
   4aed4:	42002034 	orhi	r8,r8,128
   4aed8:	01000e04 	movi	r4,56
   4aedc:	20c07c16 	blt	r4,r3,4b0d0 <__adddf3+0x67c>
   4aee0:	010007c4 	movi	r4,31
   4aee4:	20c0da16 	blt	r4,r3,4b250 <__adddf3+0x7fc>
   4aee8:	01000804 	movi	r4,32
   4aeec:	20c9c83a 	sub	r4,r4,r3
   4aef0:	4114983a 	sll	r10,r8,r4
   4aef4:	88cad83a 	srl	r5,r17,r3
   4aef8:	8908983a 	sll	r4,r17,r4
   4aefc:	40c6d83a 	srl	r3,r8,r3
   4af00:	5162b03a 	or	r17,r10,r5
   4af04:	2008c03a 	cmpne	r4,r4,zero
   4af08:	8922b03a 	or	r17,r17,r4
   4af0c:	3463c83a 	sub	r17,r6,r17
   4af10:	48c7c83a 	sub	r3,r9,r3
   4af14:	344d803a 	cmpltu	r6,r6,r17
   4af18:	1991c83a 	sub	r8,r3,r6
   4af1c:	1021883a 	mov	r16,r2
   4af20:	3825883a 	mov	r18,r7
   4af24:	003f2706 	br	4abc4 <__alt_data_end+0xfffd8bc4>
   4af28:	24d0b03a 	or	r8,r4,r19
   4af2c:	40001b1e 	bne	r8,zero,4af9c <__adddf3+0x548>
   4af30:	0005883a 	mov	r2,zero
   4af34:	0007883a 	mov	r3,zero
   4af38:	0021883a 	mov	r16,zero
   4af3c:	003f4d06 	br	4ac74 <__alt_data_end+0xfffd8c74>
   4af40:	008007c4 	movi	r2,31
   4af44:	11003c16 	blt	r2,r4,4b038 <__adddf3+0x5e4>
   4af48:	00800804 	movi	r2,32
   4af4c:	1105c83a 	sub	r2,r2,r4
   4af50:	488e983a 	sll	r7,r9,r2
   4af54:	310ad83a 	srl	r5,r6,r4
   4af58:	3084983a 	sll	r2,r6,r2
   4af5c:	4912d83a 	srl	r9,r9,r4
   4af60:	394ab03a 	or	r5,r7,r5
   4af64:	1004c03a 	cmpne	r2,r2,zero
   4af68:	288ab03a 	or	r5,r5,r2
   4af6c:	003f5306 	br	4acbc <__alt_data_end+0xfffd8cbc>
   4af70:	4448b03a 	or	r4,r8,r17
   4af74:	20003e26 	beq	r4,zero,4b070 <__adddf3+0x61c>
   4af78:	00c6303a 	nor	r3,zero,r3
   4af7c:	18003a1e 	bne	r3,zero,4b068 <__adddf3+0x614>
   4af80:	3463c83a 	sub	r17,r6,r17
   4af84:	4a07c83a 	sub	r3,r9,r8
   4af88:	344d803a 	cmpltu	r6,r6,r17
   4af8c:	1991c83a 	sub	r8,r3,r6
   4af90:	1021883a 	mov	r16,r2
   4af94:	3825883a 	mov	r18,r7
   4af98:	003f0a06 	br	4abc4 <__alt_data_end+0xfffd8bc4>
   4af9c:	2023883a 	mov	r17,r4
   4afa0:	003f0d06 	br	4abd8 <__alt_data_end+0xfffd8bd8>
   4afa4:	0081ffc4 	movi	r2,2047
   4afa8:	80bf3f1e 	bne	r16,r2,4aca8 <__alt_data_end+0xfffd8ca8>
   4afac:	003ec806 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4afb0:	0005883a 	mov	r2,zero
   4afb4:	003fb106 	br	4ae7c <__alt_data_end+0xfffd8e7c>
   4afb8:	0007883a 	mov	r3,zero
   4afbc:	003fbc06 	br	4aeb0 <__alt_data_end+0xfffd8eb0>
   4afc0:	4444b03a 	or	r2,r8,r17
   4afc4:	8000871e 	bne	r16,zero,4b1e4 <__adddf3+0x790>
   4afc8:	1000ba26 	beq	r2,zero,4b2b4 <__adddf3+0x860>
   4afcc:	4984b03a 	or	r2,r9,r6
   4afd0:	103ebf26 	beq	r2,zero,4aad0 <__alt_data_end+0xfffd8ad0>
   4afd4:	8985883a 	add	r2,r17,r6
   4afd8:	4247883a 	add	r3,r8,r9
   4afdc:	1451803a 	cmpltu	r8,r2,r17
   4afe0:	40d1883a 	add	r8,r8,r3
   4afe4:	40c0202c 	andhi	r3,r8,128
   4afe8:	1023883a 	mov	r17,r2
   4afec:	183f1a26 	beq	r3,zero,4ac58 <__alt_data_end+0xfffd8c58>
   4aff0:	00bfe034 	movhi	r2,65408
   4aff4:	10bfffc4 	addi	r2,r2,-1
   4aff8:	2021883a 	mov	r16,r4
   4affc:	4090703a 	and	r8,r8,r2
   4b000:	003eb306 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b004:	4444b03a 	or	r2,r8,r17
   4b008:	8000291e 	bne	r16,zero,4b0b0 <__adddf3+0x65c>
   4b00c:	10004b1e 	bne	r2,zero,4b13c <__adddf3+0x6e8>
   4b010:	4990b03a 	or	r8,r9,r6
   4b014:	40008b26 	beq	r8,zero,4b244 <__adddf3+0x7f0>
   4b018:	4811883a 	mov	r8,r9
   4b01c:	3023883a 	mov	r17,r6
   4b020:	3825883a 	mov	r18,r7
   4b024:	003eaa06 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b028:	1021883a 	mov	r16,r2
   4b02c:	0011883a 	mov	r8,zero
   4b030:	0005883a 	mov	r2,zero
   4b034:	003f0f06 	br	4ac74 <__alt_data_end+0xfffd8c74>
   4b038:	217ff804 	addi	r5,r4,-32
   4b03c:	00800804 	movi	r2,32
   4b040:	494ad83a 	srl	r5,r9,r5
   4b044:	20807d26 	beq	r4,r2,4b23c <__adddf3+0x7e8>
   4b048:	00801004 	movi	r2,64
   4b04c:	1109c83a 	sub	r4,r2,r4
   4b050:	4912983a 	sll	r9,r9,r4
   4b054:	498cb03a 	or	r6,r9,r6
   4b058:	300cc03a 	cmpne	r6,r6,zero
   4b05c:	298ab03a 	or	r5,r5,r6
   4b060:	0013883a 	mov	r9,zero
   4b064:	003f1506 	br	4acbc <__alt_data_end+0xfffd8cbc>
   4b068:	0101ffc4 	movi	r4,2047
   4b06c:	113f9a1e 	bne	r2,r4,4aed8 <__alt_data_end+0xfffd8ed8>
   4b070:	4811883a 	mov	r8,r9
   4b074:	3023883a 	mov	r17,r6
   4b078:	1021883a 	mov	r16,r2
   4b07c:	3825883a 	mov	r18,r7
   4b080:	003e9306 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b084:	8000161e 	bne	r16,zero,4b0e0 <__adddf3+0x68c>
   4b088:	444ab03a 	or	r5,r8,r17
   4b08c:	28005126 	beq	r5,zero,4b1d4 <__adddf3+0x780>
   4b090:	0108303a 	nor	r4,zero,r4
   4b094:	20004d1e 	bne	r4,zero,4b1cc <__adddf3+0x778>
   4b098:	89a3883a 	add	r17,r17,r6
   4b09c:	4253883a 	add	r9,r8,r9
   4b0a0:	898d803a 	cmpltu	r6,r17,r6
   4b0a4:	3251883a 	add	r8,r6,r9
   4b0a8:	1021883a 	mov	r16,r2
   4b0ac:	003f0806 	br	4acd0 <__alt_data_end+0xfffd8cd0>
   4b0b0:	1000301e 	bne	r2,zero,4b174 <__adddf3+0x720>
   4b0b4:	4984b03a 	or	r2,r9,r6
   4b0b8:	10007126 	beq	r2,zero,4b280 <__adddf3+0x82c>
   4b0bc:	4811883a 	mov	r8,r9
   4b0c0:	3023883a 	mov	r17,r6
   4b0c4:	3825883a 	mov	r18,r7
   4b0c8:	0401ffc4 	movi	r16,2047
   4b0cc:	003e8006 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b0d0:	4462b03a 	or	r17,r8,r17
   4b0d4:	8822c03a 	cmpne	r17,r17,zero
   4b0d8:	0007883a 	mov	r3,zero
   4b0dc:	003f8b06 	br	4af0c <__alt_data_end+0xfffd8f0c>
   4b0e0:	0141ffc4 	movi	r5,2047
   4b0e4:	11403b26 	beq	r2,r5,4b1d4 <__adddf3+0x780>
   4b0e8:	0109c83a 	sub	r4,zero,r4
   4b0ec:	42002034 	orhi	r8,r8,128
   4b0f0:	01400e04 	movi	r5,56
   4b0f4:	29006716 	blt	r5,r4,4b294 <__adddf3+0x840>
   4b0f8:	014007c4 	movi	r5,31
   4b0fc:	29007016 	blt	r5,r4,4b2c0 <__adddf3+0x86c>
   4b100:	01400804 	movi	r5,32
   4b104:	290bc83a 	sub	r5,r5,r4
   4b108:	4154983a 	sll	r10,r8,r5
   4b10c:	890ed83a 	srl	r7,r17,r4
   4b110:	894a983a 	sll	r5,r17,r5
   4b114:	4108d83a 	srl	r4,r8,r4
   4b118:	51e2b03a 	or	r17,r10,r7
   4b11c:	280ac03a 	cmpne	r5,r5,zero
   4b120:	8962b03a 	or	r17,r17,r5
   4b124:	89a3883a 	add	r17,r17,r6
   4b128:	2253883a 	add	r9,r4,r9
   4b12c:	898d803a 	cmpltu	r6,r17,r6
   4b130:	3251883a 	add	r8,r6,r9
   4b134:	1021883a 	mov	r16,r2
   4b138:	003ee506 	br	4acd0 <__alt_data_end+0xfffd8cd0>
   4b13c:	4984b03a 	or	r2,r9,r6
   4b140:	103e6326 	beq	r2,zero,4aad0 <__alt_data_end+0xfffd8ad0>
   4b144:	8987c83a 	sub	r3,r17,r6
   4b148:	88c9803a 	cmpltu	r4,r17,r3
   4b14c:	4245c83a 	sub	r2,r8,r9
   4b150:	1105c83a 	sub	r2,r2,r4
   4b154:	1100202c 	andhi	r4,r2,128
   4b158:	203ebb26 	beq	r4,zero,4ac48 <__alt_data_end+0xfffd8c48>
   4b15c:	3463c83a 	sub	r17,r6,r17
   4b160:	4a07c83a 	sub	r3,r9,r8
   4b164:	344d803a 	cmpltu	r6,r6,r17
   4b168:	1991c83a 	sub	r8,r3,r6
   4b16c:	3825883a 	mov	r18,r7
   4b170:	003e5706 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b174:	4984b03a 	or	r2,r9,r6
   4b178:	10002e26 	beq	r2,zero,4b234 <__adddf3+0x7e0>
   4b17c:	4004d0fa 	srli	r2,r8,3
   4b180:	8822d0fa 	srli	r17,r17,3
   4b184:	4010977a 	slli	r8,r8,29
   4b188:	10c0022c 	andhi	r3,r2,8
   4b18c:	4462b03a 	or	r17,r8,r17
   4b190:	18000826 	beq	r3,zero,4b1b4 <__adddf3+0x760>
   4b194:	4808d0fa 	srli	r4,r9,3
   4b198:	20c0022c 	andhi	r3,r4,8
   4b19c:	1800051e 	bne	r3,zero,4b1b4 <__adddf3+0x760>
   4b1a0:	300cd0fa 	srli	r6,r6,3
   4b1a4:	4806977a 	slli	r3,r9,29
   4b1a8:	2005883a 	mov	r2,r4
   4b1ac:	3825883a 	mov	r18,r7
   4b1b0:	19a2b03a 	or	r17,r3,r6
   4b1b4:	8810d77a 	srli	r8,r17,29
   4b1b8:	100490fa 	slli	r2,r2,3
   4b1bc:	882290fa 	slli	r17,r17,3
   4b1c0:	0401ffc4 	movi	r16,2047
   4b1c4:	4090b03a 	or	r8,r8,r2
   4b1c8:	003e4106 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b1cc:	0141ffc4 	movi	r5,2047
   4b1d0:	117fc71e 	bne	r2,r5,4b0f0 <__alt_data_end+0xfffd90f0>
   4b1d4:	4811883a 	mov	r8,r9
   4b1d8:	3023883a 	mov	r17,r6
   4b1dc:	1021883a 	mov	r16,r2
   4b1e0:	003e3b06 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b1e4:	10002f26 	beq	r2,zero,4b2a4 <__adddf3+0x850>
   4b1e8:	4984b03a 	or	r2,r9,r6
   4b1ec:	10001126 	beq	r2,zero,4b234 <__adddf3+0x7e0>
   4b1f0:	4004d0fa 	srli	r2,r8,3
   4b1f4:	8822d0fa 	srli	r17,r17,3
   4b1f8:	4010977a 	slli	r8,r8,29
   4b1fc:	10c0022c 	andhi	r3,r2,8
   4b200:	4462b03a 	or	r17,r8,r17
   4b204:	183feb26 	beq	r3,zero,4b1b4 <__alt_data_end+0xfffd91b4>
   4b208:	4808d0fa 	srli	r4,r9,3
   4b20c:	20c0022c 	andhi	r3,r4,8
   4b210:	183fe81e 	bne	r3,zero,4b1b4 <__alt_data_end+0xfffd91b4>
   4b214:	300cd0fa 	srli	r6,r6,3
   4b218:	4806977a 	slli	r3,r9,29
   4b21c:	2005883a 	mov	r2,r4
   4b220:	19a2b03a 	or	r17,r3,r6
   4b224:	003fe306 	br	4b1b4 <__alt_data_end+0xfffd91b4>
   4b228:	0011883a 	mov	r8,zero
   4b22c:	0005883a 	mov	r2,zero
   4b230:	003e3f06 	br	4ab30 <__alt_data_end+0xfffd8b30>
   4b234:	0401ffc4 	movi	r16,2047
   4b238:	003e2506 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b23c:	0013883a 	mov	r9,zero
   4b240:	003f8406 	br	4b054 <__alt_data_end+0xfffd9054>
   4b244:	0005883a 	mov	r2,zero
   4b248:	0007883a 	mov	r3,zero
   4b24c:	003e8906 	br	4ac74 <__alt_data_end+0xfffd8c74>
   4b250:	197ff804 	addi	r5,r3,-32
   4b254:	01000804 	movi	r4,32
   4b258:	414ad83a 	srl	r5,r8,r5
   4b25c:	19002426 	beq	r3,r4,4b2f0 <__adddf3+0x89c>
   4b260:	01001004 	movi	r4,64
   4b264:	20c7c83a 	sub	r3,r4,r3
   4b268:	40c6983a 	sll	r3,r8,r3
   4b26c:	1c46b03a 	or	r3,r3,r17
   4b270:	1806c03a 	cmpne	r3,r3,zero
   4b274:	28e2b03a 	or	r17,r5,r3
   4b278:	0007883a 	mov	r3,zero
   4b27c:	003f2306 	br	4af0c <__alt_data_end+0xfffd8f0c>
   4b280:	0007883a 	mov	r3,zero
   4b284:	5811883a 	mov	r8,r11
   4b288:	00bfffc4 	movi	r2,-1
   4b28c:	0401ffc4 	movi	r16,2047
   4b290:	003e7806 	br	4ac74 <__alt_data_end+0xfffd8c74>
   4b294:	4462b03a 	or	r17,r8,r17
   4b298:	8822c03a 	cmpne	r17,r17,zero
   4b29c:	0009883a 	mov	r4,zero
   4b2a0:	003fa006 	br	4b124 <__alt_data_end+0xfffd9124>
   4b2a4:	4811883a 	mov	r8,r9
   4b2a8:	3023883a 	mov	r17,r6
   4b2ac:	0401ffc4 	movi	r16,2047
   4b2b0:	003e0706 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b2b4:	4811883a 	mov	r8,r9
   4b2b8:	3023883a 	mov	r17,r6
   4b2bc:	003e0406 	br	4aad0 <__alt_data_end+0xfffd8ad0>
   4b2c0:	21fff804 	addi	r7,r4,-32
   4b2c4:	01400804 	movi	r5,32
   4b2c8:	41ced83a 	srl	r7,r8,r7
   4b2cc:	21400a26 	beq	r4,r5,4b2f8 <__adddf3+0x8a4>
   4b2d0:	01401004 	movi	r5,64
   4b2d4:	2909c83a 	sub	r4,r5,r4
   4b2d8:	4108983a 	sll	r4,r8,r4
   4b2dc:	2448b03a 	or	r4,r4,r17
   4b2e0:	2008c03a 	cmpne	r4,r4,zero
   4b2e4:	3922b03a 	or	r17,r7,r4
   4b2e8:	0009883a 	mov	r4,zero
   4b2ec:	003f8d06 	br	4b124 <__alt_data_end+0xfffd9124>
   4b2f0:	0007883a 	mov	r3,zero
   4b2f4:	003fdd06 	br	4b26c <__alt_data_end+0xfffd926c>
   4b2f8:	0009883a 	mov	r4,zero
   4b2fc:	003ff706 	br	4b2dc <__alt_data_end+0xfffd92dc>

0004b300 <__divdf3>:
   4b300:	defff004 	addi	sp,sp,-64
   4b304:	dc800815 	stw	r18,32(sp)
   4b308:	2824d53a 	srli	r18,r5,20
   4b30c:	dd800c15 	stw	r22,48(sp)
   4b310:	282cd7fa 	srli	r22,r5,31
   4b314:	dc000615 	stw	r16,24(sp)
   4b318:	04000434 	movhi	r16,16
   4b31c:	843fffc4 	addi	r16,r16,-1
   4b320:	dfc00f15 	stw	ra,60(sp)
   4b324:	df000e15 	stw	fp,56(sp)
   4b328:	ddc00d15 	stw	r23,52(sp)
   4b32c:	dd400b15 	stw	r21,44(sp)
   4b330:	dd000a15 	stw	r20,40(sp)
   4b334:	dcc00915 	stw	r19,36(sp)
   4b338:	dc400715 	stw	r17,28(sp)
   4b33c:	9481ffcc 	andi	r18,r18,2047
   4b340:	2c20703a 	and	r16,r5,r16
   4b344:	b2003fcc 	andi	r8,r22,255
   4b348:	90006126 	beq	r18,zero,4b4d0 <__divdf3+0x1d0>
   4b34c:	0081ffc4 	movi	r2,2047
   4b350:	202b883a 	mov	r21,r4
   4b354:	90803726 	beq	r18,r2,4b434 <__divdf3+0x134>
   4b358:	80800434 	orhi	r2,r16,16
   4b35c:	100490fa 	slli	r2,r2,3
   4b360:	2020d77a 	srli	r16,r4,29
   4b364:	202a90fa 	slli	r21,r4,3
   4b368:	94bf0044 	addi	r18,r18,-1023
   4b36c:	80a0b03a 	or	r16,r16,r2
   4b370:	0013883a 	mov	r9,zero
   4b374:	000b883a 	mov	r5,zero
   4b378:	3806d53a 	srli	r3,r7,20
   4b37c:	382ed7fa 	srli	r23,r7,31
   4b380:	04400434 	movhi	r17,16
   4b384:	8c7fffc4 	addi	r17,r17,-1
   4b388:	18c1ffcc 	andi	r3,r3,2047
   4b38c:	3029883a 	mov	r20,r6
   4b390:	3c62703a 	and	r17,r7,r17
   4b394:	bf003fcc 	andi	fp,r23,255
   4b398:	18006e26 	beq	r3,zero,4b554 <__divdf3+0x254>
   4b39c:	0081ffc4 	movi	r2,2047
   4b3a0:	18806626 	beq	r3,r2,4b53c <__divdf3+0x23c>
   4b3a4:	88800434 	orhi	r2,r17,16
   4b3a8:	100490fa 	slli	r2,r2,3
   4b3ac:	3022d77a 	srli	r17,r6,29
   4b3b0:	302890fa 	slli	r20,r6,3
   4b3b4:	18ff0044 	addi	r3,r3,-1023
   4b3b8:	88a2b03a 	or	r17,r17,r2
   4b3bc:	000f883a 	mov	r7,zero
   4b3c0:	b5e6f03a 	xor	r19,r22,r23
   4b3c4:	3a4cb03a 	or	r6,r7,r9
   4b3c8:	008003c4 	movi	r2,15
   4b3cc:	9809883a 	mov	r4,r19
   4b3d0:	90c7c83a 	sub	r3,r18,r3
   4b3d4:	9cc03fcc 	andi	r19,r19,255
   4b3d8:	11809636 	bltu	r2,r6,4b634 <__divdf3+0x334>
   4b3dc:	300c90ba 	slli	r6,r6,2
   4b3e0:	00800174 	movhi	r2,5
   4b3e4:	10acfd04 	addi	r2,r2,-19468
   4b3e8:	308d883a 	add	r6,r6,r2
   4b3ec:	30800017 	ldw	r2,0(r6)
   4b3f0:	1000683a 	jmp	r2
   4b3f4:	0004b634 	movhi	zero,4824
   4b3f8:	0004b46c 	andhi	zero,zero,4817
   4b3fc:	0004b624 	muli	zero,zero,4824
   4b400:	0004b460 	cmpeqi	zero,zero,4817
   4b404:	0004b624 	muli	zero,zero,4824
   4b408:	0004b5f8 	rdprs	zero,zero,4823
   4b40c:	0004b624 	muli	zero,zero,4824
   4b410:	0004b460 	cmpeqi	zero,zero,4817
   4b414:	0004b46c 	andhi	zero,zero,4817
   4b418:	0004b46c 	andhi	zero,zero,4817
   4b41c:	0004b5f8 	rdprs	zero,zero,4823
   4b420:	0004b460 	cmpeqi	zero,zero,4817
   4b424:	0004b450 	cmplti	zero,zero,4817
   4b428:	0004b450 	cmplti	zero,zero,4817
   4b42c:	0004b450 	cmplti	zero,zero,4817
   4b430:	0004b9bc 	xorhi	zero,zero,4838
   4b434:	2404b03a 	or	r2,r4,r16
   4b438:	10006c1e 	bne	r2,zero,4b5ec <__divdf3+0x2ec>
   4b43c:	02400204 	movi	r9,8
   4b440:	0021883a 	mov	r16,zero
   4b444:	002b883a 	mov	r21,zero
   4b448:	01400084 	movi	r5,2
   4b44c:	003fca06 	br	4b378 <__alt_data_end+0xfffd9378>
   4b450:	8023883a 	mov	r17,r16
   4b454:	a829883a 	mov	r20,r21
   4b458:	4039883a 	mov	fp,r8
   4b45c:	280f883a 	mov	r7,r5
   4b460:	00800084 	movi	r2,2
   4b464:	3881601e 	bne	r7,r2,4b9e8 <__divdf3+0x6e8>
   4b468:	e027883a 	mov	r19,fp
   4b46c:	9900004c 	andi	r4,r19,1
   4b470:	0081ffc4 	movi	r2,2047
   4b474:	0021883a 	mov	r16,zero
   4b478:	002b883a 	mov	r21,zero
   4b47c:	1004953a 	slli	r2,r2,20
   4b480:	20c03fcc 	andi	r3,r4,255
   4b484:	01400434 	movhi	r5,16
   4b488:	297fffc4 	addi	r5,r5,-1
   4b48c:	180697fa 	slli	r3,r3,31
   4b490:	8160703a 	and	r16,r16,r5
   4b494:	80a0b03a 	or	r16,r16,r2
   4b498:	80c6b03a 	or	r3,r16,r3
   4b49c:	a805883a 	mov	r2,r21
   4b4a0:	dfc00f17 	ldw	ra,60(sp)
   4b4a4:	df000e17 	ldw	fp,56(sp)
   4b4a8:	ddc00d17 	ldw	r23,52(sp)
   4b4ac:	dd800c17 	ldw	r22,48(sp)
   4b4b0:	dd400b17 	ldw	r21,44(sp)
   4b4b4:	dd000a17 	ldw	r20,40(sp)
   4b4b8:	dcc00917 	ldw	r19,36(sp)
   4b4bc:	dc800817 	ldw	r18,32(sp)
   4b4c0:	dc400717 	ldw	r17,28(sp)
   4b4c4:	dc000617 	ldw	r16,24(sp)
   4b4c8:	dec01004 	addi	sp,sp,64
   4b4cc:	f800283a 	ret
   4b4d0:	2404b03a 	or	r2,r4,r16
   4b4d4:	2023883a 	mov	r17,r4
   4b4d8:	10003f26 	beq	r2,zero,4b5d8 <__divdf3+0x2d8>
   4b4dc:	80015e26 	beq	r16,zero,4ba58 <__divdf3+0x758>
   4b4e0:	8009883a 	mov	r4,r16
   4b4e4:	d9800215 	stw	r6,8(sp)
   4b4e8:	d9c00515 	stw	r7,20(sp)
   4b4ec:	da000415 	stw	r8,16(sp)
   4b4f0:	004d2940 	call	4d294 <__clzsi2>
   4b4f4:	d9800217 	ldw	r6,8(sp)
   4b4f8:	d9c00517 	ldw	r7,20(sp)
   4b4fc:	da000417 	ldw	r8,16(sp)
   4b500:	113ffd44 	addi	r4,r2,-11
   4b504:	00c00704 	movi	r3,28
   4b508:	19014f16 	blt	r3,r4,4ba48 <__divdf3+0x748>
   4b50c:	00c00744 	movi	r3,29
   4b510:	157ffe04 	addi	r21,r2,-8
   4b514:	1907c83a 	sub	r3,r3,r4
   4b518:	8560983a 	sll	r16,r16,r21
   4b51c:	88c6d83a 	srl	r3,r17,r3
   4b520:	8d6a983a 	sll	r21,r17,r21
   4b524:	1c20b03a 	or	r16,r3,r16
   4b528:	1080fcc4 	addi	r2,r2,1011
   4b52c:	00a5c83a 	sub	r18,zero,r2
   4b530:	0013883a 	mov	r9,zero
   4b534:	000b883a 	mov	r5,zero
   4b538:	003f8f06 	br	4b378 <__alt_data_end+0xfffd9378>
   4b53c:	3444b03a 	or	r2,r6,r17
   4b540:	1000231e 	bne	r2,zero,4b5d0 <__divdf3+0x2d0>
   4b544:	0023883a 	mov	r17,zero
   4b548:	0029883a 	mov	r20,zero
   4b54c:	01c00084 	movi	r7,2
   4b550:	003f9b06 	br	4b3c0 <__alt_data_end+0xfffd93c0>
   4b554:	3444b03a 	or	r2,r6,r17
   4b558:	10001926 	beq	r2,zero,4b5c0 <__divdf3+0x2c0>
   4b55c:	88014b26 	beq	r17,zero,4ba8c <__divdf3+0x78c>
   4b560:	8809883a 	mov	r4,r17
   4b564:	d9400115 	stw	r5,4(sp)
   4b568:	d9800215 	stw	r6,8(sp)
   4b56c:	da000415 	stw	r8,16(sp)
   4b570:	da400315 	stw	r9,12(sp)
   4b574:	004d2940 	call	4d294 <__clzsi2>
   4b578:	d9400117 	ldw	r5,4(sp)
   4b57c:	d9800217 	ldw	r6,8(sp)
   4b580:	da000417 	ldw	r8,16(sp)
   4b584:	da400317 	ldw	r9,12(sp)
   4b588:	113ffd44 	addi	r4,r2,-11
   4b58c:	00c00704 	movi	r3,28
   4b590:	19013a16 	blt	r3,r4,4ba7c <__divdf3+0x77c>
   4b594:	00c00744 	movi	r3,29
   4b598:	153ffe04 	addi	r20,r2,-8
   4b59c:	1907c83a 	sub	r3,r3,r4
   4b5a0:	8d22983a 	sll	r17,r17,r20
   4b5a4:	30c6d83a 	srl	r3,r6,r3
   4b5a8:	3528983a 	sll	r20,r6,r20
   4b5ac:	1c62b03a 	or	r17,r3,r17
   4b5b0:	1080fcc4 	addi	r2,r2,1011
   4b5b4:	0087c83a 	sub	r3,zero,r2
   4b5b8:	000f883a 	mov	r7,zero
   4b5bc:	003f8006 	br	4b3c0 <__alt_data_end+0xfffd93c0>
   4b5c0:	0023883a 	mov	r17,zero
   4b5c4:	0029883a 	mov	r20,zero
   4b5c8:	01c00044 	movi	r7,1
   4b5cc:	003f7c06 	br	4b3c0 <__alt_data_end+0xfffd93c0>
   4b5d0:	01c000c4 	movi	r7,3
   4b5d4:	003f7a06 	br	4b3c0 <__alt_data_end+0xfffd93c0>
   4b5d8:	02400104 	movi	r9,4
   4b5dc:	0021883a 	mov	r16,zero
   4b5e0:	002b883a 	mov	r21,zero
   4b5e4:	01400044 	movi	r5,1
   4b5e8:	003f6306 	br	4b378 <__alt_data_end+0xfffd9378>
   4b5ec:	02400304 	movi	r9,12
   4b5f0:	014000c4 	movi	r5,3
   4b5f4:	003f6006 	br	4b378 <__alt_data_end+0xfffd9378>
   4b5f8:	04000434 	movhi	r16,16
   4b5fc:	0009883a 	mov	r4,zero
   4b600:	843fffc4 	addi	r16,r16,-1
   4b604:	057fffc4 	movi	r21,-1
   4b608:	0081ffc4 	movi	r2,2047
   4b60c:	003f9b06 	br	4b47c <__alt_data_end+0xfffd947c>
   4b610:	00c00044 	movi	r3,1
   4b614:	1887c83a 	sub	r3,r3,r2
   4b618:	01000e04 	movi	r4,56
   4b61c:	20c1530e 	bge	r4,r3,4bb6c <__divdf3+0x86c>
   4b620:	9900004c 	andi	r4,r19,1
   4b624:	0005883a 	mov	r2,zero
   4b628:	0021883a 	mov	r16,zero
   4b62c:	002b883a 	mov	r21,zero
   4b630:	003f9206 	br	4b47c <__alt_data_end+0xfffd947c>
   4b634:	8c012e36 	bltu	r17,r16,4baf0 <__divdf3+0x7f0>
   4b638:	84412c26 	beq	r16,r17,4baec <__divdf3+0x7ec>
   4b63c:	a82f883a 	mov	r23,r21
   4b640:	18ffffc4 	addi	r3,r3,-1
   4b644:	002b883a 	mov	r21,zero
   4b648:	a004d63a 	srli	r2,r20,24
   4b64c:	8822923a 	slli	r17,r17,8
   4b650:	a028923a 	slli	r20,r20,8
   4b654:	8009883a 	mov	r4,r16
   4b658:	88acb03a 	or	r22,r17,r2
   4b65c:	dd000015 	stw	r20,0(sp)
   4b660:	b028d43a 	srli	r20,r22,16
   4b664:	d8c00215 	stw	r3,8(sp)
   4b668:	b4bfffcc 	andi	r18,r22,65535
   4b66c:	a00b883a 	mov	r5,r20
   4b670:	004a9700 	call	4a970 <__udivsi3>
   4b674:	100b883a 	mov	r5,r2
   4b678:	9009883a 	mov	r4,r18
   4b67c:	1023883a 	mov	r17,r2
   4b680:	004aa2c0 	call	4aa2c <__mulsi3>
   4b684:	8009883a 	mov	r4,r16
   4b688:	a00b883a 	mov	r5,r20
   4b68c:	1039883a 	mov	fp,r2
   4b690:	004a9d40 	call	4a9d4 <__umodsi3>
   4b694:	1004943a 	slli	r2,r2,16
   4b698:	b808d43a 	srli	r4,r23,16
   4b69c:	d8c00217 	ldw	r3,8(sp)
   4b6a0:	2084b03a 	or	r2,r4,r2
   4b6a4:	1700062e 	bgeu	r2,fp,4b6c0 <__divdf3+0x3c0>
   4b6a8:	1585883a 	add	r2,r2,r22
   4b6ac:	893fffc4 	addi	r4,r17,-1
   4b6b0:	15811d36 	bltu	r2,r22,4bb28 <__divdf3+0x828>
   4b6b4:	17011c2e 	bgeu	r2,fp,4bb28 <__divdf3+0x828>
   4b6b8:	8c7fff84 	addi	r17,r17,-2
   4b6bc:	1585883a 	add	r2,r2,r22
   4b6c0:	1739c83a 	sub	fp,r2,fp
   4b6c4:	a00b883a 	mov	r5,r20
   4b6c8:	e009883a 	mov	r4,fp
   4b6cc:	d8c00215 	stw	r3,8(sp)
   4b6d0:	004a9700 	call	4a970 <__udivsi3>
   4b6d4:	100b883a 	mov	r5,r2
   4b6d8:	9009883a 	mov	r4,r18
   4b6dc:	1021883a 	mov	r16,r2
   4b6e0:	004aa2c0 	call	4aa2c <__mulsi3>
   4b6e4:	a00b883a 	mov	r5,r20
   4b6e8:	e009883a 	mov	r4,fp
   4b6ec:	d8800415 	stw	r2,16(sp)
   4b6f0:	004a9d40 	call	4a9d4 <__umodsi3>
   4b6f4:	1004943a 	slli	r2,r2,16
   4b6f8:	da000417 	ldw	r8,16(sp)
   4b6fc:	bdffffcc 	andi	r23,r23,65535
   4b700:	b884b03a 	or	r2,r23,r2
   4b704:	d8c00217 	ldw	r3,8(sp)
   4b708:	1200062e 	bgeu	r2,r8,4b724 <__divdf3+0x424>
   4b70c:	1585883a 	add	r2,r2,r22
   4b710:	813fffc4 	addi	r4,r16,-1
   4b714:	15810236 	bltu	r2,r22,4bb20 <__divdf3+0x820>
   4b718:	1201012e 	bgeu	r2,r8,4bb20 <__divdf3+0x820>
   4b71c:	843fff84 	addi	r16,r16,-2
   4b720:	1585883a 	add	r2,r2,r22
   4b724:	8822943a 	slli	r17,r17,16
   4b728:	d9800017 	ldw	r6,0(sp)
   4b72c:	1211c83a 	sub	r8,r2,r8
   4b730:	8c22b03a 	or	r17,r17,r16
   4b734:	373fffcc 	andi	fp,r6,65535
   4b738:	8abfffcc 	andi	r10,r17,65535
   4b73c:	8820d43a 	srli	r16,r17,16
   4b740:	5009883a 	mov	r4,r10
   4b744:	e00b883a 	mov	r5,fp
   4b748:	302ed43a 	srli	r23,r6,16
   4b74c:	d8c00215 	stw	r3,8(sp)
   4b750:	da000415 	stw	r8,16(sp)
   4b754:	da800115 	stw	r10,4(sp)
   4b758:	004aa2c0 	call	4aa2c <__mulsi3>
   4b75c:	800b883a 	mov	r5,r16
   4b760:	e009883a 	mov	r4,fp
   4b764:	d8800515 	stw	r2,20(sp)
   4b768:	004aa2c0 	call	4aa2c <__mulsi3>
   4b76c:	8009883a 	mov	r4,r16
   4b770:	b80b883a 	mov	r5,r23
   4b774:	d8800315 	stw	r2,12(sp)
   4b778:	004aa2c0 	call	4aa2c <__mulsi3>
   4b77c:	da800117 	ldw	r10,4(sp)
   4b780:	b80b883a 	mov	r5,r23
   4b784:	1021883a 	mov	r16,r2
   4b788:	5009883a 	mov	r4,r10
   4b78c:	004aa2c0 	call	4aa2c <__mulsi3>
   4b790:	d9c00517 	ldw	r7,20(sp)
   4b794:	da400317 	ldw	r9,12(sp)
   4b798:	d8c00217 	ldw	r3,8(sp)
   4b79c:	3808d43a 	srli	r4,r7,16
   4b7a0:	1245883a 	add	r2,r2,r9
   4b7a4:	da000417 	ldw	r8,16(sp)
   4b7a8:	2085883a 	add	r2,r4,r2
   4b7ac:	1240022e 	bgeu	r2,r9,4b7b8 <__divdf3+0x4b8>
   4b7b0:	01000074 	movhi	r4,1
   4b7b4:	8121883a 	add	r16,r16,r4
   4b7b8:	1008d43a 	srli	r4,r2,16
   4b7bc:	1004943a 	slli	r2,r2,16
   4b7c0:	39ffffcc 	andi	r7,r7,65535
   4b7c4:	2409883a 	add	r4,r4,r16
   4b7c8:	11c5883a 	add	r2,r2,r7
   4b7cc:	4100bb36 	bltu	r8,r4,4babc <__divdf3+0x7bc>
   4b7d0:	4100d726 	beq	r8,r4,4bb30 <__divdf3+0x830>
   4b7d4:	4109c83a 	sub	r4,r8,r4
   4b7d8:	a8a1c83a 	sub	r16,r21,r2
   4b7dc:	ac2b803a 	cmpltu	r21,r21,r16
   4b7e0:	256bc83a 	sub	r21,r4,r21
   4b7e4:	b540d926 	beq	r22,r21,4bb4c <__divdf3+0x84c>
   4b7e8:	a00b883a 	mov	r5,r20
   4b7ec:	a809883a 	mov	r4,r21
   4b7f0:	d8c00215 	stw	r3,8(sp)
   4b7f4:	004a9700 	call	4a970 <__udivsi3>
   4b7f8:	100b883a 	mov	r5,r2
   4b7fc:	9009883a 	mov	r4,r18
   4b800:	d8800515 	stw	r2,20(sp)
   4b804:	004aa2c0 	call	4aa2c <__mulsi3>
   4b808:	a809883a 	mov	r4,r21
   4b80c:	a00b883a 	mov	r5,r20
   4b810:	d8800415 	stw	r2,16(sp)
   4b814:	004a9d40 	call	4a9d4 <__umodsi3>
   4b818:	1004943a 	slli	r2,r2,16
   4b81c:	8008d43a 	srli	r4,r16,16
   4b820:	da000417 	ldw	r8,16(sp)
   4b824:	d8c00217 	ldw	r3,8(sp)
   4b828:	2084b03a 	or	r2,r4,r2
   4b82c:	d9c00517 	ldw	r7,20(sp)
   4b830:	1200062e 	bgeu	r2,r8,4b84c <__divdf3+0x54c>
   4b834:	1585883a 	add	r2,r2,r22
   4b838:	393fffc4 	addi	r4,r7,-1
   4b83c:	1580c536 	bltu	r2,r22,4bb54 <__divdf3+0x854>
   4b840:	1200c42e 	bgeu	r2,r8,4bb54 <__divdf3+0x854>
   4b844:	39ffff84 	addi	r7,r7,-2
   4b848:	1585883a 	add	r2,r2,r22
   4b84c:	122bc83a 	sub	r21,r2,r8
   4b850:	a00b883a 	mov	r5,r20
   4b854:	a809883a 	mov	r4,r21
   4b858:	d8c00215 	stw	r3,8(sp)
   4b85c:	d9c00515 	stw	r7,20(sp)
   4b860:	004a9700 	call	4a970 <__udivsi3>
   4b864:	9009883a 	mov	r4,r18
   4b868:	100b883a 	mov	r5,r2
   4b86c:	d8800415 	stw	r2,16(sp)
   4b870:	004aa2c0 	call	4aa2c <__mulsi3>
   4b874:	a809883a 	mov	r4,r21
   4b878:	a00b883a 	mov	r5,r20
   4b87c:	1025883a 	mov	r18,r2
   4b880:	004a9d40 	call	4a9d4 <__umodsi3>
   4b884:	1004943a 	slli	r2,r2,16
   4b888:	813fffcc 	andi	r4,r16,65535
   4b88c:	d8c00217 	ldw	r3,8(sp)
   4b890:	20a0b03a 	or	r16,r4,r2
   4b894:	d9c00517 	ldw	r7,20(sp)
   4b898:	da000417 	ldw	r8,16(sp)
   4b89c:	8480062e 	bgeu	r16,r18,4b8b8 <__divdf3+0x5b8>
   4b8a0:	85a1883a 	add	r16,r16,r22
   4b8a4:	40bfffc4 	addi	r2,r8,-1
   4b8a8:	8580ac36 	bltu	r16,r22,4bb5c <__divdf3+0x85c>
   4b8ac:	8480ab2e 	bgeu	r16,r18,4bb5c <__divdf3+0x85c>
   4b8b0:	423fff84 	addi	r8,r8,-2
   4b8b4:	85a1883a 	add	r16,r16,r22
   4b8b8:	3804943a 	slli	r2,r7,16
   4b8bc:	84a1c83a 	sub	r16,r16,r18
   4b8c0:	e009883a 	mov	r4,fp
   4b8c4:	1228b03a 	or	r20,r2,r8
   4b8c8:	a1ffffcc 	andi	r7,r20,65535
   4b8cc:	a024d43a 	srli	r18,r20,16
   4b8d0:	380b883a 	mov	r5,r7
   4b8d4:	d8c00215 	stw	r3,8(sp)
   4b8d8:	d9c00515 	stw	r7,20(sp)
   4b8dc:	004aa2c0 	call	4aa2c <__mulsi3>
   4b8e0:	900b883a 	mov	r5,r18
   4b8e4:	e009883a 	mov	r4,fp
   4b8e8:	102b883a 	mov	r21,r2
   4b8ec:	004aa2c0 	call	4aa2c <__mulsi3>
   4b8f0:	900b883a 	mov	r5,r18
   4b8f4:	b809883a 	mov	r4,r23
   4b8f8:	1039883a 	mov	fp,r2
   4b8fc:	004aa2c0 	call	4aa2c <__mulsi3>
   4b900:	d9c00517 	ldw	r7,20(sp)
   4b904:	b80b883a 	mov	r5,r23
   4b908:	1025883a 	mov	r18,r2
   4b90c:	3809883a 	mov	r4,r7
   4b910:	004aa2c0 	call	4aa2c <__mulsi3>
   4b914:	a808d43a 	srli	r4,r21,16
   4b918:	1705883a 	add	r2,r2,fp
   4b91c:	d8c00217 	ldw	r3,8(sp)
   4b920:	2085883a 	add	r2,r4,r2
   4b924:	1700022e 	bgeu	r2,fp,4b930 <__divdf3+0x630>
   4b928:	01000074 	movhi	r4,1
   4b92c:	9125883a 	add	r18,r18,r4
   4b930:	1008d43a 	srli	r4,r2,16
   4b934:	1004943a 	slli	r2,r2,16
   4b938:	ad7fffcc 	andi	r21,r21,65535
   4b93c:	2489883a 	add	r4,r4,r18
   4b940:	1545883a 	add	r2,r2,r21
   4b944:	81003836 	bltu	r16,r4,4ba28 <__divdf3+0x728>
   4b948:	81003626 	beq	r16,r4,4ba24 <__divdf3+0x724>
   4b94c:	a5000054 	ori	r20,r20,1
   4b950:	1880ffc4 	addi	r2,r3,1023
   4b954:	00bf2e0e 	bge	zero,r2,4b610 <__alt_data_end+0xfffd9610>
   4b958:	a10001cc 	andi	r4,r20,7
   4b95c:	20000726 	beq	r4,zero,4b97c <__divdf3+0x67c>
   4b960:	a10003cc 	andi	r4,r20,15
   4b964:	01400104 	movi	r5,4
   4b968:	21400426 	beq	r4,r5,4b97c <__divdf3+0x67c>
   4b96c:	a149883a 	add	r4,r20,r5
   4b970:	2529803a 	cmpltu	r20,r4,r20
   4b974:	8d23883a 	add	r17,r17,r20
   4b978:	2029883a 	mov	r20,r4
   4b97c:	8900402c 	andhi	r4,r17,256
   4b980:	20000426 	beq	r4,zero,4b994 <__divdf3+0x694>
   4b984:	18810004 	addi	r2,r3,1024
   4b988:	00ffc034 	movhi	r3,65280
   4b98c:	18ffffc4 	addi	r3,r3,-1
   4b990:	88e2703a 	and	r17,r17,r3
   4b994:	00c1ff84 	movi	r3,2046
   4b998:	18beb416 	blt	r3,r2,4b46c <__alt_data_end+0xfffd946c>
   4b99c:	a028d0fa 	srli	r20,r20,3
   4b9a0:	882a977a 	slli	r21,r17,29
   4b9a4:	8820927a 	slli	r16,r17,9
   4b9a8:	1081ffcc 	andi	r2,r2,2047
   4b9ac:	ad2ab03a 	or	r21,r21,r20
   4b9b0:	8020d33a 	srli	r16,r16,12
   4b9b4:	9900004c 	andi	r4,r19,1
   4b9b8:	003eb006 	br	4b47c <__alt_data_end+0xfffd947c>
   4b9bc:	8080022c 	andhi	r2,r16,8
   4b9c0:	10001226 	beq	r2,zero,4ba0c <__divdf3+0x70c>
   4b9c4:	8880022c 	andhi	r2,r17,8
   4b9c8:	1000101e 	bne	r2,zero,4ba0c <__divdf3+0x70c>
   4b9cc:	00800434 	movhi	r2,16
   4b9d0:	8c000234 	orhi	r16,r17,8
   4b9d4:	10bfffc4 	addi	r2,r2,-1
   4b9d8:	b809883a 	mov	r4,r23
   4b9dc:	80a0703a 	and	r16,r16,r2
   4b9e0:	a02b883a 	mov	r21,r20
   4b9e4:	003f0806 	br	4b608 <__alt_data_end+0xfffd9608>
   4b9e8:	008000c4 	movi	r2,3
   4b9ec:	3880b126 	beq	r7,r2,4bcb4 <__divdf3+0x9b4>
   4b9f0:	00800044 	movi	r2,1
   4b9f4:	38805b1e 	bne	r7,r2,4bb64 <__divdf3+0x864>
   4b9f8:	e009883a 	mov	r4,fp
   4b9fc:	0005883a 	mov	r2,zero
   4ba00:	0021883a 	mov	r16,zero
   4ba04:	002b883a 	mov	r21,zero
   4ba08:	003e9c06 	br	4b47c <__alt_data_end+0xfffd947c>
   4ba0c:	00800434 	movhi	r2,16
   4ba10:	84000234 	orhi	r16,r16,8
   4ba14:	10bfffc4 	addi	r2,r2,-1
   4ba18:	b009883a 	mov	r4,r22
   4ba1c:	80a0703a 	and	r16,r16,r2
   4ba20:	003ef906 	br	4b608 <__alt_data_end+0xfffd9608>
   4ba24:	103fca26 	beq	r2,zero,4b950 <__alt_data_end+0xfffd9950>
   4ba28:	b421883a 	add	r16,r22,r16
   4ba2c:	a17fffc4 	addi	r5,r20,-1
   4ba30:	8580422e 	bgeu	r16,r22,4bb3c <__divdf3+0x83c>
   4ba34:	2829883a 	mov	r20,r5
   4ba38:	813fc41e 	bne	r16,r4,4b94c <__alt_data_end+0xfffd994c>
   4ba3c:	d9800017 	ldw	r6,0(sp)
   4ba40:	30bfc21e 	bne	r6,r2,4b94c <__alt_data_end+0xfffd994c>
   4ba44:	003fc206 	br	4b950 <__alt_data_end+0xfffd9950>
   4ba48:	143ff604 	addi	r16,r2,-40
   4ba4c:	8c20983a 	sll	r16,r17,r16
   4ba50:	002b883a 	mov	r21,zero
   4ba54:	003eb406 	br	4b528 <__alt_data_end+0xfffd9528>
   4ba58:	d9800215 	stw	r6,8(sp)
   4ba5c:	d9c00515 	stw	r7,20(sp)
   4ba60:	da000415 	stw	r8,16(sp)
   4ba64:	004d2940 	call	4d294 <__clzsi2>
   4ba68:	10800804 	addi	r2,r2,32
   4ba6c:	da000417 	ldw	r8,16(sp)
   4ba70:	d9c00517 	ldw	r7,20(sp)
   4ba74:	d9800217 	ldw	r6,8(sp)
   4ba78:	003ea106 	br	4b500 <__alt_data_end+0xfffd9500>
   4ba7c:	147ff604 	addi	r17,r2,-40
   4ba80:	3462983a 	sll	r17,r6,r17
   4ba84:	0029883a 	mov	r20,zero
   4ba88:	003ec906 	br	4b5b0 <__alt_data_end+0xfffd95b0>
   4ba8c:	3009883a 	mov	r4,r6
   4ba90:	d9400115 	stw	r5,4(sp)
   4ba94:	d9800215 	stw	r6,8(sp)
   4ba98:	da000415 	stw	r8,16(sp)
   4ba9c:	da400315 	stw	r9,12(sp)
   4baa0:	004d2940 	call	4d294 <__clzsi2>
   4baa4:	10800804 	addi	r2,r2,32
   4baa8:	da400317 	ldw	r9,12(sp)
   4baac:	da000417 	ldw	r8,16(sp)
   4bab0:	d9800217 	ldw	r6,8(sp)
   4bab4:	d9400117 	ldw	r5,4(sp)
   4bab8:	003eb306 	br	4b588 <__alt_data_end+0xfffd9588>
   4babc:	d9800017 	ldw	r6,0(sp)
   4bac0:	a9ab883a 	add	r21,r21,r6
   4bac4:	a98b803a 	cmpltu	r5,r21,r6
   4bac8:	2d8b883a 	add	r5,r5,r22
   4bacc:	2a11883a 	add	r8,r5,r8
   4bad0:	897fffc4 	addi	r5,r17,-1
   4bad4:	b2000c2e 	bgeu	r22,r8,4bb08 <__divdf3+0x808>
   4bad8:	41003f36 	bltu	r8,r4,4bbd8 <__divdf3+0x8d8>
   4badc:	22006c26 	beq	r4,r8,4bc90 <__divdf3+0x990>
   4bae0:	4109c83a 	sub	r4,r8,r4
   4bae4:	2823883a 	mov	r17,r5
   4bae8:	003f3b06 	br	4b7d8 <__alt_data_end+0xfffd97d8>
   4baec:	ad3ed336 	bltu	r21,r20,4b63c <__alt_data_end+0xfffd963c>
   4baf0:	a804d07a 	srli	r2,r21,1
   4baf4:	802e97fa 	slli	r23,r16,31
   4baf8:	a82a97fa 	slli	r21,r21,31
   4bafc:	8020d07a 	srli	r16,r16,1
   4bb00:	b8aeb03a 	or	r23,r23,r2
   4bb04:	003ed006 	br	4b648 <__alt_data_end+0xfffd9648>
   4bb08:	b23ff51e 	bne	r22,r8,4bae0 <__alt_data_end+0xfffd9ae0>
   4bb0c:	d9800017 	ldw	r6,0(sp)
   4bb10:	a9bff12e 	bgeu	r21,r6,4bad8 <__alt_data_end+0xfffd9ad8>
   4bb14:	b109c83a 	sub	r4,r22,r4
   4bb18:	2823883a 	mov	r17,r5
   4bb1c:	003f2e06 	br	4b7d8 <__alt_data_end+0xfffd97d8>
   4bb20:	2021883a 	mov	r16,r4
   4bb24:	003eff06 	br	4b724 <__alt_data_end+0xfffd9724>
   4bb28:	2023883a 	mov	r17,r4
   4bb2c:	003ee406 	br	4b6c0 <__alt_data_end+0xfffd96c0>
   4bb30:	a8bfe236 	bltu	r21,r2,4babc <__alt_data_end+0xfffd9abc>
   4bb34:	0009883a 	mov	r4,zero
   4bb38:	003f2706 	br	4b7d8 <__alt_data_end+0xfffd97d8>
   4bb3c:	81002d36 	bltu	r16,r4,4bbf4 <__divdf3+0x8f4>
   4bb40:	24005626 	beq	r4,r16,4bc9c <__divdf3+0x99c>
   4bb44:	2829883a 	mov	r20,r5
   4bb48:	003f8006 	br	4b94c <__alt_data_end+0xfffd994c>
   4bb4c:	053fffc4 	movi	r20,-1
   4bb50:	003f7f06 	br	4b950 <__alt_data_end+0xfffd9950>
   4bb54:	200f883a 	mov	r7,r4
   4bb58:	003f3c06 	br	4b84c <__alt_data_end+0xfffd984c>
   4bb5c:	1011883a 	mov	r8,r2
   4bb60:	003f5506 	br	4b8b8 <__alt_data_end+0xfffd98b8>
   4bb64:	e027883a 	mov	r19,fp
   4bb68:	003f7906 	br	4b950 <__alt_data_end+0xfffd9950>
   4bb6c:	010007c4 	movi	r4,31
   4bb70:	20c02816 	blt	r4,r3,4bc14 <__divdf3+0x914>
   4bb74:	00800804 	movi	r2,32
   4bb78:	10c5c83a 	sub	r2,r2,r3
   4bb7c:	888a983a 	sll	r5,r17,r2
   4bb80:	a0c8d83a 	srl	r4,r20,r3
   4bb84:	a084983a 	sll	r2,r20,r2
   4bb88:	88e2d83a 	srl	r17,r17,r3
   4bb8c:	2906b03a 	or	r3,r5,r4
   4bb90:	1004c03a 	cmpne	r2,r2,zero
   4bb94:	1886b03a 	or	r3,r3,r2
   4bb98:	188001cc 	andi	r2,r3,7
   4bb9c:	10000726 	beq	r2,zero,4bbbc <__divdf3+0x8bc>
   4bba0:	188003cc 	andi	r2,r3,15
   4bba4:	01000104 	movi	r4,4
   4bba8:	11000426 	beq	r2,r4,4bbbc <__divdf3+0x8bc>
   4bbac:	1805883a 	mov	r2,r3
   4bbb0:	10c00104 	addi	r3,r2,4
   4bbb4:	1885803a 	cmpltu	r2,r3,r2
   4bbb8:	88a3883a 	add	r17,r17,r2
   4bbbc:	8880202c 	andhi	r2,r17,128
   4bbc0:	10002926 	beq	r2,zero,4bc68 <__divdf3+0x968>
   4bbc4:	9900004c 	andi	r4,r19,1
   4bbc8:	00800044 	movi	r2,1
   4bbcc:	0021883a 	mov	r16,zero
   4bbd0:	002b883a 	mov	r21,zero
   4bbd4:	003e2906 	br	4b47c <__alt_data_end+0xfffd947c>
   4bbd8:	d9800017 	ldw	r6,0(sp)
   4bbdc:	8c7fff84 	addi	r17,r17,-2
   4bbe0:	a9ab883a 	add	r21,r21,r6
   4bbe4:	a98b803a 	cmpltu	r5,r21,r6
   4bbe8:	2d8b883a 	add	r5,r5,r22
   4bbec:	2a11883a 	add	r8,r5,r8
   4bbf0:	003ef806 	br	4b7d4 <__alt_data_end+0xfffd97d4>
   4bbf4:	d9800017 	ldw	r6,0(sp)
   4bbf8:	318f883a 	add	r7,r6,r6
   4bbfc:	398b803a 	cmpltu	r5,r7,r6
   4bc00:	2d8d883a 	add	r6,r5,r22
   4bc04:	81a1883a 	add	r16,r16,r6
   4bc08:	a17fff84 	addi	r5,r20,-2
   4bc0c:	d9c00015 	stw	r7,0(sp)
   4bc10:	003f8806 	br	4ba34 <__alt_data_end+0xfffd9a34>
   4bc14:	013ff844 	movi	r4,-31
   4bc18:	2085c83a 	sub	r2,r4,r2
   4bc1c:	8888d83a 	srl	r4,r17,r2
   4bc20:	00800804 	movi	r2,32
   4bc24:	18802126 	beq	r3,r2,4bcac <__divdf3+0x9ac>
   4bc28:	04001004 	movi	r16,64
   4bc2c:	80c7c83a 	sub	r3,r16,r3
   4bc30:	88e0983a 	sll	r16,r17,r3
   4bc34:	8504b03a 	or	r2,r16,r20
   4bc38:	1004c03a 	cmpne	r2,r2,zero
   4bc3c:	2084b03a 	or	r2,r4,r2
   4bc40:	144001cc 	andi	r17,r2,7
   4bc44:	88000d1e 	bne	r17,zero,4bc7c <__divdf3+0x97c>
   4bc48:	0021883a 	mov	r16,zero
   4bc4c:	102ad0fa 	srli	r21,r2,3
   4bc50:	9900004c 	andi	r4,r19,1
   4bc54:	0005883a 	mov	r2,zero
   4bc58:	ac6ab03a 	or	r21,r21,r17
   4bc5c:	003e0706 	br	4b47c <__alt_data_end+0xfffd947c>
   4bc60:	1007883a 	mov	r3,r2
   4bc64:	0023883a 	mov	r17,zero
   4bc68:	8820927a 	slli	r16,r17,9
   4bc6c:	1805883a 	mov	r2,r3
   4bc70:	8822977a 	slli	r17,r17,29
   4bc74:	8020d33a 	srli	r16,r16,12
   4bc78:	003ff406 	br	4bc4c <__alt_data_end+0xfffd9c4c>
   4bc7c:	10c003cc 	andi	r3,r2,15
   4bc80:	01000104 	movi	r4,4
   4bc84:	193ff626 	beq	r3,r4,4bc60 <__alt_data_end+0xfffd9c60>
   4bc88:	0023883a 	mov	r17,zero
   4bc8c:	003fc806 	br	4bbb0 <__alt_data_end+0xfffd9bb0>
   4bc90:	a8bfd136 	bltu	r21,r2,4bbd8 <__alt_data_end+0xfffd9bd8>
   4bc94:	2823883a 	mov	r17,r5
   4bc98:	003fa606 	br	4bb34 <__alt_data_end+0xfffd9b34>
   4bc9c:	d9800017 	ldw	r6,0(sp)
   4bca0:	30bfd436 	bltu	r6,r2,4bbf4 <__alt_data_end+0xfffd9bf4>
   4bca4:	2829883a 	mov	r20,r5
   4bca8:	003f6406 	br	4ba3c <__alt_data_end+0xfffd9a3c>
   4bcac:	0021883a 	mov	r16,zero
   4bcb0:	003fe006 	br	4bc34 <__alt_data_end+0xfffd9c34>
   4bcb4:	00800434 	movhi	r2,16
   4bcb8:	8c000234 	orhi	r16,r17,8
   4bcbc:	10bfffc4 	addi	r2,r2,-1
   4bcc0:	e009883a 	mov	r4,fp
   4bcc4:	80a0703a 	and	r16,r16,r2
   4bcc8:	a02b883a 	mov	r21,r20
   4bccc:	003e4e06 	br	4b608 <__alt_data_end+0xfffd9608>

0004bcd0 <__eqdf2>:
   4bcd0:	2804d53a 	srli	r2,r5,20
   4bcd4:	3806d53a 	srli	r3,r7,20
   4bcd8:	02000434 	movhi	r8,16
   4bcdc:	423fffc4 	addi	r8,r8,-1
   4bce0:	1081ffcc 	andi	r2,r2,2047
   4bce4:	0281ffc4 	movi	r10,2047
   4bce8:	2a12703a 	and	r9,r5,r8
   4bcec:	18c1ffcc 	andi	r3,r3,2047
   4bcf0:	3a10703a 	and	r8,r7,r8
   4bcf4:	280ad7fa 	srli	r5,r5,31
   4bcf8:	380ed7fa 	srli	r7,r7,31
   4bcfc:	12801026 	beq	r2,r10,4bd40 <__eqdf2+0x70>
   4bd00:	0281ffc4 	movi	r10,2047
   4bd04:	1a800a26 	beq	r3,r10,4bd30 <__eqdf2+0x60>
   4bd08:	10c00226 	beq	r2,r3,4bd14 <__eqdf2+0x44>
   4bd0c:	00800044 	movi	r2,1
   4bd10:	f800283a 	ret
   4bd14:	4a3ffd1e 	bne	r9,r8,4bd0c <__alt_data_end+0xfffd9d0c>
   4bd18:	21bffc1e 	bne	r4,r6,4bd0c <__alt_data_end+0xfffd9d0c>
   4bd1c:	29c00c26 	beq	r5,r7,4bd50 <__eqdf2+0x80>
   4bd20:	103ffa1e 	bne	r2,zero,4bd0c <__alt_data_end+0xfffd9d0c>
   4bd24:	2244b03a 	or	r2,r4,r9
   4bd28:	1004c03a 	cmpne	r2,r2,zero
   4bd2c:	f800283a 	ret
   4bd30:	3214b03a 	or	r10,r6,r8
   4bd34:	503ff426 	beq	r10,zero,4bd08 <__alt_data_end+0xfffd9d08>
   4bd38:	00800044 	movi	r2,1
   4bd3c:	f800283a 	ret
   4bd40:	2254b03a 	or	r10,r4,r9
   4bd44:	503fee26 	beq	r10,zero,4bd00 <__alt_data_end+0xfffd9d00>
   4bd48:	00800044 	movi	r2,1
   4bd4c:	f800283a 	ret
   4bd50:	0005883a 	mov	r2,zero
   4bd54:	f800283a 	ret

0004bd58 <__gedf2>:
   4bd58:	2804d53a 	srli	r2,r5,20
   4bd5c:	3806d53a 	srli	r3,r7,20
   4bd60:	02000434 	movhi	r8,16
   4bd64:	423fffc4 	addi	r8,r8,-1
   4bd68:	1081ffcc 	andi	r2,r2,2047
   4bd6c:	0241ffc4 	movi	r9,2047
   4bd70:	2a14703a 	and	r10,r5,r8
   4bd74:	18c1ffcc 	andi	r3,r3,2047
   4bd78:	3a10703a 	and	r8,r7,r8
   4bd7c:	280ad7fa 	srli	r5,r5,31
   4bd80:	380ed7fa 	srli	r7,r7,31
   4bd84:	12401d26 	beq	r2,r9,4bdfc <__gedf2+0xa4>
   4bd88:	0241ffc4 	movi	r9,2047
   4bd8c:	1a401226 	beq	r3,r9,4bdd8 <__gedf2+0x80>
   4bd90:	1000081e 	bne	r2,zero,4bdb4 <__gedf2+0x5c>
   4bd94:	2296b03a 	or	r11,r4,r10
   4bd98:	5813003a 	cmpeq	r9,r11,zero
   4bd9c:	1800091e 	bne	r3,zero,4bdc4 <__gedf2+0x6c>
   4bda0:	3218b03a 	or	r12,r6,r8
   4bda4:	6000071e 	bne	r12,zero,4bdc4 <__gedf2+0x6c>
   4bda8:	0005883a 	mov	r2,zero
   4bdac:	5800101e 	bne	r11,zero,4bdf0 <__gedf2+0x98>
   4bdb0:	f800283a 	ret
   4bdb4:	18000c1e 	bne	r3,zero,4bde8 <__gedf2+0x90>
   4bdb8:	3212b03a 	or	r9,r6,r8
   4bdbc:	48000c26 	beq	r9,zero,4bdf0 <__gedf2+0x98>
   4bdc0:	0013883a 	mov	r9,zero
   4bdc4:	39c03fcc 	andi	r7,r7,255
   4bdc8:	48000826 	beq	r9,zero,4bdec <__gedf2+0x94>
   4bdcc:	38000926 	beq	r7,zero,4bdf4 <__gedf2+0x9c>
   4bdd0:	00800044 	movi	r2,1
   4bdd4:	f800283a 	ret
   4bdd8:	3212b03a 	or	r9,r6,r8
   4bddc:	483fec26 	beq	r9,zero,4bd90 <__alt_data_end+0xfffd9d90>
   4bde0:	00bfff84 	movi	r2,-2
   4bde4:	f800283a 	ret
   4bde8:	39c03fcc 	andi	r7,r7,255
   4bdec:	29c00626 	beq	r5,r7,4be08 <__gedf2+0xb0>
   4bdf0:	283ff726 	beq	r5,zero,4bdd0 <__alt_data_end+0xfffd9dd0>
   4bdf4:	00bfffc4 	movi	r2,-1
   4bdf8:	f800283a 	ret
   4bdfc:	2292b03a 	or	r9,r4,r10
   4be00:	483fe126 	beq	r9,zero,4bd88 <__alt_data_end+0xfffd9d88>
   4be04:	003ff606 	br	4bde0 <__alt_data_end+0xfffd9de0>
   4be08:	18bff916 	blt	r3,r2,4bdf0 <__alt_data_end+0xfffd9df0>
   4be0c:	10c00316 	blt	r2,r3,4be1c <__gedf2+0xc4>
   4be10:	42bff736 	bltu	r8,r10,4bdf0 <__alt_data_end+0xfffd9df0>
   4be14:	52000326 	beq	r10,r8,4be24 <__gedf2+0xcc>
   4be18:	5200042e 	bgeu	r10,r8,4be2c <__gedf2+0xd4>
   4be1c:	283fec1e 	bne	r5,zero,4bdd0 <__alt_data_end+0xfffd9dd0>
   4be20:	003ff406 	br	4bdf4 <__alt_data_end+0xfffd9df4>
   4be24:	313ff236 	bltu	r6,r4,4bdf0 <__alt_data_end+0xfffd9df0>
   4be28:	21bffc36 	bltu	r4,r6,4be1c <__alt_data_end+0xfffd9e1c>
   4be2c:	0005883a 	mov	r2,zero
   4be30:	f800283a 	ret

0004be34 <__ledf2>:
   4be34:	2804d53a 	srli	r2,r5,20
   4be38:	3810d53a 	srli	r8,r7,20
   4be3c:	00c00434 	movhi	r3,16
   4be40:	18ffffc4 	addi	r3,r3,-1
   4be44:	1081ffcc 	andi	r2,r2,2047
   4be48:	0241ffc4 	movi	r9,2047
   4be4c:	28d4703a 	and	r10,r5,r3
   4be50:	4201ffcc 	andi	r8,r8,2047
   4be54:	38c6703a 	and	r3,r7,r3
   4be58:	280ad7fa 	srli	r5,r5,31
   4be5c:	380ed7fa 	srli	r7,r7,31
   4be60:	12401f26 	beq	r2,r9,4bee0 <__ledf2+0xac>
   4be64:	0241ffc4 	movi	r9,2047
   4be68:	42401426 	beq	r8,r9,4bebc <__ledf2+0x88>
   4be6c:	1000091e 	bne	r2,zero,4be94 <__ledf2+0x60>
   4be70:	2296b03a 	or	r11,r4,r10
   4be74:	5813003a 	cmpeq	r9,r11,zero
   4be78:	29403fcc 	andi	r5,r5,255
   4be7c:	40000a1e 	bne	r8,zero,4bea8 <__ledf2+0x74>
   4be80:	30d8b03a 	or	r12,r6,r3
   4be84:	6000081e 	bne	r12,zero,4bea8 <__ledf2+0x74>
   4be88:	0005883a 	mov	r2,zero
   4be8c:	5800111e 	bne	r11,zero,4bed4 <__ledf2+0xa0>
   4be90:	f800283a 	ret
   4be94:	29403fcc 	andi	r5,r5,255
   4be98:	40000c1e 	bne	r8,zero,4becc <__ledf2+0x98>
   4be9c:	30d2b03a 	or	r9,r6,r3
   4bea0:	48000c26 	beq	r9,zero,4bed4 <__ledf2+0xa0>
   4bea4:	0013883a 	mov	r9,zero
   4bea8:	39c03fcc 	andi	r7,r7,255
   4beac:	48000826 	beq	r9,zero,4bed0 <__ledf2+0x9c>
   4beb0:	38001126 	beq	r7,zero,4bef8 <__ledf2+0xc4>
   4beb4:	00800044 	movi	r2,1
   4beb8:	f800283a 	ret
   4bebc:	30d2b03a 	or	r9,r6,r3
   4bec0:	483fea26 	beq	r9,zero,4be6c <__alt_data_end+0xfffd9e6c>
   4bec4:	00800084 	movi	r2,2
   4bec8:	f800283a 	ret
   4becc:	39c03fcc 	andi	r7,r7,255
   4bed0:	39400726 	beq	r7,r5,4bef0 <__ledf2+0xbc>
   4bed4:	2800081e 	bne	r5,zero,4bef8 <__ledf2+0xc4>
   4bed8:	00800044 	movi	r2,1
   4bedc:	f800283a 	ret
   4bee0:	2292b03a 	or	r9,r4,r10
   4bee4:	483fdf26 	beq	r9,zero,4be64 <__alt_data_end+0xfffd9e64>
   4bee8:	00800084 	movi	r2,2
   4beec:	f800283a 	ret
   4bef0:	4080030e 	bge	r8,r2,4bf00 <__ledf2+0xcc>
   4bef4:	383fef26 	beq	r7,zero,4beb4 <__alt_data_end+0xfffd9eb4>
   4bef8:	00bfffc4 	movi	r2,-1
   4befc:	f800283a 	ret
   4bf00:	123feb16 	blt	r2,r8,4beb0 <__alt_data_end+0xfffd9eb0>
   4bf04:	1abff336 	bltu	r3,r10,4bed4 <__alt_data_end+0xfffd9ed4>
   4bf08:	50c00326 	beq	r10,r3,4bf18 <__ledf2+0xe4>
   4bf0c:	50c0042e 	bgeu	r10,r3,4bf20 <__ledf2+0xec>
   4bf10:	283fe81e 	bne	r5,zero,4beb4 <__alt_data_end+0xfffd9eb4>
   4bf14:	003ff806 	br	4bef8 <__alt_data_end+0xfffd9ef8>
   4bf18:	313fee36 	bltu	r6,r4,4bed4 <__alt_data_end+0xfffd9ed4>
   4bf1c:	21bffc36 	bltu	r4,r6,4bf10 <__alt_data_end+0xfffd9f10>
   4bf20:	0005883a 	mov	r2,zero
   4bf24:	f800283a 	ret

0004bf28 <__muldf3>:
   4bf28:	deffee04 	addi	sp,sp,-72
   4bf2c:	dd000c15 	stw	r20,48(sp)
   4bf30:	2828d53a 	srli	r20,r5,20
   4bf34:	ddc00f15 	stw	r23,60(sp)
   4bf38:	282ed7fa 	srli	r23,r5,31
   4bf3c:	dc000815 	stw	r16,32(sp)
   4bf40:	04000434 	movhi	r16,16
   4bf44:	dcc00b15 	stw	r19,44(sp)
   4bf48:	843fffc4 	addi	r16,r16,-1
   4bf4c:	dfc01115 	stw	ra,68(sp)
   4bf50:	df001015 	stw	fp,64(sp)
   4bf54:	dd800e15 	stw	r22,56(sp)
   4bf58:	dd400d15 	stw	r21,52(sp)
   4bf5c:	dc800a15 	stw	r18,40(sp)
   4bf60:	dc400915 	stw	r17,36(sp)
   4bf64:	a501ffcc 	andi	r20,r20,2047
   4bf68:	2c20703a 	and	r16,r5,r16
   4bf6c:	b827883a 	mov	r19,r23
   4bf70:	ba403fcc 	andi	r9,r23,255
   4bf74:	a0006026 	beq	r20,zero,4c0f8 <__muldf3+0x1d0>
   4bf78:	0081ffc4 	movi	r2,2047
   4bf7c:	202d883a 	mov	r22,r4
   4bf80:	a0803626 	beq	r20,r2,4c05c <__muldf3+0x134>
   4bf84:	84000434 	orhi	r16,r16,16
   4bf88:	200ad77a 	srli	r5,r4,29
   4bf8c:	800490fa 	slli	r2,r16,3
   4bf90:	202c90fa 	slli	r22,r4,3
   4bf94:	a53f0044 	addi	r20,r20,-1023
   4bf98:	28a0b03a 	or	r16,r5,r2
   4bf9c:	002b883a 	mov	r21,zero
   4bfa0:	000b883a 	mov	r5,zero
   4bfa4:	3804d53a 	srli	r2,r7,20
   4bfa8:	3838d7fa 	srli	fp,r7,31
   4bfac:	04400434 	movhi	r17,16
   4bfb0:	8c7fffc4 	addi	r17,r17,-1
   4bfb4:	1081ffcc 	andi	r2,r2,2047
   4bfb8:	3025883a 	mov	r18,r6
   4bfbc:	3c62703a 	and	r17,r7,r17
   4bfc0:	e2803fcc 	andi	r10,fp,255
   4bfc4:	10006d26 	beq	r2,zero,4c17c <__muldf3+0x254>
   4bfc8:	00c1ffc4 	movi	r3,2047
   4bfcc:	10c06526 	beq	r2,r3,4c164 <__muldf3+0x23c>
   4bfd0:	8c400434 	orhi	r17,r17,16
   4bfd4:	300ed77a 	srli	r7,r6,29
   4bfd8:	880690fa 	slli	r3,r17,3
   4bfdc:	302490fa 	slli	r18,r6,3
   4bfe0:	10bf0044 	addi	r2,r2,-1023
   4bfe4:	38e2b03a 	or	r17,r7,r3
   4bfe8:	000f883a 	mov	r7,zero
   4bfec:	a087883a 	add	r3,r20,r2
   4bff0:	010003c4 	movi	r4,15
   4bff4:	3d44b03a 	or	r2,r7,r21
   4bff8:	e5ccf03a 	xor	r6,fp,r23
   4bffc:	1a000044 	addi	r8,r3,1
   4c000:	20809b36 	bltu	r4,r2,4c270 <__muldf3+0x348>
   4c004:	100490ba 	slli	r2,r2,2
   4c008:	01000174 	movhi	r4,5
   4c00c:	21300704 	addi	r4,r4,-16356
   4c010:	1105883a 	add	r2,r2,r4
   4c014:	10800017 	ldw	r2,0(r2)
   4c018:	1000683a 	jmp	r2
   4c01c:	0004c270 	cmpltui	zero,zero,4873
   4c020:	0004c07c 	xorhi	zero,zero,4865
   4c024:	0004c07c 	xorhi	zero,zero,4865
   4c028:	0004c078 	rdprs	zero,zero,4865
   4c02c:	0004c24c 	andi	zero,zero,4873
   4c030:	0004c24c 	andi	zero,zero,4873
   4c034:	0004c234 	movhi	zero,4872
   4c038:	0004c078 	rdprs	zero,zero,4865
   4c03c:	0004c24c 	andi	zero,zero,4873
   4c040:	0004c234 	movhi	zero,4872
   4c044:	0004c24c 	andi	zero,zero,4873
   4c048:	0004c078 	rdprs	zero,zero,4865
   4c04c:	0004c25c 	xori	zero,zero,4873
   4c050:	0004c25c 	xori	zero,zero,4873
   4c054:	0004c25c 	xori	zero,zero,4873
   4c058:	0004c5bc 	xorhi	zero,zero,4886
   4c05c:	2404b03a 	or	r2,r4,r16
   4c060:	1000711e 	bne	r2,zero,4c228 <__muldf3+0x300>
   4c064:	05400204 	movi	r21,8
   4c068:	0021883a 	mov	r16,zero
   4c06c:	002d883a 	mov	r22,zero
   4c070:	01400084 	movi	r5,2
   4c074:	003fcb06 	br	4bfa4 <__alt_data_end+0xfffd9fa4>
   4c078:	500d883a 	mov	r6,r10
   4c07c:	00800084 	movi	r2,2
   4c080:	38805926 	beq	r7,r2,4c1e8 <__muldf3+0x2c0>
   4c084:	008000c4 	movi	r2,3
   4c088:	3881bb26 	beq	r7,r2,4c778 <__muldf3+0x850>
   4c08c:	00800044 	movi	r2,1
   4c090:	3881961e 	bne	r7,r2,4c6ec <__muldf3+0x7c4>
   4c094:	3027883a 	mov	r19,r6
   4c098:	0005883a 	mov	r2,zero
   4c09c:	0021883a 	mov	r16,zero
   4c0a0:	002d883a 	mov	r22,zero
   4c0a4:	1004953a 	slli	r2,r2,20
   4c0a8:	98c03fcc 	andi	r3,r19,255
   4c0ac:	04400434 	movhi	r17,16
   4c0b0:	8c7fffc4 	addi	r17,r17,-1
   4c0b4:	180697fa 	slli	r3,r3,31
   4c0b8:	8460703a 	and	r16,r16,r17
   4c0bc:	80a0b03a 	or	r16,r16,r2
   4c0c0:	80c6b03a 	or	r3,r16,r3
   4c0c4:	b005883a 	mov	r2,r22
   4c0c8:	dfc01117 	ldw	ra,68(sp)
   4c0cc:	df001017 	ldw	fp,64(sp)
   4c0d0:	ddc00f17 	ldw	r23,60(sp)
   4c0d4:	dd800e17 	ldw	r22,56(sp)
   4c0d8:	dd400d17 	ldw	r21,52(sp)
   4c0dc:	dd000c17 	ldw	r20,48(sp)
   4c0e0:	dcc00b17 	ldw	r19,44(sp)
   4c0e4:	dc800a17 	ldw	r18,40(sp)
   4c0e8:	dc400917 	ldw	r17,36(sp)
   4c0ec:	dc000817 	ldw	r16,32(sp)
   4c0f0:	dec01204 	addi	sp,sp,72
   4c0f4:	f800283a 	ret
   4c0f8:	2404b03a 	or	r2,r4,r16
   4c0fc:	202b883a 	mov	r21,r4
   4c100:	10004426 	beq	r2,zero,4c214 <__muldf3+0x2ec>
   4c104:	80015126 	beq	r16,zero,4c64c <__muldf3+0x724>
   4c108:	8009883a 	mov	r4,r16
   4c10c:	d9800715 	stw	r6,28(sp)
   4c110:	d9c00215 	stw	r7,8(sp)
   4c114:	da400415 	stw	r9,16(sp)
   4c118:	004d2940 	call	4d294 <__clzsi2>
   4c11c:	d9800717 	ldw	r6,28(sp)
   4c120:	d9c00217 	ldw	r7,8(sp)
   4c124:	da400417 	ldw	r9,16(sp)
   4c128:	113ffd44 	addi	r4,r2,-11
   4c12c:	00c00704 	movi	r3,28
   4c130:	19014216 	blt	r3,r4,4c63c <__muldf3+0x714>
   4c134:	00c00744 	movi	r3,29
   4c138:	15bffe04 	addi	r22,r2,-8
   4c13c:	1907c83a 	sub	r3,r3,r4
   4c140:	85a0983a 	sll	r16,r16,r22
   4c144:	a8c6d83a 	srl	r3,r21,r3
   4c148:	adac983a 	sll	r22,r21,r22
   4c14c:	1c20b03a 	or	r16,r3,r16
   4c150:	1080fcc4 	addi	r2,r2,1011
   4c154:	00a9c83a 	sub	r20,zero,r2
   4c158:	002b883a 	mov	r21,zero
   4c15c:	000b883a 	mov	r5,zero
   4c160:	003f9006 	br	4bfa4 <__alt_data_end+0xfffd9fa4>
   4c164:	3446b03a 	or	r3,r6,r17
   4c168:	1800281e 	bne	r3,zero,4c20c <__muldf3+0x2e4>
   4c16c:	0023883a 	mov	r17,zero
   4c170:	0025883a 	mov	r18,zero
   4c174:	01c00084 	movi	r7,2
   4c178:	003f9c06 	br	4bfec <__alt_data_end+0xfffd9fec>
   4c17c:	3446b03a 	or	r3,r6,r17
   4c180:	18001e26 	beq	r3,zero,4c1fc <__muldf3+0x2d4>
   4c184:	88012126 	beq	r17,zero,4c60c <__muldf3+0x6e4>
   4c188:	8809883a 	mov	r4,r17
   4c18c:	d9400215 	stw	r5,8(sp)
   4c190:	d9800715 	stw	r6,28(sp)
   4c194:	da400415 	stw	r9,16(sp)
   4c198:	da800315 	stw	r10,12(sp)
   4c19c:	004d2940 	call	4d294 <__clzsi2>
   4c1a0:	d9400217 	ldw	r5,8(sp)
   4c1a4:	d9800717 	ldw	r6,28(sp)
   4c1a8:	da400417 	ldw	r9,16(sp)
   4c1ac:	da800317 	ldw	r10,12(sp)
   4c1b0:	113ffd44 	addi	r4,r2,-11
   4c1b4:	00c00704 	movi	r3,28
   4c1b8:	19011016 	blt	r3,r4,4c5fc <__muldf3+0x6d4>
   4c1bc:	00c00744 	movi	r3,29
   4c1c0:	14bffe04 	addi	r18,r2,-8
   4c1c4:	1907c83a 	sub	r3,r3,r4
   4c1c8:	8ca2983a 	sll	r17,r17,r18
   4c1cc:	30c6d83a 	srl	r3,r6,r3
   4c1d0:	34a4983a 	sll	r18,r6,r18
   4c1d4:	1c62b03a 	or	r17,r3,r17
   4c1d8:	1080fcc4 	addi	r2,r2,1011
   4c1dc:	0085c83a 	sub	r2,zero,r2
   4c1e0:	000f883a 	mov	r7,zero
   4c1e4:	003f8106 	br	4bfec <__alt_data_end+0xfffd9fec>
   4c1e8:	3027883a 	mov	r19,r6
   4c1ec:	0081ffc4 	movi	r2,2047
   4c1f0:	0021883a 	mov	r16,zero
   4c1f4:	002d883a 	mov	r22,zero
   4c1f8:	003faa06 	br	4c0a4 <__alt_data_end+0xfffda0a4>
   4c1fc:	0023883a 	mov	r17,zero
   4c200:	0025883a 	mov	r18,zero
   4c204:	01c00044 	movi	r7,1
   4c208:	003f7806 	br	4bfec <__alt_data_end+0xfffd9fec>
   4c20c:	01c000c4 	movi	r7,3
   4c210:	003f7606 	br	4bfec <__alt_data_end+0xfffd9fec>
   4c214:	05400104 	movi	r21,4
   4c218:	0021883a 	mov	r16,zero
   4c21c:	002d883a 	mov	r22,zero
   4c220:	01400044 	movi	r5,1
   4c224:	003f5f06 	br	4bfa4 <__alt_data_end+0xfffd9fa4>
   4c228:	05400304 	movi	r21,12
   4c22c:	014000c4 	movi	r5,3
   4c230:	003f5c06 	br	4bfa4 <__alt_data_end+0xfffd9fa4>
   4c234:	04000434 	movhi	r16,16
   4c238:	0027883a 	mov	r19,zero
   4c23c:	843fffc4 	addi	r16,r16,-1
   4c240:	05bfffc4 	movi	r22,-1
   4c244:	0081ffc4 	movi	r2,2047
   4c248:	003f9606 	br	4c0a4 <__alt_data_end+0xfffda0a4>
   4c24c:	8023883a 	mov	r17,r16
   4c250:	b025883a 	mov	r18,r22
   4c254:	280f883a 	mov	r7,r5
   4c258:	003f8806 	br	4c07c <__alt_data_end+0xfffda07c>
   4c25c:	8023883a 	mov	r17,r16
   4c260:	b025883a 	mov	r18,r22
   4c264:	480d883a 	mov	r6,r9
   4c268:	280f883a 	mov	r7,r5
   4c26c:	003f8306 	br	4c07c <__alt_data_end+0xfffda07c>
   4c270:	b026d43a 	srli	r19,r22,16
   4c274:	902ed43a 	srli	r23,r18,16
   4c278:	b5bfffcc 	andi	r22,r22,65535
   4c27c:	94bfffcc 	andi	r18,r18,65535
   4c280:	b00b883a 	mov	r5,r22
   4c284:	9009883a 	mov	r4,r18
   4c288:	d8c00515 	stw	r3,20(sp)
   4c28c:	d9800715 	stw	r6,28(sp)
   4c290:	da000615 	stw	r8,24(sp)
   4c294:	004aa2c0 	call	4aa2c <__mulsi3>
   4c298:	980b883a 	mov	r5,r19
   4c29c:	9009883a 	mov	r4,r18
   4c2a0:	1029883a 	mov	r20,r2
   4c2a4:	004aa2c0 	call	4aa2c <__mulsi3>
   4c2a8:	b80b883a 	mov	r5,r23
   4c2ac:	9809883a 	mov	r4,r19
   4c2b0:	102b883a 	mov	r21,r2
   4c2b4:	004aa2c0 	call	4aa2c <__mulsi3>
   4c2b8:	b809883a 	mov	r4,r23
   4c2bc:	b00b883a 	mov	r5,r22
   4c2c0:	1039883a 	mov	fp,r2
   4c2c4:	004aa2c0 	call	4aa2c <__mulsi3>
   4c2c8:	a008d43a 	srli	r4,r20,16
   4c2cc:	1545883a 	add	r2,r2,r21
   4c2d0:	d8c00517 	ldw	r3,20(sp)
   4c2d4:	2085883a 	add	r2,r4,r2
   4c2d8:	d9800717 	ldw	r6,28(sp)
   4c2dc:	da000617 	ldw	r8,24(sp)
   4c2e0:	1540022e 	bgeu	r2,r21,4c2ec <__muldf3+0x3c4>
   4c2e4:	01000074 	movhi	r4,1
   4c2e8:	e139883a 	add	fp,fp,r4
   4c2ec:	100e943a 	slli	r7,r2,16
   4c2f0:	1004d43a 	srli	r2,r2,16
   4c2f4:	882ad43a 	srli	r21,r17,16
   4c2f8:	a53fffcc 	andi	r20,r20,65535
   4c2fc:	8c7fffcc 	andi	r17,r17,65535
   4c300:	3d29883a 	add	r20,r7,r20
   4c304:	b00b883a 	mov	r5,r22
   4c308:	8809883a 	mov	r4,r17
   4c30c:	d8c00515 	stw	r3,20(sp)
   4c310:	d9800715 	stw	r6,28(sp)
   4c314:	da000615 	stw	r8,24(sp)
   4c318:	dd000115 	stw	r20,4(sp)
   4c31c:	d8800015 	stw	r2,0(sp)
   4c320:	004aa2c0 	call	4aa2c <__mulsi3>
   4c324:	980b883a 	mov	r5,r19
   4c328:	8809883a 	mov	r4,r17
   4c32c:	d8800215 	stw	r2,8(sp)
   4c330:	004aa2c0 	call	4aa2c <__mulsi3>
   4c334:	9809883a 	mov	r4,r19
   4c338:	a80b883a 	mov	r5,r21
   4c33c:	1029883a 	mov	r20,r2
   4c340:	004aa2c0 	call	4aa2c <__mulsi3>
   4c344:	b00b883a 	mov	r5,r22
   4c348:	a809883a 	mov	r4,r21
   4c34c:	d8800415 	stw	r2,16(sp)
   4c350:	004aa2c0 	call	4aa2c <__mulsi3>
   4c354:	d9c00217 	ldw	r7,8(sp)
   4c358:	1505883a 	add	r2,r2,r20
   4c35c:	d8c00517 	ldw	r3,20(sp)
   4c360:	3826d43a 	srli	r19,r7,16
   4c364:	d9800717 	ldw	r6,28(sp)
   4c368:	da000617 	ldw	r8,24(sp)
   4c36c:	9885883a 	add	r2,r19,r2
   4c370:	da400417 	ldw	r9,16(sp)
   4c374:	1500022e 	bgeu	r2,r20,4c380 <__muldf3+0x458>
   4c378:	01000074 	movhi	r4,1
   4c37c:	4913883a 	add	r9,r9,r4
   4c380:	1028d43a 	srli	r20,r2,16
   4c384:	1004943a 	slli	r2,r2,16
   4c388:	802cd43a 	srli	r22,r16,16
   4c38c:	843fffcc 	andi	r16,r16,65535
   4c390:	3cffffcc 	andi	r19,r7,65535
   4c394:	9009883a 	mov	r4,r18
   4c398:	800b883a 	mov	r5,r16
   4c39c:	a269883a 	add	r20,r20,r9
   4c3a0:	d8c00515 	stw	r3,20(sp)
   4c3a4:	d9800715 	stw	r6,28(sp)
   4c3a8:	da000615 	stw	r8,24(sp)
   4c3ac:	14e7883a 	add	r19,r2,r19
   4c3b0:	004aa2c0 	call	4aa2c <__mulsi3>
   4c3b4:	9009883a 	mov	r4,r18
   4c3b8:	b00b883a 	mov	r5,r22
   4c3bc:	d8800315 	stw	r2,12(sp)
   4c3c0:	004aa2c0 	call	4aa2c <__mulsi3>
   4c3c4:	b809883a 	mov	r4,r23
   4c3c8:	b00b883a 	mov	r5,r22
   4c3cc:	d8800215 	stw	r2,8(sp)
   4c3d0:	004aa2c0 	call	4aa2c <__mulsi3>
   4c3d4:	b80b883a 	mov	r5,r23
   4c3d8:	8009883a 	mov	r4,r16
   4c3dc:	d8800415 	stw	r2,16(sp)
   4c3e0:	004aa2c0 	call	4aa2c <__mulsi3>
   4c3e4:	da800317 	ldw	r10,12(sp)
   4c3e8:	d9c00217 	ldw	r7,8(sp)
   4c3ec:	d9000017 	ldw	r4,0(sp)
   4c3f0:	502ed43a 	srli	r23,r10,16
   4c3f4:	11c5883a 	add	r2,r2,r7
   4c3f8:	24e5883a 	add	r18,r4,r19
   4c3fc:	b885883a 	add	r2,r23,r2
   4c400:	d8c00517 	ldw	r3,20(sp)
   4c404:	d9800717 	ldw	r6,28(sp)
   4c408:	da000617 	ldw	r8,24(sp)
   4c40c:	da400417 	ldw	r9,16(sp)
   4c410:	11c0022e 	bgeu	r2,r7,4c41c <__muldf3+0x4f4>
   4c414:	01000074 	movhi	r4,1
   4c418:	4913883a 	add	r9,r9,r4
   4c41c:	100ed43a 	srli	r7,r2,16
   4c420:	1004943a 	slli	r2,r2,16
   4c424:	55ffffcc 	andi	r23,r10,65535
   4c428:	3a53883a 	add	r9,r7,r9
   4c42c:	8809883a 	mov	r4,r17
   4c430:	800b883a 	mov	r5,r16
   4c434:	d8c00515 	stw	r3,20(sp)
   4c438:	d9800715 	stw	r6,28(sp)
   4c43c:	da000615 	stw	r8,24(sp)
   4c440:	da400415 	stw	r9,16(sp)
   4c444:	15ef883a 	add	r23,r2,r23
   4c448:	004aa2c0 	call	4aa2c <__mulsi3>
   4c44c:	8809883a 	mov	r4,r17
   4c450:	b00b883a 	mov	r5,r22
   4c454:	d8800215 	stw	r2,8(sp)
   4c458:	004aa2c0 	call	4aa2c <__mulsi3>
   4c45c:	b00b883a 	mov	r5,r22
   4c460:	a809883a 	mov	r4,r21
   4c464:	d8800315 	stw	r2,12(sp)
   4c468:	004aa2c0 	call	4aa2c <__mulsi3>
   4c46c:	8009883a 	mov	r4,r16
   4c470:	a80b883a 	mov	r5,r21
   4c474:	1023883a 	mov	r17,r2
   4c478:	004aa2c0 	call	4aa2c <__mulsi3>
   4c47c:	d9c00217 	ldw	r7,8(sp)
   4c480:	da800317 	ldw	r10,12(sp)
   4c484:	d8c00517 	ldw	r3,20(sp)
   4c488:	3808d43a 	srli	r4,r7,16
   4c48c:	1285883a 	add	r2,r2,r10
   4c490:	d9800717 	ldw	r6,28(sp)
   4c494:	2085883a 	add	r2,r4,r2
   4c498:	da000617 	ldw	r8,24(sp)
   4c49c:	da400417 	ldw	r9,16(sp)
   4c4a0:	1280022e 	bgeu	r2,r10,4c4ac <__muldf3+0x584>
   4c4a4:	01000074 	movhi	r4,1
   4c4a8:	8923883a 	add	r17,r17,r4
   4c4ac:	1008943a 	slli	r4,r2,16
   4c4b0:	39ffffcc 	andi	r7,r7,65535
   4c4b4:	e4b9883a 	add	fp,fp,r18
   4c4b8:	21cf883a 	add	r7,r4,r7
   4c4bc:	e4e7803a 	cmpltu	r19,fp,r19
   4c4c0:	3d0f883a 	add	r7,r7,r20
   4c4c4:	bf39883a 	add	fp,r23,fp
   4c4c8:	99c9883a 	add	r4,r19,r7
   4c4cc:	e5ef803a 	cmpltu	r23,fp,r23
   4c4d0:	490b883a 	add	r5,r9,r4
   4c4d4:	1004d43a 	srli	r2,r2,16
   4c4d8:	b965883a 	add	r18,r23,r5
   4c4dc:	24c9803a 	cmpltu	r4,r4,r19
   4c4e0:	3d29803a 	cmpltu	r20,r7,r20
   4c4e4:	a128b03a 	or	r20,r20,r4
   4c4e8:	95ef803a 	cmpltu	r23,r18,r23
   4c4ec:	2a53803a 	cmpltu	r9,r5,r9
   4c4f0:	a0a9883a 	add	r20,r20,r2
   4c4f4:	4deeb03a 	or	r23,r9,r23
   4c4f8:	a5ef883a 	add	r23,r20,r23
   4c4fc:	bc63883a 	add	r17,r23,r17
   4c500:	e004927a 	slli	r2,fp,9
   4c504:	d9000117 	ldw	r4,4(sp)
   4c508:	882e927a 	slli	r23,r17,9
   4c50c:	9022d5fa 	srli	r17,r18,23
   4c510:	e038d5fa 	srli	fp,fp,23
   4c514:	1104b03a 	or	r2,r2,r4
   4c518:	9024927a 	slli	r18,r18,9
   4c51c:	1004c03a 	cmpne	r2,r2,zero
   4c520:	bc62b03a 	or	r17,r23,r17
   4c524:	1738b03a 	or	fp,r2,fp
   4c528:	8880402c 	andhi	r2,r17,256
   4c52c:	e4a4b03a 	or	r18,fp,r18
   4c530:	10000726 	beq	r2,zero,4c550 <__muldf3+0x628>
   4c534:	9006d07a 	srli	r3,r18,1
   4c538:	880497fa 	slli	r2,r17,31
   4c53c:	9480004c 	andi	r18,r18,1
   4c540:	8822d07a 	srli	r17,r17,1
   4c544:	1ca4b03a 	or	r18,r3,r18
   4c548:	14a4b03a 	or	r18,r2,r18
   4c54c:	4007883a 	mov	r3,r8
   4c550:	1880ffc4 	addi	r2,r3,1023
   4c554:	0080460e 	bge	zero,r2,4c670 <__muldf3+0x748>
   4c558:	910001cc 	andi	r4,r18,7
   4c55c:	20000726 	beq	r4,zero,4c57c <__muldf3+0x654>
   4c560:	910003cc 	andi	r4,r18,15
   4c564:	01400104 	movi	r5,4
   4c568:	21400426 	beq	r4,r5,4c57c <__muldf3+0x654>
   4c56c:	9149883a 	add	r4,r18,r5
   4c570:	24a5803a 	cmpltu	r18,r4,r18
   4c574:	8ca3883a 	add	r17,r17,r18
   4c578:	2025883a 	mov	r18,r4
   4c57c:	8900402c 	andhi	r4,r17,256
   4c580:	20000426 	beq	r4,zero,4c594 <__muldf3+0x66c>
   4c584:	18810004 	addi	r2,r3,1024
   4c588:	00ffc034 	movhi	r3,65280
   4c58c:	18ffffc4 	addi	r3,r3,-1
   4c590:	88e2703a 	and	r17,r17,r3
   4c594:	00c1ff84 	movi	r3,2046
   4c598:	18bf1316 	blt	r3,r2,4c1e8 <__alt_data_end+0xfffda1e8>
   4c59c:	882c977a 	slli	r22,r17,29
   4c5a0:	9024d0fa 	srli	r18,r18,3
   4c5a4:	8822927a 	slli	r17,r17,9
   4c5a8:	1081ffcc 	andi	r2,r2,2047
   4c5ac:	b4acb03a 	or	r22,r22,r18
   4c5b0:	8820d33a 	srli	r16,r17,12
   4c5b4:	3027883a 	mov	r19,r6
   4c5b8:	003eba06 	br	4c0a4 <__alt_data_end+0xfffda0a4>
   4c5bc:	8080022c 	andhi	r2,r16,8
   4c5c0:	10000926 	beq	r2,zero,4c5e8 <__muldf3+0x6c0>
   4c5c4:	8880022c 	andhi	r2,r17,8
   4c5c8:	1000071e 	bne	r2,zero,4c5e8 <__muldf3+0x6c0>
   4c5cc:	00800434 	movhi	r2,16
   4c5d0:	8c000234 	orhi	r16,r17,8
   4c5d4:	10bfffc4 	addi	r2,r2,-1
   4c5d8:	e027883a 	mov	r19,fp
   4c5dc:	80a0703a 	and	r16,r16,r2
   4c5e0:	902d883a 	mov	r22,r18
   4c5e4:	003f1706 	br	4c244 <__alt_data_end+0xfffda244>
   4c5e8:	00800434 	movhi	r2,16
   4c5ec:	84000234 	orhi	r16,r16,8
   4c5f0:	10bfffc4 	addi	r2,r2,-1
   4c5f4:	80a0703a 	and	r16,r16,r2
   4c5f8:	003f1206 	br	4c244 <__alt_data_end+0xfffda244>
   4c5fc:	147ff604 	addi	r17,r2,-40
   4c600:	3462983a 	sll	r17,r6,r17
   4c604:	0025883a 	mov	r18,zero
   4c608:	003ef306 	br	4c1d8 <__alt_data_end+0xfffda1d8>
   4c60c:	3009883a 	mov	r4,r6
   4c610:	d9400215 	stw	r5,8(sp)
   4c614:	d9800715 	stw	r6,28(sp)
   4c618:	da400415 	stw	r9,16(sp)
   4c61c:	da800315 	stw	r10,12(sp)
   4c620:	004d2940 	call	4d294 <__clzsi2>
   4c624:	10800804 	addi	r2,r2,32
   4c628:	da800317 	ldw	r10,12(sp)
   4c62c:	da400417 	ldw	r9,16(sp)
   4c630:	d9800717 	ldw	r6,28(sp)
   4c634:	d9400217 	ldw	r5,8(sp)
   4c638:	003edd06 	br	4c1b0 <__alt_data_end+0xfffda1b0>
   4c63c:	143ff604 	addi	r16,r2,-40
   4c640:	ac20983a 	sll	r16,r21,r16
   4c644:	002d883a 	mov	r22,zero
   4c648:	003ec106 	br	4c150 <__alt_data_end+0xfffda150>
   4c64c:	d9800715 	stw	r6,28(sp)
   4c650:	d9c00215 	stw	r7,8(sp)
   4c654:	da400415 	stw	r9,16(sp)
   4c658:	004d2940 	call	4d294 <__clzsi2>
   4c65c:	10800804 	addi	r2,r2,32
   4c660:	da400417 	ldw	r9,16(sp)
   4c664:	d9c00217 	ldw	r7,8(sp)
   4c668:	d9800717 	ldw	r6,28(sp)
   4c66c:	003eae06 	br	4c128 <__alt_data_end+0xfffda128>
   4c670:	00c00044 	movi	r3,1
   4c674:	1887c83a 	sub	r3,r3,r2
   4c678:	01000e04 	movi	r4,56
   4c67c:	20fe8516 	blt	r4,r3,4c094 <__alt_data_end+0xfffda094>
   4c680:	010007c4 	movi	r4,31
   4c684:	20c01b16 	blt	r4,r3,4c6f4 <__muldf3+0x7cc>
   4c688:	00800804 	movi	r2,32
   4c68c:	10c5c83a 	sub	r2,r2,r3
   4c690:	888a983a 	sll	r5,r17,r2
   4c694:	90c8d83a 	srl	r4,r18,r3
   4c698:	9084983a 	sll	r2,r18,r2
   4c69c:	88e2d83a 	srl	r17,r17,r3
   4c6a0:	2906b03a 	or	r3,r5,r4
   4c6a4:	1004c03a 	cmpne	r2,r2,zero
   4c6a8:	1886b03a 	or	r3,r3,r2
   4c6ac:	188001cc 	andi	r2,r3,7
   4c6b0:	10000726 	beq	r2,zero,4c6d0 <__muldf3+0x7a8>
   4c6b4:	188003cc 	andi	r2,r3,15
   4c6b8:	01000104 	movi	r4,4
   4c6bc:	11000426 	beq	r2,r4,4c6d0 <__muldf3+0x7a8>
   4c6c0:	1805883a 	mov	r2,r3
   4c6c4:	10c00104 	addi	r3,r2,4
   4c6c8:	1885803a 	cmpltu	r2,r3,r2
   4c6cc:	88a3883a 	add	r17,r17,r2
   4c6d0:	8880202c 	andhi	r2,r17,128
   4c6d4:	10001c26 	beq	r2,zero,4c748 <__muldf3+0x820>
   4c6d8:	3027883a 	mov	r19,r6
   4c6dc:	00800044 	movi	r2,1
   4c6e0:	0021883a 	mov	r16,zero
   4c6e4:	002d883a 	mov	r22,zero
   4c6e8:	003e6e06 	br	4c0a4 <__alt_data_end+0xfffda0a4>
   4c6ec:	4007883a 	mov	r3,r8
   4c6f0:	003f9706 	br	4c550 <__alt_data_end+0xfffda550>
   4c6f4:	017ff844 	movi	r5,-31
   4c6f8:	2885c83a 	sub	r2,r5,r2
   4c6fc:	888ad83a 	srl	r5,r17,r2
   4c700:	00800804 	movi	r2,32
   4c704:	18801a26 	beq	r3,r2,4c770 <__muldf3+0x848>
   4c708:	01001004 	movi	r4,64
   4c70c:	20c7c83a 	sub	r3,r4,r3
   4c710:	88e2983a 	sll	r17,r17,r3
   4c714:	8ca4b03a 	or	r18,r17,r18
   4c718:	9004c03a 	cmpne	r2,r18,zero
   4c71c:	2884b03a 	or	r2,r5,r2
   4c720:	144001cc 	andi	r17,r2,7
   4c724:	88000d1e 	bne	r17,zero,4c75c <__muldf3+0x834>
   4c728:	0021883a 	mov	r16,zero
   4c72c:	102cd0fa 	srli	r22,r2,3
   4c730:	3027883a 	mov	r19,r6
   4c734:	0005883a 	mov	r2,zero
   4c738:	b46cb03a 	or	r22,r22,r17
   4c73c:	003e5906 	br	4c0a4 <__alt_data_end+0xfffda0a4>
   4c740:	1007883a 	mov	r3,r2
   4c744:	0023883a 	mov	r17,zero
   4c748:	8820927a 	slli	r16,r17,9
   4c74c:	1805883a 	mov	r2,r3
   4c750:	8822977a 	slli	r17,r17,29
   4c754:	8020d33a 	srli	r16,r16,12
   4c758:	003ff406 	br	4c72c <__alt_data_end+0xfffda72c>
   4c75c:	10c003cc 	andi	r3,r2,15
   4c760:	01000104 	movi	r4,4
   4c764:	193ff626 	beq	r3,r4,4c740 <__alt_data_end+0xfffda740>
   4c768:	0023883a 	mov	r17,zero
   4c76c:	003fd506 	br	4c6c4 <__alt_data_end+0xfffda6c4>
   4c770:	0023883a 	mov	r17,zero
   4c774:	003fe706 	br	4c714 <__alt_data_end+0xfffda714>
   4c778:	00800434 	movhi	r2,16
   4c77c:	8c000234 	orhi	r16,r17,8
   4c780:	10bfffc4 	addi	r2,r2,-1
   4c784:	3027883a 	mov	r19,r6
   4c788:	80a0703a 	and	r16,r16,r2
   4c78c:	902d883a 	mov	r22,r18
   4c790:	003eac06 	br	4c244 <__alt_data_end+0xfffda244>

0004c794 <__subdf3>:
   4c794:	02000434 	movhi	r8,16
   4c798:	423fffc4 	addi	r8,r8,-1
   4c79c:	defffb04 	addi	sp,sp,-20
   4c7a0:	2a14703a 	and	r10,r5,r8
   4c7a4:	3812d53a 	srli	r9,r7,20
   4c7a8:	3a10703a 	and	r8,r7,r8
   4c7ac:	2006d77a 	srli	r3,r4,29
   4c7b0:	3004d77a 	srli	r2,r6,29
   4c7b4:	dc000015 	stw	r16,0(sp)
   4c7b8:	501490fa 	slli	r10,r10,3
   4c7bc:	2820d53a 	srli	r16,r5,20
   4c7c0:	401090fa 	slli	r8,r8,3
   4c7c4:	dc800215 	stw	r18,8(sp)
   4c7c8:	dc400115 	stw	r17,4(sp)
   4c7cc:	dfc00415 	stw	ra,16(sp)
   4c7d0:	202290fa 	slli	r17,r4,3
   4c7d4:	dcc00315 	stw	r19,12(sp)
   4c7d8:	4a41ffcc 	andi	r9,r9,2047
   4c7dc:	0101ffc4 	movi	r4,2047
   4c7e0:	2824d7fa 	srli	r18,r5,31
   4c7e4:	8401ffcc 	andi	r16,r16,2047
   4c7e8:	50c6b03a 	or	r3,r10,r3
   4c7ec:	380ed7fa 	srli	r7,r7,31
   4c7f0:	408ab03a 	or	r5,r8,r2
   4c7f4:	300c90fa 	slli	r6,r6,3
   4c7f8:	49009626 	beq	r9,r4,4ca54 <__subdf3+0x2c0>
   4c7fc:	39c0005c 	xori	r7,r7,1
   4c800:	8245c83a 	sub	r2,r16,r9
   4c804:	3c807426 	beq	r7,r18,4c9d8 <__subdf3+0x244>
   4c808:	0080af0e 	bge	zero,r2,4cac8 <__subdf3+0x334>
   4c80c:	48002a1e 	bne	r9,zero,4c8b8 <__subdf3+0x124>
   4c810:	2988b03a 	or	r4,r5,r6
   4c814:	20009a1e 	bne	r4,zero,4ca80 <__subdf3+0x2ec>
   4c818:	888001cc 	andi	r2,r17,7
   4c81c:	10000726 	beq	r2,zero,4c83c <__subdf3+0xa8>
   4c820:	888003cc 	andi	r2,r17,15
   4c824:	01000104 	movi	r4,4
   4c828:	11000426 	beq	r2,r4,4c83c <__subdf3+0xa8>
   4c82c:	890b883a 	add	r5,r17,r4
   4c830:	2c63803a 	cmpltu	r17,r5,r17
   4c834:	1c47883a 	add	r3,r3,r17
   4c838:	2823883a 	mov	r17,r5
   4c83c:	1880202c 	andhi	r2,r3,128
   4c840:	10005926 	beq	r2,zero,4c9a8 <__subdf3+0x214>
   4c844:	84000044 	addi	r16,r16,1
   4c848:	0081ffc4 	movi	r2,2047
   4c84c:	8080be26 	beq	r16,r2,4cb48 <__subdf3+0x3b4>
   4c850:	017fe034 	movhi	r5,65408
   4c854:	297fffc4 	addi	r5,r5,-1
   4c858:	1946703a 	and	r3,r3,r5
   4c85c:	1804977a 	slli	r2,r3,29
   4c860:	1806927a 	slli	r3,r3,9
   4c864:	8822d0fa 	srli	r17,r17,3
   4c868:	8401ffcc 	andi	r16,r16,2047
   4c86c:	180ad33a 	srli	r5,r3,12
   4c870:	9100004c 	andi	r4,r18,1
   4c874:	1444b03a 	or	r2,r2,r17
   4c878:	80c1ffcc 	andi	r3,r16,2047
   4c87c:	1820953a 	slli	r16,r3,20
   4c880:	20c03fcc 	andi	r3,r4,255
   4c884:	180897fa 	slli	r4,r3,31
   4c888:	00c00434 	movhi	r3,16
   4c88c:	18ffffc4 	addi	r3,r3,-1
   4c890:	28c6703a 	and	r3,r5,r3
   4c894:	1c06b03a 	or	r3,r3,r16
   4c898:	1906b03a 	or	r3,r3,r4
   4c89c:	dfc00417 	ldw	ra,16(sp)
   4c8a0:	dcc00317 	ldw	r19,12(sp)
   4c8a4:	dc800217 	ldw	r18,8(sp)
   4c8a8:	dc400117 	ldw	r17,4(sp)
   4c8ac:	dc000017 	ldw	r16,0(sp)
   4c8b0:	dec00504 	addi	sp,sp,20
   4c8b4:	f800283a 	ret
   4c8b8:	0101ffc4 	movi	r4,2047
   4c8bc:	813fd626 	beq	r16,r4,4c818 <__alt_data_end+0xfffda818>
   4c8c0:	29402034 	orhi	r5,r5,128
   4c8c4:	01000e04 	movi	r4,56
   4c8c8:	2080a316 	blt	r4,r2,4cb58 <__subdf3+0x3c4>
   4c8cc:	010007c4 	movi	r4,31
   4c8d0:	2080c616 	blt	r4,r2,4cbec <__subdf3+0x458>
   4c8d4:	01000804 	movi	r4,32
   4c8d8:	2089c83a 	sub	r4,r4,r2
   4c8dc:	2910983a 	sll	r8,r5,r4
   4c8e0:	308ed83a 	srl	r7,r6,r2
   4c8e4:	3108983a 	sll	r4,r6,r4
   4c8e8:	2884d83a 	srl	r2,r5,r2
   4c8ec:	41ccb03a 	or	r6,r8,r7
   4c8f0:	2008c03a 	cmpne	r4,r4,zero
   4c8f4:	310cb03a 	or	r6,r6,r4
   4c8f8:	898dc83a 	sub	r6,r17,r6
   4c8fc:	89a3803a 	cmpltu	r17,r17,r6
   4c900:	1887c83a 	sub	r3,r3,r2
   4c904:	1c47c83a 	sub	r3,r3,r17
   4c908:	3023883a 	mov	r17,r6
   4c90c:	1880202c 	andhi	r2,r3,128
   4c910:	10002326 	beq	r2,zero,4c9a0 <__subdf3+0x20c>
   4c914:	04c02034 	movhi	r19,128
   4c918:	9cffffc4 	addi	r19,r19,-1
   4c91c:	1ce6703a 	and	r19,r3,r19
   4c920:	98007a26 	beq	r19,zero,4cb0c <__subdf3+0x378>
   4c924:	9809883a 	mov	r4,r19
   4c928:	004d2940 	call	4d294 <__clzsi2>
   4c92c:	113ffe04 	addi	r4,r2,-8
   4c930:	00c007c4 	movi	r3,31
   4c934:	19007b16 	blt	r3,r4,4cb24 <__subdf3+0x390>
   4c938:	00800804 	movi	r2,32
   4c93c:	1105c83a 	sub	r2,r2,r4
   4c940:	8884d83a 	srl	r2,r17,r2
   4c944:	9906983a 	sll	r3,r19,r4
   4c948:	8922983a 	sll	r17,r17,r4
   4c94c:	10c4b03a 	or	r2,r2,r3
   4c950:	24007816 	blt	r4,r16,4cb34 <__subdf3+0x3a0>
   4c954:	2421c83a 	sub	r16,r4,r16
   4c958:	80c00044 	addi	r3,r16,1
   4c95c:	010007c4 	movi	r4,31
   4c960:	20c09516 	blt	r4,r3,4cbb8 <__subdf3+0x424>
   4c964:	01400804 	movi	r5,32
   4c968:	28cbc83a 	sub	r5,r5,r3
   4c96c:	88c8d83a 	srl	r4,r17,r3
   4c970:	8962983a 	sll	r17,r17,r5
   4c974:	114a983a 	sll	r5,r2,r5
   4c978:	10c6d83a 	srl	r3,r2,r3
   4c97c:	8804c03a 	cmpne	r2,r17,zero
   4c980:	290ab03a 	or	r5,r5,r4
   4c984:	28a2b03a 	or	r17,r5,r2
   4c988:	0021883a 	mov	r16,zero
   4c98c:	003fa206 	br	4c818 <__alt_data_end+0xfffda818>
   4c990:	2090b03a 	or	r8,r4,r2
   4c994:	40018e26 	beq	r8,zero,4cfd0 <__subdf3+0x83c>
   4c998:	1007883a 	mov	r3,r2
   4c99c:	2023883a 	mov	r17,r4
   4c9a0:	888001cc 	andi	r2,r17,7
   4c9a4:	103f9e1e 	bne	r2,zero,4c820 <__alt_data_end+0xfffda820>
   4c9a8:	1804977a 	slli	r2,r3,29
   4c9ac:	8822d0fa 	srli	r17,r17,3
   4c9b0:	1810d0fa 	srli	r8,r3,3
   4c9b4:	9100004c 	andi	r4,r18,1
   4c9b8:	1444b03a 	or	r2,r2,r17
   4c9bc:	00c1ffc4 	movi	r3,2047
   4c9c0:	80c02826 	beq	r16,r3,4ca64 <__subdf3+0x2d0>
   4c9c4:	01400434 	movhi	r5,16
   4c9c8:	297fffc4 	addi	r5,r5,-1
   4c9cc:	80e0703a 	and	r16,r16,r3
   4c9d0:	414a703a 	and	r5,r8,r5
   4c9d4:	003fa806 	br	4c878 <__alt_data_end+0xfffda878>
   4c9d8:	0080630e 	bge	zero,r2,4cb68 <__subdf3+0x3d4>
   4c9dc:	48003026 	beq	r9,zero,4caa0 <__subdf3+0x30c>
   4c9e0:	0101ffc4 	movi	r4,2047
   4c9e4:	813f8c26 	beq	r16,r4,4c818 <__alt_data_end+0xfffda818>
   4c9e8:	29402034 	orhi	r5,r5,128
   4c9ec:	01000e04 	movi	r4,56
   4c9f0:	2080a90e 	bge	r4,r2,4cc98 <__subdf3+0x504>
   4c9f4:	298cb03a 	or	r6,r5,r6
   4c9f8:	3012c03a 	cmpne	r9,r6,zero
   4c9fc:	0005883a 	mov	r2,zero
   4ca00:	4c53883a 	add	r9,r9,r17
   4ca04:	4c63803a 	cmpltu	r17,r9,r17
   4ca08:	10c7883a 	add	r3,r2,r3
   4ca0c:	88c7883a 	add	r3,r17,r3
   4ca10:	4823883a 	mov	r17,r9
   4ca14:	1880202c 	andhi	r2,r3,128
   4ca18:	1000d026 	beq	r2,zero,4cd5c <__subdf3+0x5c8>
   4ca1c:	84000044 	addi	r16,r16,1
   4ca20:	0081ffc4 	movi	r2,2047
   4ca24:	8080fe26 	beq	r16,r2,4ce20 <__subdf3+0x68c>
   4ca28:	00bfe034 	movhi	r2,65408
   4ca2c:	10bfffc4 	addi	r2,r2,-1
   4ca30:	1886703a 	and	r3,r3,r2
   4ca34:	880ad07a 	srli	r5,r17,1
   4ca38:	180497fa 	slli	r2,r3,31
   4ca3c:	8900004c 	andi	r4,r17,1
   4ca40:	2922b03a 	or	r17,r5,r4
   4ca44:	1806d07a 	srli	r3,r3,1
   4ca48:	1462b03a 	or	r17,r2,r17
   4ca4c:	3825883a 	mov	r18,r7
   4ca50:	003f7106 	br	4c818 <__alt_data_end+0xfffda818>
   4ca54:	2984b03a 	or	r2,r5,r6
   4ca58:	103f6826 	beq	r2,zero,4c7fc <__alt_data_end+0xfffda7fc>
   4ca5c:	39c03fcc 	andi	r7,r7,255
   4ca60:	003f6706 	br	4c800 <__alt_data_end+0xfffda800>
   4ca64:	4086b03a 	or	r3,r8,r2
   4ca68:	18015226 	beq	r3,zero,4cfb4 <__subdf3+0x820>
   4ca6c:	00c00434 	movhi	r3,16
   4ca70:	41400234 	orhi	r5,r8,8
   4ca74:	18ffffc4 	addi	r3,r3,-1
   4ca78:	28ca703a 	and	r5,r5,r3
   4ca7c:	003f7e06 	br	4c878 <__alt_data_end+0xfffda878>
   4ca80:	10bfffc4 	addi	r2,r2,-1
   4ca84:	1000491e 	bne	r2,zero,4cbac <__subdf3+0x418>
   4ca88:	898fc83a 	sub	r7,r17,r6
   4ca8c:	89e3803a 	cmpltu	r17,r17,r7
   4ca90:	1947c83a 	sub	r3,r3,r5
   4ca94:	1c47c83a 	sub	r3,r3,r17
   4ca98:	3823883a 	mov	r17,r7
   4ca9c:	003f9b06 	br	4c90c <__alt_data_end+0xfffda90c>
   4caa0:	2988b03a 	or	r4,r5,r6
   4caa4:	203f5c26 	beq	r4,zero,4c818 <__alt_data_end+0xfffda818>
   4caa8:	10bfffc4 	addi	r2,r2,-1
   4caac:	1000931e 	bne	r2,zero,4ccfc <__subdf3+0x568>
   4cab0:	898d883a 	add	r6,r17,r6
   4cab4:	3463803a 	cmpltu	r17,r6,r17
   4cab8:	1947883a 	add	r3,r3,r5
   4cabc:	88c7883a 	add	r3,r17,r3
   4cac0:	3023883a 	mov	r17,r6
   4cac4:	003fd306 	br	4ca14 <__alt_data_end+0xfffdaa14>
   4cac8:	1000541e 	bne	r2,zero,4cc1c <__subdf3+0x488>
   4cacc:	80800044 	addi	r2,r16,1
   4cad0:	1081ffcc 	andi	r2,r2,2047
   4cad4:	01000044 	movi	r4,1
   4cad8:	2080a20e 	bge	r4,r2,4cd64 <__subdf3+0x5d0>
   4cadc:	8989c83a 	sub	r4,r17,r6
   4cae0:	8905803a 	cmpltu	r2,r17,r4
   4cae4:	1967c83a 	sub	r19,r3,r5
   4cae8:	98a7c83a 	sub	r19,r19,r2
   4caec:	9880202c 	andhi	r2,r19,128
   4caf0:	10006326 	beq	r2,zero,4cc80 <__subdf3+0x4ec>
   4caf4:	3463c83a 	sub	r17,r6,r17
   4caf8:	28c7c83a 	sub	r3,r5,r3
   4cafc:	344d803a 	cmpltu	r6,r6,r17
   4cb00:	19a7c83a 	sub	r19,r3,r6
   4cb04:	3825883a 	mov	r18,r7
   4cb08:	983f861e 	bne	r19,zero,4c924 <__alt_data_end+0xfffda924>
   4cb0c:	8809883a 	mov	r4,r17
   4cb10:	004d2940 	call	4d294 <__clzsi2>
   4cb14:	10800804 	addi	r2,r2,32
   4cb18:	113ffe04 	addi	r4,r2,-8
   4cb1c:	00c007c4 	movi	r3,31
   4cb20:	193f850e 	bge	r3,r4,4c938 <__alt_data_end+0xfffda938>
   4cb24:	10bff604 	addi	r2,r2,-40
   4cb28:	8884983a 	sll	r2,r17,r2
   4cb2c:	0023883a 	mov	r17,zero
   4cb30:	243f880e 	bge	r4,r16,4c954 <__alt_data_end+0xfffda954>
   4cb34:	00ffe034 	movhi	r3,65408
   4cb38:	18ffffc4 	addi	r3,r3,-1
   4cb3c:	8121c83a 	sub	r16,r16,r4
   4cb40:	10c6703a 	and	r3,r2,r3
   4cb44:	003f3406 	br	4c818 <__alt_data_end+0xfffda818>
   4cb48:	9100004c 	andi	r4,r18,1
   4cb4c:	000b883a 	mov	r5,zero
   4cb50:	0005883a 	mov	r2,zero
   4cb54:	003f4806 	br	4c878 <__alt_data_end+0xfffda878>
   4cb58:	298cb03a 	or	r6,r5,r6
   4cb5c:	300cc03a 	cmpne	r6,r6,zero
   4cb60:	0005883a 	mov	r2,zero
   4cb64:	003f6406 	br	4c8f8 <__alt_data_end+0xfffda8f8>
   4cb68:	10009a1e 	bne	r2,zero,4cdd4 <__subdf3+0x640>
   4cb6c:	82400044 	addi	r9,r16,1
   4cb70:	4881ffcc 	andi	r2,r9,2047
   4cb74:	02800044 	movi	r10,1
   4cb78:	5080670e 	bge	r10,r2,4cd18 <__subdf3+0x584>
   4cb7c:	0081ffc4 	movi	r2,2047
   4cb80:	4880af26 	beq	r9,r2,4ce40 <__subdf3+0x6ac>
   4cb84:	898d883a 	add	r6,r17,r6
   4cb88:	1945883a 	add	r2,r3,r5
   4cb8c:	3447803a 	cmpltu	r3,r6,r17
   4cb90:	1887883a 	add	r3,r3,r2
   4cb94:	182297fa 	slli	r17,r3,31
   4cb98:	300cd07a 	srli	r6,r6,1
   4cb9c:	1806d07a 	srli	r3,r3,1
   4cba0:	4821883a 	mov	r16,r9
   4cba4:	89a2b03a 	or	r17,r17,r6
   4cba8:	003f1b06 	br	4c818 <__alt_data_end+0xfffda818>
   4cbac:	0101ffc4 	movi	r4,2047
   4cbb0:	813f441e 	bne	r16,r4,4c8c4 <__alt_data_end+0xfffda8c4>
   4cbb4:	003f1806 	br	4c818 <__alt_data_end+0xfffda818>
   4cbb8:	843ff844 	addi	r16,r16,-31
   4cbbc:	01400804 	movi	r5,32
   4cbc0:	1408d83a 	srl	r4,r2,r16
   4cbc4:	19405026 	beq	r3,r5,4cd08 <__subdf3+0x574>
   4cbc8:	01401004 	movi	r5,64
   4cbcc:	28c7c83a 	sub	r3,r5,r3
   4cbd0:	10c4983a 	sll	r2,r2,r3
   4cbd4:	88a2b03a 	or	r17,r17,r2
   4cbd8:	8822c03a 	cmpne	r17,r17,zero
   4cbdc:	2462b03a 	or	r17,r4,r17
   4cbe0:	0007883a 	mov	r3,zero
   4cbe4:	0021883a 	mov	r16,zero
   4cbe8:	003f6d06 	br	4c9a0 <__alt_data_end+0xfffda9a0>
   4cbec:	11fff804 	addi	r7,r2,-32
   4cbf0:	01000804 	movi	r4,32
   4cbf4:	29ced83a 	srl	r7,r5,r7
   4cbf8:	11004526 	beq	r2,r4,4cd10 <__subdf3+0x57c>
   4cbfc:	01001004 	movi	r4,64
   4cc00:	2089c83a 	sub	r4,r4,r2
   4cc04:	2904983a 	sll	r2,r5,r4
   4cc08:	118cb03a 	or	r6,r2,r6
   4cc0c:	300cc03a 	cmpne	r6,r6,zero
   4cc10:	398cb03a 	or	r6,r7,r6
   4cc14:	0005883a 	mov	r2,zero
   4cc18:	003f3706 	br	4c8f8 <__alt_data_end+0xfffda8f8>
   4cc1c:	80002a26 	beq	r16,zero,4ccc8 <__subdf3+0x534>
   4cc20:	0101ffc4 	movi	r4,2047
   4cc24:	49006626 	beq	r9,r4,4cdc0 <__subdf3+0x62c>
   4cc28:	0085c83a 	sub	r2,zero,r2
   4cc2c:	18c02034 	orhi	r3,r3,128
   4cc30:	01000e04 	movi	r4,56
   4cc34:	20807e16 	blt	r4,r2,4ce30 <__subdf3+0x69c>
   4cc38:	010007c4 	movi	r4,31
   4cc3c:	2080e716 	blt	r4,r2,4cfdc <__subdf3+0x848>
   4cc40:	01000804 	movi	r4,32
   4cc44:	2089c83a 	sub	r4,r4,r2
   4cc48:	1914983a 	sll	r10,r3,r4
   4cc4c:	8890d83a 	srl	r8,r17,r2
   4cc50:	8908983a 	sll	r4,r17,r4
   4cc54:	1884d83a 	srl	r2,r3,r2
   4cc58:	5222b03a 	or	r17,r10,r8
   4cc5c:	2006c03a 	cmpne	r3,r4,zero
   4cc60:	88e2b03a 	or	r17,r17,r3
   4cc64:	3463c83a 	sub	r17,r6,r17
   4cc68:	2885c83a 	sub	r2,r5,r2
   4cc6c:	344d803a 	cmpltu	r6,r6,r17
   4cc70:	1187c83a 	sub	r3,r2,r6
   4cc74:	4821883a 	mov	r16,r9
   4cc78:	3825883a 	mov	r18,r7
   4cc7c:	003f2306 	br	4c90c <__alt_data_end+0xfffda90c>
   4cc80:	24d0b03a 	or	r8,r4,r19
   4cc84:	40001b1e 	bne	r8,zero,4ccf4 <__subdf3+0x560>
   4cc88:	0005883a 	mov	r2,zero
   4cc8c:	0009883a 	mov	r4,zero
   4cc90:	0021883a 	mov	r16,zero
   4cc94:	003f4906 	br	4c9bc <__alt_data_end+0xfffda9bc>
   4cc98:	010007c4 	movi	r4,31
   4cc9c:	20803a16 	blt	r4,r2,4cd88 <__subdf3+0x5f4>
   4cca0:	01000804 	movi	r4,32
   4cca4:	2089c83a 	sub	r4,r4,r2
   4cca8:	2912983a 	sll	r9,r5,r4
   4ccac:	3090d83a 	srl	r8,r6,r2
   4ccb0:	3108983a 	sll	r4,r6,r4
   4ccb4:	2884d83a 	srl	r2,r5,r2
   4ccb8:	4a12b03a 	or	r9,r9,r8
   4ccbc:	2008c03a 	cmpne	r4,r4,zero
   4ccc0:	4912b03a 	or	r9,r9,r4
   4ccc4:	003f4e06 	br	4ca00 <__alt_data_end+0xfffdaa00>
   4ccc8:	1c48b03a 	or	r4,r3,r17
   4cccc:	20003c26 	beq	r4,zero,4cdc0 <__subdf3+0x62c>
   4ccd0:	0084303a 	nor	r2,zero,r2
   4ccd4:	1000381e 	bne	r2,zero,4cdb8 <__subdf3+0x624>
   4ccd8:	3463c83a 	sub	r17,r6,r17
   4ccdc:	28c5c83a 	sub	r2,r5,r3
   4cce0:	344d803a 	cmpltu	r6,r6,r17
   4cce4:	1187c83a 	sub	r3,r2,r6
   4cce8:	4821883a 	mov	r16,r9
   4ccec:	3825883a 	mov	r18,r7
   4ccf0:	003f0606 	br	4c90c <__alt_data_end+0xfffda90c>
   4ccf4:	2023883a 	mov	r17,r4
   4ccf8:	003f0906 	br	4c920 <__alt_data_end+0xfffda920>
   4ccfc:	0101ffc4 	movi	r4,2047
   4cd00:	813f3a1e 	bne	r16,r4,4c9ec <__alt_data_end+0xfffda9ec>
   4cd04:	003ec406 	br	4c818 <__alt_data_end+0xfffda818>
   4cd08:	0005883a 	mov	r2,zero
   4cd0c:	003fb106 	br	4cbd4 <__alt_data_end+0xfffdabd4>
   4cd10:	0005883a 	mov	r2,zero
   4cd14:	003fbc06 	br	4cc08 <__alt_data_end+0xfffdac08>
   4cd18:	1c44b03a 	or	r2,r3,r17
   4cd1c:	80008e1e 	bne	r16,zero,4cf58 <__subdf3+0x7c4>
   4cd20:	1000c826 	beq	r2,zero,4d044 <__subdf3+0x8b0>
   4cd24:	2984b03a 	or	r2,r5,r6
   4cd28:	103ebb26 	beq	r2,zero,4c818 <__alt_data_end+0xfffda818>
   4cd2c:	8989883a 	add	r4,r17,r6
   4cd30:	1945883a 	add	r2,r3,r5
   4cd34:	2447803a 	cmpltu	r3,r4,r17
   4cd38:	1887883a 	add	r3,r3,r2
   4cd3c:	1880202c 	andhi	r2,r3,128
   4cd40:	2023883a 	mov	r17,r4
   4cd44:	103f1626 	beq	r2,zero,4c9a0 <__alt_data_end+0xfffda9a0>
   4cd48:	00bfe034 	movhi	r2,65408
   4cd4c:	10bfffc4 	addi	r2,r2,-1
   4cd50:	5021883a 	mov	r16,r10
   4cd54:	1886703a 	and	r3,r3,r2
   4cd58:	003eaf06 	br	4c818 <__alt_data_end+0xfffda818>
   4cd5c:	3825883a 	mov	r18,r7
   4cd60:	003f0f06 	br	4c9a0 <__alt_data_end+0xfffda9a0>
   4cd64:	1c44b03a 	or	r2,r3,r17
   4cd68:	8000251e 	bne	r16,zero,4ce00 <__subdf3+0x66c>
   4cd6c:	1000661e 	bne	r2,zero,4cf08 <__subdf3+0x774>
   4cd70:	2990b03a 	or	r8,r5,r6
   4cd74:	40009626 	beq	r8,zero,4cfd0 <__subdf3+0x83c>
   4cd78:	2807883a 	mov	r3,r5
   4cd7c:	3023883a 	mov	r17,r6
   4cd80:	3825883a 	mov	r18,r7
   4cd84:	003ea406 	br	4c818 <__alt_data_end+0xfffda818>
   4cd88:	127ff804 	addi	r9,r2,-32
   4cd8c:	01000804 	movi	r4,32
   4cd90:	2a52d83a 	srl	r9,r5,r9
   4cd94:	11008c26 	beq	r2,r4,4cfc8 <__subdf3+0x834>
   4cd98:	01001004 	movi	r4,64
   4cd9c:	2085c83a 	sub	r2,r4,r2
   4cda0:	2884983a 	sll	r2,r5,r2
   4cda4:	118cb03a 	or	r6,r2,r6
   4cda8:	300cc03a 	cmpne	r6,r6,zero
   4cdac:	4992b03a 	or	r9,r9,r6
   4cdb0:	0005883a 	mov	r2,zero
   4cdb4:	003f1206 	br	4ca00 <__alt_data_end+0xfffdaa00>
   4cdb8:	0101ffc4 	movi	r4,2047
   4cdbc:	493f9c1e 	bne	r9,r4,4cc30 <__alt_data_end+0xfffdac30>
   4cdc0:	2807883a 	mov	r3,r5
   4cdc4:	3023883a 	mov	r17,r6
   4cdc8:	4821883a 	mov	r16,r9
   4cdcc:	3825883a 	mov	r18,r7
   4cdd0:	003e9106 	br	4c818 <__alt_data_end+0xfffda818>
   4cdd4:	80001f1e 	bne	r16,zero,4ce54 <__subdf3+0x6c0>
   4cdd8:	1c48b03a 	or	r4,r3,r17
   4cddc:	20005a26 	beq	r4,zero,4cf48 <__subdf3+0x7b4>
   4cde0:	0084303a 	nor	r2,zero,r2
   4cde4:	1000561e 	bne	r2,zero,4cf40 <__subdf3+0x7ac>
   4cde8:	89a3883a 	add	r17,r17,r6
   4cdec:	1945883a 	add	r2,r3,r5
   4cdf0:	898d803a 	cmpltu	r6,r17,r6
   4cdf4:	3087883a 	add	r3,r6,r2
   4cdf8:	4821883a 	mov	r16,r9
   4cdfc:	003f0506 	br	4ca14 <__alt_data_end+0xfffdaa14>
   4ce00:	10002b1e 	bne	r2,zero,4ceb0 <__subdf3+0x71c>
   4ce04:	2984b03a 	or	r2,r5,r6
   4ce08:	10008026 	beq	r2,zero,4d00c <__subdf3+0x878>
   4ce0c:	2807883a 	mov	r3,r5
   4ce10:	3023883a 	mov	r17,r6
   4ce14:	3825883a 	mov	r18,r7
   4ce18:	0401ffc4 	movi	r16,2047
   4ce1c:	003e7e06 	br	4c818 <__alt_data_end+0xfffda818>
   4ce20:	3809883a 	mov	r4,r7
   4ce24:	0011883a 	mov	r8,zero
   4ce28:	0005883a 	mov	r2,zero
   4ce2c:	003ee306 	br	4c9bc <__alt_data_end+0xfffda9bc>
   4ce30:	1c62b03a 	or	r17,r3,r17
   4ce34:	8822c03a 	cmpne	r17,r17,zero
   4ce38:	0005883a 	mov	r2,zero
   4ce3c:	003f8906 	br	4cc64 <__alt_data_end+0xfffdac64>
   4ce40:	3809883a 	mov	r4,r7
   4ce44:	4821883a 	mov	r16,r9
   4ce48:	0011883a 	mov	r8,zero
   4ce4c:	0005883a 	mov	r2,zero
   4ce50:	003eda06 	br	4c9bc <__alt_data_end+0xfffda9bc>
   4ce54:	0101ffc4 	movi	r4,2047
   4ce58:	49003b26 	beq	r9,r4,4cf48 <__subdf3+0x7b4>
   4ce5c:	0085c83a 	sub	r2,zero,r2
   4ce60:	18c02034 	orhi	r3,r3,128
   4ce64:	01000e04 	movi	r4,56
   4ce68:	20806e16 	blt	r4,r2,4d024 <__subdf3+0x890>
   4ce6c:	010007c4 	movi	r4,31
   4ce70:	20807716 	blt	r4,r2,4d050 <__subdf3+0x8bc>
   4ce74:	01000804 	movi	r4,32
   4ce78:	2089c83a 	sub	r4,r4,r2
   4ce7c:	1914983a 	sll	r10,r3,r4
   4ce80:	8890d83a 	srl	r8,r17,r2
   4ce84:	8908983a 	sll	r4,r17,r4
   4ce88:	1884d83a 	srl	r2,r3,r2
   4ce8c:	5222b03a 	or	r17,r10,r8
   4ce90:	2006c03a 	cmpne	r3,r4,zero
   4ce94:	88e2b03a 	or	r17,r17,r3
   4ce98:	89a3883a 	add	r17,r17,r6
   4ce9c:	1145883a 	add	r2,r2,r5
   4cea0:	898d803a 	cmpltu	r6,r17,r6
   4cea4:	3087883a 	add	r3,r6,r2
   4cea8:	4821883a 	mov	r16,r9
   4ceac:	003ed906 	br	4ca14 <__alt_data_end+0xfffdaa14>
   4ceb0:	2984b03a 	or	r2,r5,r6
   4ceb4:	10004226 	beq	r2,zero,4cfc0 <__subdf3+0x82c>
   4ceb8:	1808d0fa 	srli	r4,r3,3
   4cebc:	8822d0fa 	srli	r17,r17,3
   4cec0:	1806977a 	slli	r3,r3,29
   4cec4:	2080022c 	andhi	r2,r4,8
   4cec8:	1c62b03a 	or	r17,r3,r17
   4cecc:	10000826 	beq	r2,zero,4cef0 <__subdf3+0x75c>
   4ced0:	2812d0fa 	srli	r9,r5,3
   4ced4:	4880022c 	andhi	r2,r9,8
   4ced8:	1000051e 	bne	r2,zero,4cef0 <__subdf3+0x75c>
   4cedc:	300cd0fa 	srli	r6,r6,3
   4cee0:	2804977a 	slli	r2,r5,29
   4cee4:	4809883a 	mov	r4,r9
   4cee8:	3825883a 	mov	r18,r7
   4ceec:	11a2b03a 	or	r17,r2,r6
   4cef0:	8806d77a 	srli	r3,r17,29
   4cef4:	200890fa 	slli	r4,r4,3
   4cef8:	882290fa 	slli	r17,r17,3
   4cefc:	0401ffc4 	movi	r16,2047
   4cf00:	1906b03a 	or	r3,r3,r4
   4cf04:	003e4406 	br	4c818 <__alt_data_end+0xfffda818>
   4cf08:	2984b03a 	or	r2,r5,r6
   4cf0c:	103e4226 	beq	r2,zero,4c818 <__alt_data_end+0xfffda818>
   4cf10:	8989c83a 	sub	r4,r17,r6
   4cf14:	8911803a 	cmpltu	r8,r17,r4
   4cf18:	1945c83a 	sub	r2,r3,r5
   4cf1c:	1205c83a 	sub	r2,r2,r8
   4cf20:	1200202c 	andhi	r8,r2,128
   4cf24:	403e9a26 	beq	r8,zero,4c990 <__alt_data_end+0xfffda990>
   4cf28:	3463c83a 	sub	r17,r6,r17
   4cf2c:	28c5c83a 	sub	r2,r5,r3
   4cf30:	344d803a 	cmpltu	r6,r6,r17
   4cf34:	1187c83a 	sub	r3,r2,r6
   4cf38:	3825883a 	mov	r18,r7
   4cf3c:	003e3606 	br	4c818 <__alt_data_end+0xfffda818>
   4cf40:	0101ffc4 	movi	r4,2047
   4cf44:	493fc71e 	bne	r9,r4,4ce64 <__alt_data_end+0xfffdae64>
   4cf48:	2807883a 	mov	r3,r5
   4cf4c:	3023883a 	mov	r17,r6
   4cf50:	4821883a 	mov	r16,r9
   4cf54:	003e3006 	br	4c818 <__alt_data_end+0xfffda818>
   4cf58:	10003626 	beq	r2,zero,4d034 <__subdf3+0x8a0>
   4cf5c:	2984b03a 	or	r2,r5,r6
   4cf60:	10001726 	beq	r2,zero,4cfc0 <__subdf3+0x82c>
   4cf64:	1808d0fa 	srli	r4,r3,3
   4cf68:	8822d0fa 	srli	r17,r17,3
   4cf6c:	1806977a 	slli	r3,r3,29
   4cf70:	2080022c 	andhi	r2,r4,8
   4cf74:	1c62b03a 	or	r17,r3,r17
   4cf78:	10000726 	beq	r2,zero,4cf98 <__subdf3+0x804>
   4cf7c:	2812d0fa 	srli	r9,r5,3
   4cf80:	4880022c 	andhi	r2,r9,8
   4cf84:	1000041e 	bne	r2,zero,4cf98 <__subdf3+0x804>
   4cf88:	300cd0fa 	srli	r6,r6,3
   4cf8c:	2804977a 	slli	r2,r5,29
   4cf90:	4809883a 	mov	r4,r9
   4cf94:	11a2b03a 	or	r17,r2,r6
   4cf98:	8806d77a 	srli	r3,r17,29
   4cf9c:	200890fa 	slli	r4,r4,3
   4cfa0:	882290fa 	slli	r17,r17,3
   4cfa4:	3825883a 	mov	r18,r7
   4cfa8:	1906b03a 	or	r3,r3,r4
   4cfac:	0401ffc4 	movi	r16,2047
   4cfb0:	003e1906 	br	4c818 <__alt_data_end+0xfffda818>
   4cfb4:	000b883a 	mov	r5,zero
   4cfb8:	0005883a 	mov	r2,zero
   4cfbc:	003e2e06 	br	4c878 <__alt_data_end+0xfffda878>
   4cfc0:	0401ffc4 	movi	r16,2047
   4cfc4:	003e1406 	br	4c818 <__alt_data_end+0xfffda818>
   4cfc8:	0005883a 	mov	r2,zero
   4cfcc:	003f7506 	br	4cda4 <__alt_data_end+0xfffdada4>
   4cfd0:	0005883a 	mov	r2,zero
   4cfd4:	0009883a 	mov	r4,zero
   4cfd8:	003e7806 	br	4c9bc <__alt_data_end+0xfffda9bc>
   4cfdc:	123ff804 	addi	r8,r2,-32
   4cfe0:	01000804 	movi	r4,32
   4cfe4:	1a10d83a 	srl	r8,r3,r8
   4cfe8:	11002526 	beq	r2,r4,4d080 <__subdf3+0x8ec>
   4cfec:	01001004 	movi	r4,64
   4cff0:	2085c83a 	sub	r2,r4,r2
   4cff4:	1884983a 	sll	r2,r3,r2
   4cff8:	1444b03a 	or	r2,r2,r17
   4cffc:	1004c03a 	cmpne	r2,r2,zero
   4d000:	40a2b03a 	or	r17,r8,r2
   4d004:	0005883a 	mov	r2,zero
   4d008:	003f1606 	br	4cc64 <__alt_data_end+0xfffdac64>
   4d00c:	02000434 	movhi	r8,16
   4d010:	0009883a 	mov	r4,zero
   4d014:	423fffc4 	addi	r8,r8,-1
   4d018:	00bfffc4 	movi	r2,-1
   4d01c:	0401ffc4 	movi	r16,2047
   4d020:	003e6606 	br	4c9bc <__alt_data_end+0xfffda9bc>
   4d024:	1c62b03a 	or	r17,r3,r17
   4d028:	8822c03a 	cmpne	r17,r17,zero
   4d02c:	0005883a 	mov	r2,zero
   4d030:	003f9906 	br	4ce98 <__alt_data_end+0xfffdae98>
   4d034:	2807883a 	mov	r3,r5
   4d038:	3023883a 	mov	r17,r6
   4d03c:	0401ffc4 	movi	r16,2047
   4d040:	003df506 	br	4c818 <__alt_data_end+0xfffda818>
   4d044:	2807883a 	mov	r3,r5
   4d048:	3023883a 	mov	r17,r6
   4d04c:	003df206 	br	4c818 <__alt_data_end+0xfffda818>
   4d050:	123ff804 	addi	r8,r2,-32
   4d054:	01000804 	movi	r4,32
   4d058:	1a10d83a 	srl	r8,r3,r8
   4d05c:	11000a26 	beq	r2,r4,4d088 <__subdf3+0x8f4>
   4d060:	01001004 	movi	r4,64
   4d064:	2085c83a 	sub	r2,r4,r2
   4d068:	1884983a 	sll	r2,r3,r2
   4d06c:	1444b03a 	or	r2,r2,r17
   4d070:	1004c03a 	cmpne	r2,r2,zero
   4d074:	40a2b03a 	or	r17,r8,r2
   4d078:	0005883a 	mov	r2,zero
   4d07c:	003f8606 	br	4ce98 <__alt_data_end+0xfffdae98>
   4d080:	0005883a 	mov	r2,zero
   4d084:	003fdc06 	br	4cff8 <__alt_data_end+0xfffdaff8>
   4d088:	0005883a 	mov	r2,zero
   4d08c:	003ff706 	br	4d06c <__alt_data_end+0xfffdb06c>

0004d090 <__fixdfsi>:
   4d090:	280cd53a 	srli	r6,r5,20
   4d094:	00c00434 	movhi	r3,16
   4d098:	18ffffc4 	addi	r3,r3,-1
   4d09c:	3181ffcc 	andi	r6,r6,2047
   4d0a0:	01c0ff84 	movi	r7,1022
   4d0a4:	28c6703a 	and	r3,r5,r3
   4d0a8:	280ad7fa 	srli	r5,r5,31
   4d0ac:	3980120e 	bge	r7,r6,4d0f8 <__fixdfsi+0x68>
   4d0b0:	00810744 	movi	r2,1053
   4d0b4:	11800c16 	blt	r2,r6,4d0e8 <__fixdfsi+0x58>
   4d0b8:	00810cc4 	movi	r2,1075
   4d0bc:	1185c83a 	sub	r2,r2,r6
   4d0c0:	01c007c4 	movi	r7,31
   4d0c4:	18c00434 	orhi	r3,r3,16
   4d0c8:	38800d16 	blt	r7,r2,4d100 <__fixdfsi+0x70>
   4d0cc:	31befb44 	addi	r6,r6,-1043
   4d0d0:	2084d83a 	srl	r2,r4,r2
   4d0d4:	1986983a 	sll	r3,r3,r6
   4d0d8:	1884b03a 	or	r2,r3,r2
   4d0dc:	28000726 	beq	r5,zero,4d0fc <__fixdfsi+0x6c>
   4d0e0:	0085c83a 	sub	r2,zero,r2
   4d0e4:	f800283a 	ret
   4d0e8:	00a00034 	movhi	r2,32768
   4d0ec:	10bfffc4 	addi	r2,r2,-1
   4d0f0:	2885883a 	add	r2,r5,r2
   4d0f4:	f800283a 	ret
   4d0f8:	0005883a 	mov	r2,zero
   4d0fc:	f800283a 	ret
   4d100:	008104c4 	movi	r2,1043
   4d104:	1185c83a 	sub	r2,r2,r6
   4d108:	1884d83a 	srl	r2,r3,r2
   4d10c:	003ff306 	br	4d0dc <__alt_data_end+0xfffdb0dc>

0004d110 <__floatsidf>:
   4d110:	defffd04 	addi	sp,sp,-12
   4d114:	dfc00215 	stw	ra,8(sp)
   4d118:	dc400115 	stw	r17,4(sp)
   4d11c:	dc000015 	stw	r16,0(sp)
   4d120:	20002b26 	beq	r4,zero,4d1d0 <__floatsidf+0xc0>
   4d124:	2023883a 	mov	r17,r4
   4d128:	2020d7fa 	srli	r16,r4,31
   4d12c:	20002d16 	blt	r4,zero,4d1e4 <__floatsidf+0xd4>
   4d130:	8809883a 	mov	r4,r17
   4d134:	004d2940 	call	4d294 <__clzsi2>
   4d138:	01410784 	movi	r5,1054
   4d13c:	288bc83a 	sub	r5,r5,r2
   4d140:	01010cc4 	movi	r4,1075
   4d144:	2149c83a 	sub	r4,r4,r5
   4d148:	00c007c4 	movi	r3,31
   4d14c:	1900160e 	bge	r3,r4,4d1a8 <__floatsidf+0x98>
   4d150:	00c104c4 	movi	r3,1043
   4d154:	1947c83a 	sub	r3,r3,r5
   4d158:	88c6983a 	sll	r3,r17,r3
   4d15c:	00800434 	movhi	r2,16
   4d160:	10bfffc4 	addi	r2,r2,-1
   4d164:	1886703a 	and	r3,r3,r2
   4d168:	2941ffcc 	andi	r5,r5,2047
   4d16c:	800d883a 	mov	r6,r16
   4d170:	0005883a 	mov	r2,zero
   4d174:	280a953a 	slli	r5,r5,20
   4d178:	31803fcc 	andi	r6,r6,255
   4d17c:	01000434 	movhi	r4,16
   4d180:	300c97fa 	slli	r6,r6,31
   4d184:	213fffc4 	addi	r4,r4,-1
   4d188:	1906703a 	and	r3,r3,r4
   4d18c:	1946b03a 	or	r3,r3,r5
   4d190:	1986b03a 	or	r3,r3,r6
   4d194:	dfc00217 	ldw	ra,8(sp)
   4d198:	dc400117 	ldw	r17,4(sp)
   4d19c:	dc000017 	ldw	r16,0(sp)
   4d1a0:	dec00304 	addi	sp,sp,12
   4d1a4:	f800283a 	ret
   4d1a8:	00c002c4 	movi	r3,11
   4d1ac:	1887c83a 	sub	r3,r3,r2
   4d1b0:	88c6d83a 	srl	r3,r17,r3
   4d1b4:	8904983a 	sll	r2,r17,r4
   4d1b8:	01000434 	movhi	r4,16
   4d1bc:	213fffc4 	addi	r4,r4,-1
   4d1c0:	2941ffcc 	andi	r5,r5,2047
   4d1c4:	1906703a 	and	r3,r3,r4
   4d1c8:	800d883a 	mov	r6,r16
   4d1cc:	003fe906 	br	4d174 <__alt_data_end+0xfffdb174>
   4d1d0:	000d883a 	mov	r6,zero
   4d1d4:	000b883a 	mov	r5,zero
   4d1d8:	0007883a 	mov	r3,zero
   4d1dc:	0005883a 	mov	r2,zero
   4d1e0:	003fe406 	br	4d174 <__alt_data_end+0xfffdb174>
   4d1e4:	0123c83a 	sub	r17,zero,r4
   4d1e8:	003fd106 	br	4d130 <__alt_data_end+0xfffdb130>

0004d1ec <__floatunsidf>:
   4d1ec:	defffe04 	addi	sp,sp,-8
   4d1f0:	dc000015 	stw	r16,0(sp)
   4d1f4:	dfc00115 	stw	ra,4(sp)
   4d1f8:	2021883a 	mov	r16,r4
   4d1fc:	20002226 	beq	r4,zero,4d288 <__floatunsidf+0x9c>
   4d200:	004d2940 	call	4d294 <__clzsi2>
   4d204:	01010784 	movi	r4,1054
   4d208:	2089c83a 	sub	r4,r4,r2
   4d20c:	01810cc4 	movi	r6,1075
   4d210:	310dc83a 	sub	r6,r6,r4
   4d214:	00c007c4 	movi	r3,31
   4d218:	1980120e 	bge	r3,r6,4d264 <__floatunsidf+0x78>
   4d21c:	00c104c4 	movi	r3,1043
   4d220:	1907c83a 	sub	r3,r3,r4
   4d224:	80ca983a 	sll	r5,r16,r3
   4d228:	00800434 	movhi	r2,16
   4d22c:	10bfffc4 	addi	r2,r2,-1
   4d230:	2101ffcc 	andi	r4,r4,2047
   4d234:	0021883a 	mov	r16,zero
   4d238:	288a703a 	and	r5,r5,r2
   4d23c:	2008953a 	slli	r4,r4,20
   4d240:	00c00434 	movhi	r3,16
   4d244:	18ffffc4 	addi	r3,r3,-1
   4d248:	28c6703a 	and	r3,r5,r3
   4d24c:	8005883a 	mov	r2,r16
   4d250:	1906b03a 	or	r3,r3,r4
   4d254:	dfc00117 	ldw	ra,4(sp)
   4d258:	dc000017 	ldw	r16,0(sp)
   4d25c:	dec00204 	addi	sp,sp,8
   4d260:	f800283a 	ret
   4d264:	00c002c4 	movi	r3,11
   4d268:	188bc83a 	sub	r5,r3,r2
   4d26c:	814ad83a 	srl	r5,r16,r5
   4d270:	00c00434 	movhi	r3,16
   4d274:	18ffffc4 	addi	r3,r3,-1
   4d278:	81a0983a 	sll	r16,r16,r6
   4d27c:	2101ffcc 	andi	r4,r4,2047
   4d280:	28ca703a 	and	r5,r5,r3
   4d284:	003fed06 	br	4d23c <__alt_data_end+0xfffdb23c>
   4d288:	0009883a 	mov	r4,zero
   4d28c:	000b883a 	mov	r5,zero
   4d290:	003fea06 	br	4d23c <__alt_data_end+0xfffdb23c>

0004d294 <__clzsi2>:
   4d294:	00bfffd4 	movui	r2,65535
   4d298:	11000536 	bltu	r2,r4,4d2b0 <__clzsi2+0x1c>
   4d29c:	00803fc4 	movi	r2,255
   4d2a0:	11000f36 	bltu	r2,r4,4d2e0 <__clzsi2+0x4c>
   4d2a4:	00800804 	movi	r2,32
   4d2a8:	0007883a 	mov	r3,zero
   4d2ac:	00000506 	br	4d2c4 <__clzsi2+0x30>
   4d2b0:	00804034 	movhi	r2,256
   4d2b4:	10bfffc4 	addi	r2,r2,-1
   4d2b8:	11000c2e 	bgeu	r2,r4,4d2ec <__clzsi2+0x58>
   4d2bc:	00800204 	movi	r2,8
   4d2c0:	00c00604 	movi	r3,24
   4d2c4:	20c8d83a 	srl	r4,r4,r3
   4d2c8:	00c00174 	movhi	r3,5
   4d2cc:	18ff4704 	addi	r3,r3,-740
   4d2d0:	1909883a 	add	r4,r3,r4
   4d2d4:	20c00003 	ldbu	r3,0(r4)
   4d2d8:	10c5c83a 	sub	r2,r2,r3
   4d2dc:	f800283a 	ret
   4d2e0:	00800604 	movi	r2,24
   4d2e4:	00c00204 	movi	r3,8
   4d2e8:	003ff606 	br	4d2c4 <__alt_data_end+0xfffdb2c4>
   4d2ec:	00800404 	movi	r2,16
   4d2f0:	1007883a 	mov	r3,r2
   4d2f4:	003ff306 	br	4d2c4 <__alt_data_end+0xfffdb2c4>

0004d2f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d2f8:	defffe04 	addi	sp,sp,-8
   4d2fc:	dfc00115 	stw	ra,4(sp)
   4d300:	df000015 	stw	fp,0(sp)
   4d304:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d308:	d0a00b17 	ldw	r2,-32724(gp)
   4d30c:	10000326 	beq	r2,zero,4d31c <alt_get_errno+0x24>
   4d310:	d0a00b17 	ldw	r2,-32724(gp)
   4d314:	103ee83a 	callr	r2
   4d318:	00000106 	br	4d320 <alt_get_errno+0x28>
   4d31c:	d0a6d304 	addi	r2,gp,-25780
}
   4d320:	e037883a 	mov	sp,fp
   4d324:	dfc00117 	ldw	ra,4(sp)
   4d328:	df000017 	ldw	fp,0(sp)
   4d32c:	dec00204 	addi	sp,sp,8
   4d330:	f800283a 	ret

0004d334 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4d334:	defffb04 	addi	sp,sp,-20
   4d338:	dfc00415 	stw	ra,16(sp)
   4d33c:	df000315 	stw	fp,12(sp)
   4d340:	df000304 	addi	fp,sp,12
   4d344:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4d348:	e0bfff17 	ldw	r2,-4(fp)
   4d34c:	10000816 	blt	r2,zero,4d370 <close+0x3c>
   4d350:	01400304 	movi	r5,12
   4d354:	e13fff17 	ldw	r4,-4(fp)
   4d358:	004aa2c0 	call	4aa2c <__mulsi3>
   4d35c:	1007883a 	mov	r3,r2
   4d360:	00800174 	movhi	r2,5
   4d364:	1081c304 	addi	r2,r2,1804
   4d368:	1885883a 	add	r2,r3,r2
   4d36c:	00000106 	br	4d374 <close+0x40>
   4d370:	0005883a 	mov	r2,zero
   4d374:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4d378:	e0bffd17 	ldw	r2,-12(fp)
   4d37c:	10001926 	beq	r2,zero,4d3e4 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4d380:	e0bffd17 	ldw	r2,-12(fp)
   4d384:	10800017 	ldw	r2,0(r2)
   4d388:	10800417 	ldw	r2,16(r2)
   4d38c:	10000626 	beq	r2,zero,4d3a8 <close+0x74>
   4d390:	e0bffd17 	ldw	r2,-12(fp)
   4d394:	10800017 	ldw	r2,0(r2)
   4d398:	10800417 	ldw	r2,16(r2)
   4d39c:	e13ffd17 	ldw	r4,-12(fp)
   4d3a0:	103ee83a 	callr	r2
   4d3a4:	00000106 	br	4d3ac <close+0x78>
   4d3a8:	0005883a 	mov	r2,zero
   4d3ac:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4d3b0:	e13fff17 	ldw	r4,-4(fp)
   4d3b4:	004dcbc0 	call	4dcbc <alt_release_fd>
    if (rval < 0)
   4d3b8:	e0bffe17 	ldw	r2,-8(fp)
   4d3bc:	1000070e 	bge	r2,zero,4d3dc <close+0xa8>
    {
      ALT_ERRNO = -rval;
   4d3c0:	004d2f80 	call	4d2f8 <alt_get_errno>
   4d3c4:	1007883a 	mov	r3,r2
   4d3c8:	e0bffe17 	ldw	r2,-8(fp)
   4d3cc:	0085c83a 	sub	r2,zero,r2
   4d3d0:	18800015 	stw	r2,0(r3)
      return -1;
   4d3d4:	00bfffc4 	movi	r2,-1
   4d3d8:	00000706 	br	4d3f8 <close+0xc4>
    }
    return 0;
   4d3dc:	0005883a 	mov	r2,zero
   4d3e0:	00000506 	br	4d3f8 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d3e4:	004d2f80 	call	4d2f8 <alt_get_errno>
   4d3e8:	1007883a 	mov	r3,r2
   4d3ec:	00801444 	movi	r2,81
   4d3f0:	18800015 	stw	r2,0(r3)
    return -1;
   4d3f4:	00bfffc4 	movi	r2,-1
  }
}
   4d3f8:	e037883a 	mov	sp,fp
   4d3fc:	dfc00117 	ldw	ra,4(sp)
   4d400:	df000017 	ldw	fp,0(sp)
   4d404:	dec00204 	addi	sp,sp,8
   4d408:	f800283a 	ret

0004d40c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4d40c:	defffc04 	addi	sp,sp,-16
   4d410:	df000315 	stw	fp,12(sp)
   4d414:	df000304 	addi	fp,sp,12
   4d418:	e13ffd15 	stw	r4,-12(fp)
   4d41c:	e17ffe15 	stw	r5,-8(fp)
   4d420:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4d424:	e0bfff17 	ldw	r2,-4(fp)
}
   4d428:	e037883a 	mov	sp,fp
   4d42c:	df000017 	ldw	fp,0(sp)
   4d430:	dec00104 	addi	sp,sp,4
   4d434:	f800283a 	ret

0004d438 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d438:	defffe04 	addi	sp,sp,-8
   4d43c:	dfc00115 	stw	ra,4(sp)
   4d440:	df000015 	stw	fp,0(sp)
   4d444:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d448:	d0a00b17 	ldw	r2,-32724(gp)
   4d44c:	10000326 	beq	r2,zero,4d45c <alt_get_errno+0x24>
   4d450:	d0a00b17 	ldw	r2,-32724(gp)
   4d454:	103ee83a 	callr	r2
   4d458:	00000106 	br	4d460 <alt_get_errno+0x28>
   4d45c:	d0a6d304 	addi	r2,gp,-25780
}
   4d460:	e037883a 	mov	sp,fp
   4d464:	dfc00117 	ldw	ra,4(sp)
   4d468:	df000017 	ldw	fp,0(sp)
   4d46c:	dec00204 	addi	sp,sp,8
   4d470:	f800283a 	ret

0004d474 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4d474:	defffb04 	addi	sp,sp,-20
   4d478:	dfc00415 	stw	ra,16(sp)
   4d47c:	df000315 	stw	fp,12(sp)
   4d480:	df000304 	addi	fp,sp,12
   4d484:	e13ffe15 	stw	r4,-8(fp)
   4d488:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d48c:	e0bffe17 	ldw	r2,-8(fp)
   4d490:	10000816 	blt	r2,zero,4d4b4 <fstat+0x40>
   4d494:	01400304 	movi	r5,12
   4d498:	e13ffe17 	ldw	r4,-8(fp)
   4d49c:	004aa2c0 	call	4aa2c <__mulsi3>
   4d4a0:	1007883a 	mov	r3,r2
   4d4a4:	00800174 	movhi	r2,5
   4d4a8:	1081c304 	addi	r2,r2,1804
   4d4ac:	1885883a 	add	r2,r3,r2
   4d4b0:	00000106 	br	4d4b8 <fstat+0x44>
   4d4b4:	0005883a 	mov	r2,zero
   4d4b8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4d4bc:	e0bffd17 	ldw	r2,-12(fp)
   4d4c0:	10001026 	beq	r2,zero,4d504 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4d4c4:	e0bffd17 	ldw	r2,-12(fp)
   4d4c8:	10800017 	ldw	r2,0(r2)
   4d4cc:	10800817 	ldw	r2,32(r2)
   4d4d0:	10000726 	beq	r2,zero,4d4f0 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
   4d4d4:	e0bffd17 	ldw	r2,-12(fp)
   4d4d8:	10800017 	ldw	r2,0(r2)
   4d4dc:	10800817 	ldw	r2,32(r2)
   4d4e0:	e17fff17 	ldw	r5,-4(fp)
   4d4e4:	e13ffd17 	ldw	r4,-12(fp)
   4d4e8:	103ee83a 	callr	r2
   4d4ec:	00000a06 	br	4d518 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4d4f0:	e0bfff17 	ldw	r2,-4(fp)
   4d4f4:	00c80004 	movi	r3,8192
   4d4f8:	10c00115 	stw	r3,4(r2)
      return 0;
   4d4fc:	0005883a 	mov	r2,zero
   4d500:	00000506 	br	4d518 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d504:	004d4380 	call	4d438 <alt_get_errno>
   4d508:	1007883a 	mov	r3,r2
   4d50c:	00801444 	movi	r2,81
   4d510:	18800015 	stw	r2,0(r3)
    return -1;
   4d514:	00bfffc4 	movi	r2,-1
  }
}
   4d518:	e037883a 	mov	sp,fp
   4d51c:	dfc00117 	ldw	ra,4(sp)
   4d520:	df000017 	ldw	fp,0(sp)
   4d524:	dec00204 	addi	sp,sp,8
   4d528:	f800283a 	ret

0004d52c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4d52c:	defff904 	addi	sp,sp,-28
   4d530:	dfc00615 	stw	ra,24(sp)
   4d534:	df000515 	stw	fp,20(sp)
   4d538:	df000504 	addi	fp,sp,20
   4d53c:	e13ffc15 	stw	r4,-16(fp)
   4d540:	e17ffd15 	stw	r5,-12(fp)
   4d544:	e1bffe15 	stw	r6,-8(fp)
   4d548:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4d54c:	e0800217 	ldw	r2,8(fp)
   4d550:	d8800015 	stw	r2,0(sp)
   4d554:	e1ffff17 	ldw	r7,-4(fp)
   4d558:	e1bffe17 	ldw	r6,-8(fp)
   4d55c:	e17ffd17 	ldw	r5,-12(fp)
   4d560:	e13ffc17 	ldw	r4,-16(fp)
   4d564:	004d6dc0 	call	4d6dc <alt_iic_isr_register>
}  
   4d568:	e037883a 	mov	sp,fp
   4d56c:	dfc00117 	ldw	ra,4(sp)
   4d570:	df000017 	ldw	fp,0(sp)
   4d574:	dec00204 	addi	sp,sp,8
   4d578:	f800283a 	ret

0004d57c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4d57c:	defff904 	addi	sp,sp,-28
   4d580:	df000615 	stw	fp,24(sp)
   4d584:	df000604 	addi	fp,sp,24
   4d588:	e13ffe15 	stw	r4,-8(fp)
   4d58c:	e17fff15 	stw	r5,-4(fp)
   4d590:	e0bfff17 	ldw	r2,-4(fp)
   4d594:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d598:	0005303a 	rdctl	r2,status
   4d59c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d5a0:	e0fffb17 	ldw	r3,-20(fp)
   4d5a4:	00bfff84 	movi	r2,-2
   4d5a8:	1884703a 	and	r2,r3,r2
   4d5ac:	1001703a 	wrctl	status,r2
  
  return context;
   4d5b0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4d5b4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   4d5b8:	00c00044 	movi	r3,1
   4d5bc:	e0bffa17 	ldw	r2,-24(fp)
   4d5c0:	1884983a 	sll	r2,r3,r2
   4d5c4:	1007883a 	mov	r3,r2
   4d5c8:	d0a6d417 	ldw	r2,-25776(gp)
   4d5cc:	1884b03a 	or	r2,r3,r2
   4d5d0:	d0a6d415 	stw	r2,-25776(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4d5d4:	d0a6d417 	ldw	r2,-25776(gp)
   4d5d8:	100170fa 	wrctl	ienable,r2
   4d5dc:	e0bffc17 	ldw	r2,-16(fp)
   4d5e0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4d5e4:	e0bffd17 	ldw	r2,-12(fp)
   4d5e8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4d5ec:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   4d5f0:	0001883a 	nop
}
   4d5f4:	e037883a 	mov	sp,fp
   4d5f8:	df000017 	ldw	fp,0(sp)
   4d5fc:	dec00104 	addi	sp,sp,4
   4d600:	f800283a 	ret

0004d604 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4d604:	defff904 	addi	sp,sp,-28
   4d608:	df000615 	stw	fp,24(sp)
   4d60c:	df000604 	addi	fp,sp,24
   4d610:	e13ffe15 	stw	r4,-8(fp)
   4d614:	e17fff15 	stw	r5,-4(fp)
   4d618:	e0bfff17 	ldw	r2,-4(fp)
   4d61c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d620:	0005303a 	rdctl	r2,status
   4d624:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d628:	e0fffb17 	ldw	r3,-20(fp)
   4d62c:	00bfff84 	movi	r2,-2
   4d630:	1884703a 	and	r2,r3,r2
   4d634:	1001703a 	wrctl	status,r2
  
  return context;
   4d638:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4d63c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   4d640:	00c00044 	movi	r3,1
   4d644:	e0bffa17 	ldw	r2,-24(fp)
   4d648:	1884983a 	sll	r2,r3,r2
   4d64c:	0084303a 	nor	r2,zero,r2
   4d650:	1007883a 	mov	r3,r2
   4d654:	d0a6d417 	ldw	r2,-25776(gp)
   4d658:	1884703a 	and	r2,r3,r2
   4d65c:	d0a6d415 	stw	r2,-25776(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4d660:	d0a6d417 	ldw	r2,-25776(gp)
   4d664:	100170fa 	wrctl	ienable,r2
   4d668:	e0bffc17 	ldw	r2,-16(fp)
   4d66c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4d670:	e0bffd17 	ldw	r2,-12(fp)
   4d674:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4d678:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   4d67c:	0001883a 	nop
}
   4d680:	e037883a 	mov	sp,fp
   4d684:	df000017 	ldw	fp,0(sp)
   4d688:	dec00104 	addi	sp,sp,4
   4d68c:	f800283a 	ret

0004d690 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4d690:	defffc04 	addi	sp,sp,-16
   4d694:	df000315 	stw	fp,12(sp)
   4d698:	df000304 	addi	fp,sp,12
   4d69c:	e13ffe15 	stw	r4,-8(fp)
   4d6a0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4d6a4:	000530fa 	rdctl	r2,ienable
   4d6a8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4d6ac:	00c00044 	movi	r3,1
   4d6b0:	e0bfff17 	ldw	r2,-4(fp)
   4d6b4:	1884983a 	sll	r2,r3,r2
   4d6b8:	1007883a 	mov	r3,r2
   4d6bc:	e0bffd17 	ldw	r2,-12(fp)
   4d6c0:	1884703a 	and	r2,r3,r2
   4d6c4:	1004c03a 	cmpne	r2,r2,zero
   4d6c8:	10803fcc 	andi	r2,r2,255
}
   4d6cc:	e037883a 	mov	sp,fp
   4d6d0:	df000017 	ldw	fp,0(sp)
   4d6d4:	dec00104 	addi	sp,sp,4
   4d6d8:	f800283a 	ret

0004d6dc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4d6dc:	defff504 	addi	sp,sp,-44
   4d6e0:	dfc00a15 	stw	ra,40(sp)
   4d6e4:	df000915 	stw	fp,36(sp)
   4d6e8:	df000904 	addi	fp,sp,36
   4d6ec:	e13ffc15 	stw	r4,-16(fp)
   4d6f0:	e17ffd15 	stw	r5,-12(fp)
   4d6f4:	e1bffe15 	stw	r6,-8(fp)
   4d6f8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   4d6fc:	00bffa84 	movi	r2,-22
   4d700:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4d704:	e0bffd17 	ldw	r2,-12(fp)
   4d708:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4d70c:	e0bff817 	ldw	r2,-32(fp)
   4d710:	10800808 	cmpgei	r2,r2,32
   4d714:	1000271e 	bne	r2,zero,4d7b4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d718:	0005303a 	rdctl	r2,status
   4d71c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d720:	e0fffb17 	ldw	r3,-20(fp)
   4d724:	00bfff84 	movi	r2,-2
   4d728:	1884703a 	and	r2,r3,r2
   4d72c:	1001703a 	wrctl	status,r2
  
  return context;
   4d730:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4d734:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   4d738:	00800174 	movhi	r2,5
   4d73c:	108d2004 	addi	r2,r2,13440
   4d740:	e0fff817 	ldw	r3,-32(fp)
   4d744:	180690fa 	slli	r3,r3,3
   4d748:	10c5883a 	add	r2,r2,r3
   4d74c:	e0fffe17 	ldw	r3,-8(fp)
   4d750:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   4d754:	00800174 	movhi	r2,5
   4d758:	108d2004 	addi	r2,r2,13440
   4d75c:	e0fff817 	ldw	r3,-32(fp)
   4d760:	180690fa 	slli	r3,r3,3
   4d764:	10c5883a 	add	r2,r2,r3
   4d768:	10800104 	addi	r2,r2,4
   4d76c:	e0ffff17 	ldw	r3,-4(fp)
   4d770:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4d774:	e0bffe17 	ldw	r2,-8(fp)
   4d778:	10000526 	beq	r2,zero,4d790 <alt_iic_isr_register+0xb4>
   4d77c:	e0bff817 	ldw	r2,-32(fp)
   4d780:	100b883a 	mov	r5,r2
   4d784:	e13ffc17 	ldw	r4,-16(fp)
   4d788:	004d57c0 	call	4d57c <alt_ic_irq_enable>
   4d78c:	00000406 	br	4d7a0 <alt_iic_isr_register+0xc4>
   4d790:	e0bff817 	ldw	r2,-32(fp)
   4d794:	100b883a 	mov	r5,r2
   4d798:	e13ffc17 	ldw	r4,-16(fp)
   4d79c:	004d6040 	call	4d604 <alt_ic_irq_disable>
   4d7a0:	e0bff715 	stw	r2,-36(fp)
   4d7a4:	e0bffa17 	ldw	r2,-24(fp)
   4d7a8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4d7ac:	e0bff917 	ldw	r2,-28(fp)
   4d7b0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   4d7b4:	e0bff717 	ldw	r2,-36(fp)
}
   4d7b8:	e037883a 	mov	sp,fp
   4d7bc:	dfc00117 	ldw	ra,4(sp)
   4d7c0:	df000017 	ldw	fp,0(sp)
   4d7c4:	dec00204 	addi	sp,sp,8
   4d7c8:	f800283a 	ret

0004d7cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d7cc:	defffe04 	addi	sp,sp,-8
   4d7d0:	dfc00115 	stw	ra,4(sp)
   4d7d4:	df000015 	stw	fp,0(sp)
   4d7d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d7dc:	d0a00b17 	ldw	r2,-32724(gp)
   4d7e0:	10000326 	beq	r2,zero,4d7f0 <alt_get_errno+0x24>
   4d7e4:	d0a00b17 	ldw	r2,-32724(gp)
   4d7e8:	103ee83a 	callr	r2
   4d7ec:	00000106 	br	4d7f4 <alt_get_errno+0x28>
   4d7f0:	d0a6d304 	addi	r2,gp,-25780
}
   4d7f4:	e037883a 	mov	sp,fp
   4d7f8:	dfc00117 	ldw	ra,4(sp)
   4d7fc:	df000017 	ldw	fp,0(sp)
   4d800:	dec00204 	addi	sp,sp,8
   4d804:	f800283a 	ret

0004d808 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4d808:	deffed04 	addi	sp,sp,-76
   4d80c:	dfc01215 	stw	ra,72(sp)
   4d810:	df001115 	stw	fp,68(sp)
   4d814:	df001104 	addi	fp,sp,68
   4d818:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d81c:	e0bfff17 	ldw	r2,-4(fp)
   4d820:	10000816 	blt	r2,zero,4d844 <isatty+0x3c>
   4d824:	01400304 	movi	r5,12
   4d828:	e13fff17 	ldw	r4,-4(fp)
   4d82c:	004aa2c0 	call	4aa2c <__mulsi3>
   4d830:	1007883a 	mov	r3,r2
   4d834:	00800174 	movhi	r2,5
   4d838:	1081c304 	addi	r2,r2,1804
   4d83c:	1885883a 	add	r2,r3,r2
   4d840:	00000106 	br	4d848 <isatty+0x40>
   4d844:	0005883a 	mov	r2,zero
   4d848:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4d84c:	e0bfef17 	ldw	r2,-68(fp)
   4d850:	10000e26 	beq	r2,zero,4d88c <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4d854:	e0bfef17 	ldw	r2,-68(fp)
   4d858:	10800017 	ldw	r2,0(r2)
   4d85c:	10800817 	ldw	r2,32(r2)
   4d860:	1000021e 	bne	r2,zero,4d86c <isatty+0x64>
    {
      return 1;
   4d864:	00800044 	movi	r2,1
   4d868:	00000d06 	br	4d8a0 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4d86c:	e0bff004 	addi	r2,fp,-64
   4d870:	100b883a 	mov	r5,r2
   4d874:	e13fff17 	ldw	r4,-4(fp)
   4d878:	004d4740 	call	4d474 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4d87c:	e0bff117 	ldw	r2,-60(fp)
   4d880:	10880020 	cmpeqi	r2,r2,8192
   4d884:	10803fcc 	andi	r2,r2,255
   4d888:	00000506 	br	4d8a0 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d88c:	004d7cc0 	call	4d7cc <alt_get_errno>
   4d890:	1007883a 	mov	r3,r2
   4d894:	00801444 	movi	r2,81
   4d898:	18800015 	stw	r2,0(r3)
    return 0;
   4d89c:	0005883a 	mov	r2,zero
  }
}
   4d8a0:	e037883a 	mov	sp,fp
   4d8a4:	dfc00117 	ldw	ra,4(sp)
   4d8a8:	df000017 	ldw	fp,0(sp)
   4d8ac:	dec00204 	addi	sp,sp,8
   4d8b0:	f800283a 	ret

0004d8b4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4d8b4:	defffc04 	addi	sp,sp,-16
   4d8b8:	df000315 	stw	fp,12(sp)
   4d8bc:	df000304 	addi	fp,sp,12
   4d8c0:	e13ffd15 	stw	r4,-12(fp)
   4d8c4:	e17ffe15 	stw	r5,-8(fp)
   4d8c8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4d8cc:	e0fffe17 	ldw	r3,-8(fp)
   4d8d0:	e0bffd17 	ldw	r2,-12(fp)
   4d8d4:	18800c26 	beq	r3,r2,4d908 <alt_load_section+0x54>
  {
    while( to != end )
   4d8d8:	00000806 	br	4d8fc <alt_load_section+0x48>
    {
      *to++ = *from++;
   4d8dc:	e0bffe17 	ldw	r2,-8(fp)
   4d8e0:	10c00104 	addi	r3,r2,4
   4d8e4:	e0fffe15 	stw	r3,-8(fp)
   4d8e8:	e0fffd17 	ldw	r3,-12(fp)
   4d8ec:	19000104 	addi	r4,r3,4
   4d8f0:	e13ffd15 	stw	r4,-12(fp)
   4d8f4:	18c00017 	ldw	r3,0(r3)
   4d8f8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4d8fc:	e0fffe17 	ldw	r3,-8(fp)
   4d900:	e0bfff17 	ldw	r2,-4(fp)
   4d904:	18bff51e 	bne	r3,r2,4d8dc <__alt_data_end+0xfffdb8dc>
    {
      *to++ = *from++;
    }
  }
}
   4d908:	0001883a 	nop
   4d90c:	e037883a 	mov	sp,fp
   4d910:	df000017 	ldw	fp,0(sp)
   4d914:	dec00104 	addi	sp,sp,4
   4d918:	f800283a 	ret

0004d91c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4d91c:	defffe04 	addi	sp,sp,-8
   4d920:	dfc00115 	stw	ra,4(sp)
   4d924:	df000015 	stw	fp,0(sp)
   4d928:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4d92c:	01800174 	movhi	r6,5
   4d930:	31864b04 	addi	r6,r6,6444
   4d934:	01400174 	movhi	r5,5
   4d938:	297f9004 	addi	r5,r5,-448
   4d93c:	01000174 	movhi	r4,5
   4d940:	21064b04 	addi	r4,r4,6444
   4d944:	004d8b40 	call	4d8b4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4d948:	01800134 	movhi	r6,4
   4d94c:	31808c04 	addi	r6,r6,560
   4d950:	01400134 	movhi	r5,4
   4d954:	29400804 	addi	r5,r5,32
   4d958:	01000134 	movhi	r4,4
   4d95c:	21000804 	addi	r4,r4,32
   4d960:	004d8b40 	call	4d8b4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4d964:	01800174 	movhi	r6,5
   4d968:	31bf9004 	addi	r6,r6,-448
   4d96c:	01400174 	movhi	r5,5
   4d970:	297ec504 	addi	r5,r5,-1260
   4d974:	01000174 	movhi	r4,5
   4d978:	213ec504 	addi	r4,r4,-1260
   4d97c:	004d8b40 	call	4d8b4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4d980:	004ecfc0 	call	4ecfc <alt_dcache_flush_all>
  alt_icache_flush_all();
   4d984:	004eebc0 	call	4eebc <alt_icache_flush_all>
}
   4d988:	0001883a 	nop
   4d98c:	e037883a 	mov	sp,fp
   4d990:	dfc00117 	ldw	ra,4(sp)
   4d994:	df000017 	ldw	fp,0(sp)
   4d998:	dec00204 	addi	sp,sp,8
   4d99c:	f800283a 	ret

0004d9a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d9a0:	defffe04 	addi	sp,sp,-8
   4d9a4:	dfc00115 	stw	ra,4(sp)
   4d9a8:	df000015 	stw	fp,0(sp)
   4d9ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d9b0:	d0a00b17 	ldw	r2,-32724(gp)
   4d9b4:	10000326 	beq	r2,zero,4d9c4 <alt_get_errno+0x24>
   4d9b8:	d0a00b17 	ldw	r2,-32724(gp)
   4d9bc:	103ee83a 	callr	r2
   4d9c0:	00000106 	br	4d9c8 <alt_get_errno+0x28>
   4d9c4:	d0a6d304 	addi	r2,gp,-25780
}
   4d9c8:	e037883a 	mov	sp,fp
   4d9cc:	dfc00117 	ldw	ra,4(sp)
   4d9d0:	df000017 	ldw	fp,0(sp)
   4d9d4:	dec00204 	addi	sp,sp,8
   4d9d8:	f800283a 	ret

0004d9dc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4d9dc:	defff904 	addi	sp,sp,-28
   4d9e0:	dfc00615 	stw	ra,24(sp)
   4d9e4:	df000515 	stw	fp,20(sp)
   4d9e8:	df000504 	addi	fp,sp,20
   4d9ec:	e13ffd15 	stw	r4,-12(fp)
   4d9f0:	e17ffe15 	stw	r5,-8(fp)
   4d9f4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4d9f8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d9fc:	e0bffd17 	ldw	r2,-12(fp)
   4da00:	10000816 	blt	r2,zero,4da24 <lseek+0x48>
   4da04:	01400304 	movi	r5,12
   4da08:	e13ffd17 	ldw	r4,-12(fp)
   4da0c:	004aa2c0 	call	4aa2c <__mulsi3>
   4da10:	1007883a 	mov	r3,r2
   4da14:	00800174 	movhi	r2,5
   4da18:	1081c304 	addi	r2,r2,1804
   4da1c:	1885883a 	add	r2,r3,r2
   4da20:	00000106 	br	4da28 <lseek+0x4c>
   4da24:	0005883a 	mov	r2,zero
   4da28:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4da2c:	e0bffc17 	ldw	r2,-16(fp)
   4da30:	10001026 	beq	r2,zero,4da74 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4da34:	e0bffc17 	ldw	r2,-16(fp)
   4da38:	10800017 	ldw	r2,0(r2)
   4da3c:	10800717 	ldw	r2,28(r2)
   4da40:	10000926 	beq	r2,zero,4da68 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4da44:	e0bffc17 	ldw	r2,-16(fp)
   4da48:	10800017 	ldw	r2,0(r2)
   4da4c:	10800717 	ldw	r2,28(r2)
   4da50:	e1bfff17 	ldw	r6,-4(fp)
   4da54:	e17ffe17 	ldw	r5,-8(fp)
   4da58:	e13ffc17 	ldw	r4,-16(fp)
   4da5c:	103ee83a 	callr	r2
   4da60:	e0bffb15 	stw	r2,-20(fp)
   4da64:	00000506 	br	4da7c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4da68:	00bfde84 	movi	r2,-134
   4da6c:	e0bffb15 	stw	r2,-20(fp)
   4da70:	00000206 	br	4da7c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
   4da74:	00bfebc4 	movi	r2,-81
   4da78:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4da7c:	e0bffb17 	ldw	r2,-20(fp)
   4da80:	1000070e 	bge	r2,zero,4daa0 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
   4da84:	004d9a00 	call	4d9a0 <alt_get_errno>
   4da88:	1007883a 	mov	r3,r2
   4da8c:	e0bffb17 	ldw	r2,-20(fp)
   4da90:	0085c83a 	sub	r2,zero,r2
   4da94:	18800015 	stw	r2,0(r3)
    rc = -1;
   4da98:	00bfffc4 	movi	r2,-1
   4da9c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4daa0:	e0bffb17 	ldw	r2,-20(fp)
}
   4daa4:	e037883a 	mov	sp,fp
   4daa8:	dfc00117 	ldw	ra,4(sp)
   4daac:	df000017 	ldw	fp,0(sp)
   4dab0:	dec00204 	addi	sp,sp,8
   4dab4:	f800283a 	ret

0004dab8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4dab8:	defffd04 	addi	sp,sp,-12
   4dabc:	dfc00215 	stw	ra,8(sp)
   4dac0:	df000115 	stw	fp,4(sp)
   4dac4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4dac8:	0009883a 	mov	r4,zero
   4dacc:	004df900 	call	4df90 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4dad0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4dad4:	004dfc80 	call	4dfc8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4dad8:	01800174 	movhi	r6,5
   4dadc:	31bf8a04 	addi	r6,r6,-472
   4dae0:	01400174 	movhi	r5,5
   4dae4:	297f8a04 	addi	r5,r5,-472
   4dae8:	01000174 	movhi	r4,5
   4daec:	213f8a04 	addi	r4,r4,-472
   4daf0:	004f05c0 	call	4f05c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4daf4:	004edfc0 	call	4edfc <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4daf8:	01000174 	movhi	r4,5
   4dafc:	213b9704 	addi	r4,r4,-4516
   4db00:	004f7800 	call	4f780 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4db04:	d0a6d517 	ldw	r2,-25772(gp)
   4db08:	d0e6d617 	ldw	r3,-25768(gp)
   4db0c:	d126d717 	ldw	r4,-25764(gp)
   4db10:	200d883a 	mov	r6,r4
   4db14:	180b883a 	mov	r5,r3
   4db18:	1009883a 	mov	r4,r2
   4db1c:	00403500 	call	40350 <main>
   4db20:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4db24:	01000044 	movi	r4,1
   4db28:	004d3340 	call	4d334 <close>
  exit (result);
   4db2c:	e13fff17 	ldw	r4,-4(fp)
   4db30:	004f7940 	call	4f794 <exit>

0004db34 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4db34:	defffe04 	addi	sp,sp,-8
   4db38:	df000115 	stw	fp,4(sp)
   4db3c:	df000104 	addi	fp,sp,4
   4db40:	e13fff15 	stw	r4,-4(fp)
}
   4db44:	0001883a 	nop
   4db48:	e037883a 	mov	sp,fp
   4db4c:	df000017 	ldw	fp,0(sp)
   4db50:	dec00104 	addi	sp,sp,4
   4db54:	f800283a 	ret

0004db58 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4db58:	defffe04 	addi	sp,sp,-8
   4db5c:	df000115 	stw	fp,4(sp)
   4db60:	df000104 	addi	fp,sp,4
   4db64:	e13fff15 	stw	r4,-4(fp)
}
   4db68:	0001883a 	nop
   4db6c:	e037883a 	mov	sp,fp
   4db70:	df000017 	ldw	fp,0(sp)
   4db74:	dec00104 	addi	sp,sp,4
   4db78:	f800283a 	ret

0004db7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4db7c:	defffe04 	addi	sp,sp,-8
   4db80:	dfc00115 	stw	ra,4(sp)
   4db84:	df000015 	stw	fp,0(sp)
   4db88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4db8c:	d0a00b17 	ldw	r2,-32724(gp)
   4db90:	10000326 	beq	r2,zero,4dba0 <alt_get_errno+0x24>
   4db94:	d0a00b17 	ldw	r2,-32724(gp)
   4db98:	103ee83a 	callr	r2
   4db9c:	00000106 	br	4dba4 <alt_get_errno+0x28>
   4dba0:	d0a6d304 	addi	r2,gp,-25780
}
   4dba4:	e037883a 	mov	sp,fp
   4dba8:	dfc00117 	ldw	ra,4(sp)
   4dbac:	df000017 	ldw	fp,0(sp)
   4dbb0:	dec00204 	addi	sp,sp,8
   4dbb4:	f800283a 	ret

0004dbb8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4dbb8:	defff904 	addi	sp,sp,-28
   4dbbc:	dfc00615 	stw	ra,24(sp)
   4dbc0:	df000515 	stw	fp,20(sp)
   4dbc4:	df000504 	addi	fp,sp,20
   4dbc8:	e13ffd15 	stw	r4,-12(fp)
   4dbcc:	e17ffe15 	stw	r5,-8(fp)
   4dbd0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4dbd4:	e0bffd17 	ldw	r2,-12(fp)
   4dbd8:	10000816 	blt	r2,zero,4dbfc <read+0x44>
   4dbdc:	01400304 	movi	r5,12
   4dbe0:	e13ffd17 	ldw	r4,-12(fp)
   4dbe4:	004aa2c0 	call	4aa2c <__mulsi3>
   4dbe8:	1007883a 	mov	r3,r2
   4dbec:	00800174 	movhi	r2,5
   4dbf0:	1081c304 	addi	r2,r2,1804
   4dbf4:	1885883a 	add	r2,r3,r2
   4dbf8:	00000106 	br	4dc00 <read+0x48>
   4dbfc:	0005883a 	mov	r2,zero
   4dc00:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4dc04:	e0bffb17 	ldw	r2,-20(fp)
   4dc08:	10002226 	beq	r2,zero,4dc94 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4dc0c:	e0bffb17 	ldw	r2,-20(fp)
   4dc10:	10800217 	ldw	r2,8(r2)
   4dc14:	108000cc 	andi	r2,r2,3
   4dc18:	10800060 	cmpeqi	r2,r2,1
   4dc1c:	1000181e 	bne	r2,zero,4dc80 <read+0xc8>
        (fd->dev->read))
   4dc20:	e0bffb17 	ldw	r2,-20(fp)
   4dc24:	10800017 	ldw	r2,0(r2)
   4dc28:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4dc2c:	10001426 	beq	r2,zero,4dc80 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4dc30:	e0bffb17 	ldw	r2,-20(fp)
   4dc34:	10800017 	ldw	r2,0(r2)
   4dc38:	10800517 	ldw	r2,20(r2)
   4dc3c:	e0ffff17 	ldw	r3,-4(fp)
   4dc40:	180d883a 	mov	r6,r3
   4dc44:	e17ffe17 	ldw	r5,-8(fp)
   4dc48:	e13ffb17 	ldw	r4,-20(fp)
   4dc4c:	103ee83a 	callr	r2
   4dc50:	e0bffc15 	stw	r2,-16(fp)
   4dc54:	e0bffc17 	ldw	r2,-16(fp)
   4dc58:	1000070e 	bge	r2,zero,4dc78 <read+0xc0>
        {
          ALT_ERRNO = -rval;
   4dc5c:	004db7c0 	call	4db7c <alt_get_errno>
   4dc60:	1007883a 	mov	r3,r2
   4dc64:	e0bffc17 	ldw	r2,-16(fp)
   4dc68:	0085c83a 	sub	r2,zero,r2
   4dc6c:	18800015 	stw	r2,0(r3)
          return -1;
   4dc70:	00bfffc4 	movi	r2,-1
   4dc74:	00000c06 	br	4dca8 <read+0xf0>
        }
        return rval;
   4dc78:	e0bffc17 	ldw	r2,-16(fp)
   4dc7c:	00000a06 	br	4dca8 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4dc80:	004db7c0 	call	4db7c <alt_get_errno>
   4dc84:	1007883a 	mov	r3,r2
   4dc88:	00800344 	movi	r2,13
   4dc8c:	18800015 	stw	r2,0(r3)
   4dc90:	00000406 	br	4dca4 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4dc94:	004db7c0 	call	4db7c <alt_get_errno>
   4dc98:	1007883a 	mov	r3,r2
   4dc9c:	00801444 	movi	r2,81
   4dca0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4dca4:	00bfffc4 	movi	r2,-1
}
   4dca8:	e037883a 	mov	sp,fp
   4dcac:	dfc00117 	ldw	ra,4(sp)
   4dcb0:	df000017 	ldw	fp,0(sp)
   4dcb4:	dec00204 	addi	sp,sp,8
   4dcb8:	f800283a 	ret

0004dcbc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4dcbc:	defffc04 	addi	sp,sp,-16
   4dcc0:	dfc00315 	stw	ra,12(sp)
   4dcc4:	df000215 	stw	fp,8(sp)
   4dcc8:	dc000115 	stw	r16,4(sp)
   4dccc:	df000204 	addi	fp,sp,8
   4dcd0:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
   4dcd4:	e0bffe17 	ldw	r2,-8(fp)
   4dcd8:	108000d0 	cmplti	r2,r2,3
   4dcdc:	1000111e 	bne	r2,zero,4dd24 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
   4dce0:	04000174 	movhi	r16,5
   4dce4:	8401c304 	addi	r16,r16,1804
   4dce8:	e0bffe17 	ldw	r2,-8(fp)
   4dcec:	01400304 	movi	r5,12
   4dcf0:	1009883a 	mov	r4,r2
   4dcf4:	004aa2c0 	call	4aa2c <__mulsi3>
   4dcf8:	8085883a 	add	r2,r16,r2
   4dcfc:	10800204 	addi	r2,r2,8
   4dd00:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4dd04:	04000174 	movhi	r16,5
   4dd08:	8401c304 	addi	r16,r16,1804
   4dd0c:	e0bffe17 	ldw	r2,-8(fp)
   4dd10:	01400304 	movi	r5,12
   4dd14:	1009883a 	mov	r4,r2
   4dd18:	004aa2c0 	call	4aa2c <__mulsi3>
   4dd1c:	8085883a 	add	r2,r16,r2
   4dd20:	10000015 	stw	zero,0(r2)
  }
}
   4dd24:	0001883a 	nop
   4dd28:	e6ffff04 	addi	sp,fp,-4
   4dd2c:	dfc00217 	ldw	ra,8(sp)
   4dd30:	df000117 	ldw	fp,4(sp)
   4dd34:	dc000017 	ldw	r16,0(sp)
   4dd38:	dec00304 	addi	sp,sp,12
   4dd3c:	f800283a 	ret

0004dd40 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4dd40:	defff904 	addi	sp,sp,-28
   4dd44:	df000615 	stw	fp,24(sp)
   4dd48:	df000604 	addi	fp,sp,24
   4dd4c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4dd50:	0005303a 	rdctl	r2,status
   4dd54:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4dd58:	e0fffe17 	ldw	r3,-8(fp)
   4dd5c:	00bfff84 	movi	r2,-2
   4dd60:	1884703a 	and	r2,r3,r2
   4dd64:	1001703a 	wrctl	status,r2
  
  return context;
   4dd68:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4dd6c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4dd70:	d0a00d17 	ldw	r2,-32716(gp)
   4dd74:	10c000c4 	addi	r3,r2,3
   4dd78:	00bfff04 	movi	r2,-4
   4dd7c:	1884703a 	and	r2,r3,r2
   4dd80:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4dd84:	d0e00d17 	ldw	r3,-32716(gp)
   4dd88:	e0bfff17 	ldw	r2,-4(fp)
   4dd8c:	1887883a 	add	r3,r3,r2
   4dd90:	008001f4 	movhi	r2,7
   4dd94:	10880004 	addi	r2,r2,8192
   4dd98:	10c0062e 	bgeu	r2,r3,4ddb4 <sbrk+0x74>
   4dd9c:	e0bffb17 	ldw	r2,-20(fp)
   4dda0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4dda4:	e0bffa17 	ldw	r2,-24(fp)
   4dda8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4ddac:	00bfffc4 	movi	r2,-1
   4ddb0:	00000b06 	br	4dde0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4ddb4:	d0a00d17 	ldw	r2,-32716(gp)
   4ddb8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4ddbc:	d0e00d17 	ldw	r3,-32716(gp)
   4ddc0:	e0bfff17 	ldw	r2,-4(fp)
   4ddc4:	1885883a 	add	r2,r3,r2
   4ddc8:	d0a00d15 	stw	r2,-32716(gp)
   4ddcc:	e0bffb17 	ldw	r2,-20(fp)
   4ddd0:	e0bffc15 	stw	r2,-16(fp)
   4ddd4:	e0bffc17 	ldw	r2,-16(fp)
   4ddd8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4dddc:	e0bffd17 	ldw	r2,-12(fp)
} 
   4dde0:	e037883a 	mov	sp,fp
   4dde4:	df000017 	ldw	fp,0(sp)
   4dde8:	dec00104 	addi	sp,sp,4
   4ddec:	f800283a 	ret

0004ddf0 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   4ddf0:	defffd04 	addi	sp,sp,-12
   4ddf4:	dfc00215 	stw	ra,8(sp)
   4ddf8:	df000115 	stw	fp,4(sp)
   4ddfc:	df000104 	addi	fp,sp,4
   4de00:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   4de04:	e13fff17 	ldw	r4,-4(fp)
   4de08:	004eba40 	call	4eba4 <alt_busy_sleep>
}
   4de0c:	e037883a 	mov	sp,fp
   4de10:	dfc00117 	ldw	ra,4(sp)
   4de14:	df000017 	ldw	fp,0(sp)
   4de18:	dec00204 	addi	sp,sp,8
   4de1c:	f800283a 	ret

0004de20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4de20:	defffe04 	addi	sp,sp,-8
   4de24:	dfc00115 	stw	ra,4(sp)
   4de28:	df000015 	stw	fp,0(sp)
   4de2c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4de30:	d0a00b17 	ldw	r2,-32724(gp)
   4de34:	10000326 	beq	r2,zero,4de44 <alt_get_errno+0x24>
   4de38:	d0a00b17 	ldw	r2,-32724(gp)
   4de3c:	103ee83a 	callr	r2
   4de40:	00000106 	br	4de48 <alt_get_errno+0x28>
   4de44:	d0a6d304 	addi	r2,gp,-25780
}
   4de48:	e037883a 	mov	sp,fp
   4de4c:	dfc00117 	ldw	ra,4(sp)
   4de50:	df000017 	ldw	fp,0(sp)
   4de54:	dec00204 	addi	sp,sp,8
   4de58:	f800283a 	ret

0004de5c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4de5c:	defff904 	addi	sp,sp,-28
   4de60:	dfc00615 	stw	ra,24(sp)
   4de64:	df000515 	stw	fp,20(sp)
   4de68:	df000504 	addi	fp,sp,20
   4de6c:	e13ffd15 	stw	r4,-12(fp)
   4de70:	e17ffe15 	stw	r5,-8(fp)
   4de74:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4de78:	e0bffd17 	ldw	r2,-12(fp)
   4de7c:	10000816 	blt	r2,zero,4dea0 <write+0x44>
   4de80:	01400304 	movi	r5,12
   4de84:	e13ffd17 	ldw	r4,-12(fp)
   4de88:	004aa2c0 	call	4aa2c <__mulsi3>
   4de8c:	1007883a 	mov	r3,r2
   4de90:	00800174 	movhi	r2,5
   4de94:	1081c304 	addi	r2,r2,1804
   4de98:	1885883a 	add	r2,r3,r2
   4de9c:	00000106 	br	4dea4 <write+0x48>
   4dea0:	0005883a 	mov	r2,zero
   4dea4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4dea8:	e0bffb17 	ldw	r2,-20(fp)
   4deac:	10002126 	beq	r2,zero,4df34 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4deb0:	e0bffb17 	ldw	r2,-20(fp)
   4deb4:	10800217 	ldw	r2,8(r2)
   4deb8:	108000cc 	andi	r2,r2,3
   4debc:	10001826 	beq	r2,zero,4df20 <write+0xc4>
   4dec0:	e0bffb17 	ldw	r2,-20(fp)
   4dec4:	10800017 	ldw	r2,0(r2)
   4dec8:	10800617 	ldw	r2,24(r2)
   4decc:	10001426 	beq	r2,zero,4df20 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4ded0:	e0bffb17 	ldw	r2,-20(fp)
   4ded4:	10800017 	ldw	r2,0(r2)
   4ded8:	10800617 	ldw	r2,24(r2)
   4dedc:	e0ffff17 	ldw	r3,-4(fp)
   4dee0:	180d883a 	mov	r6,r3
   4dee4:	e17ffe17 	ldw	r5,-8(fp)
   4dee8:	e13ffb17 	ldw	r4,-20(fp)
   4deec:	103ee83a 	callr	r2
   4def0:	e0bffc15 	stw	r2,-16(fp)
   4def4:	e0bffc17 	ldw	r2,-16(fp)
   4def8:	1000070e 	bge	r2,zero,4df18 <write+0xbc>
      {
        ALT_ERRNO = -rval;
   4defc:	004de200 	call	4de20 <alt_get_errno>
   4df00:	1007883a 	mov	r3,r2
   4df04:	e0bffc17 	ldw	r2,-16(fp)
   4df08:	0085c83a 	sub	r2,zero,r2
   4df0c:	18800015 	stw	r2,0(r3)
        return -1;
   4df10:	00bfffc4 	movi	r2,-1
   4df14:	00000c06 	br	4df48 <write+0xec>
      }
      return rval;
   4df18:	e0bffc17 	ldw	r2,-16(fp)
   4df1c:	00000a06 	br	4df48 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4df20:	004de200 	call	4de20 <alt_get_errno>
   4df24:	1007883a 	mov	r3,r2
   4df28:	00800344 	movi	r2,13
   4df2c:	18800015 	stw	r2,0(r3)
   4df30:	00000406 	br	4df44 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4df34:	004de200 	call	4de20 <alt_get_errno>
   4df38:	1007883a 	mov	r3,r2
   4df3c:	00801444 	movi	r2,81
   4df40:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4df44:	00bfffc4 	movi	r2,-1
}
   4df48:	e037883a 	mov	sp,fp
   4df4c:	dfc00117 	ldw	ra,4(sp)
   4df50:	df000017 	ldw	fp,0(sp)
   4df54:	dec00204 	addi	sp,sp,8
   4df58:	f800283a 	ret

0004df5c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4df5c:	defffd04 	addi	sp,sp,-12
   4df60:	dfc00215 	stw	ra,8(sp)
   4df64:	df000115 	stw	fp,4(sp)
   4df68:	df000104 	addi	fp,sp,4
   4df6c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4df70:	d1600804 	addi	r5,gp,-32736
   4df74:	e13fff17 	ldw	r4,-4(fp)
   4df78:	004ed580 	call	4ed58 <alt_dev_llist_insert>
}
   4df7c:	e037883a 	mov	sp,fp
   4df80:	dfc00117 	ldw	ra,4(sp)
   4df84:	df000017 	ldw	fp,0(sp)
   4df88:	dec00204 	addi	sp,sp,8
   4df8c:	f800283a 	ret

0004df90 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4df90:	defffd04 	addi	sp,sp,-12
   4df94:	dfc00215 	stw	ra,8(sp)
   4df98:	df000115 	stw	fp,4(sp)
   4df9c:	df000104 	addi	fp,sp,4
   4dfa0:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, CPU);
   4dfa4:	004f5000 	call	4f500 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4dfa8:	00800044 	movi	r2,1
   4dfac:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4dfb0:	0001883a 	nop
   4dfb4:	e037883a 	mov	sp,fp
   4dfb8:	dfc00117 	ldw	ra,4(sp)
   4dfbc:	df000017 	ldw	fp,0(sp)
   4dfc0:	dec00204 	addi	sp,sp,8
   4dfc4:	f800283a 	ret

0004dfc8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4dfc8:	defffe04 	addi	sp,sp,-8
   4dfcc:	dfc00115 	stw	ra,4(sp)
   4dfd0:	df000015 	stw	fp,0(sp)
   4dfd4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( DEBUG, debug);
   4dfd8:	000d883a 	mov	r6,zero
   4dfdc:	000b883a 	mov	r5,zero
   4dfe0:	01000174 	movhi	r4,5
   4dfe4:	21022d04 	addi	r4,r4,2228
   4dfe8:	004e1740 	call	4e174 <altera_avalon_jtag_uart_init>
   4dfec:	01000174 	movhi	r4,5
   4dff0:	21022304 	addi	r4,r4,2188
   4dff4:	004df5c0 	call	4df5c <alt_dev_reg>
}
   4dff8:	0001883a 	nop
   4dffc:	e037883a 	mov	sp,fp
   4e000:	dfc00117 	ldw	ra,4(sp)
   4e004:	df000017 	ldw	fp,0(sp)
   4e008:	dec00204 	addi	sp,sp,8
   4e00c:	f800283a 	ret

0004e010 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4e010:	defffa04 	addi	sp,sp,-24
   4e014:	dfc00515 	stw	ra,20(sp)
   4e018:	df000415 	stw	fp,16(sp)
   4e01c:	df000404 	addi	fp,sp,16
   4e020:	e13ffd15 	stw	r4,-12(fp)
   4e024:	e17ffe15 	stw	r5,-8(fp)
   4e028:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4e02c:	e0bffd17 	ldw	r2,-12(fp)
   4e030:	10800017 	ldw	r2,0(r2)
   4e034:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4e038:	e0bffc17 	ldw	r2,-16(fp)
   4e03c:	10c00a04 	addi	r3,r2,40
   4e040:	e0bffd17 	ldw	r2,-12(fp)
   4e044:	10800217 	ldw	r2,8(r2)
   4e048:	100f883a 	mov	r7,r2
   4e04c:	e1bfff17 	ldw	r6,-4(fp)
   4e050:	e17ffe17 	ldw	r5,-8(fp)
   4e054:	1809883a 	mov	r4,r3
   4e058:	004e6380 	call	4e638 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4e05c:	e037883a 	mov	sp,fp
   4e060:	dfc00117 	ldw	ra,4(sp)
   4e064:	df000017 	ldw	fp,0(sp)
   4e068:	dec00204 	addi	sp,sp,8
   4e06c:	f800283a 	ret

0004e070 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4e070:	defffa04 	addi	sp,sp,-24
   4e074:	dfc00515 	stw	ra,20(sp)
   4e078:	df000415 	stw	fp,16(sp)
   4e07c:	df000404 	addi	fp,sp,16
   4e080:	e13ffd15 	stw	r4,-12(fp)
   4e084:	e17ffe15 	stw	r5,-8(fp)
   4e088:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4e08c:	e0bffd17 	ldw	r2,-12(fp)
   4e090:	10800017 	ldw	r2,0(r2)
   4e094:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4e098:	e0bffc17 	ldw	r2,-16(fp)
   4e09c:	10c00a04 	addi	r3,r2,40
   4e0a0:	e0bffd17 	ldw	r2,-12(fp)
   4e0a4:	10800217 	ldw	r2,8(r2)
   4e0a8:	100f883a 	mov	r7,r2
   4e0ac:	e1bfff17 	ldw	r6,-4(fp)
   4e0b0:	e17ffe17 	ldw	r5,-8(fp)
   4e0b4:	1809883a 	mov	r4,r3
   4e0b8:	004e8540 	call	4e854 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4e0bc:	e037883a 	mov	sp,fp
   4e0c0:	dfc00117 	ldw	ra,4(sp)
   4e0c4:	df000017 	ldw	fp,0(sp)
   4e0c8:	dec00204 	addi	sp,sp,8
   4e0cc:	f800283a 	ret

0004e0d0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4e0d0:	defffc04 	addi	sp,sp,-16
   4e0d4:	dfc00315 	stw	ra,12(sp)
   4e0d8:	df000215 	stw	fp,8(sp)
   4e0dc:	df000204 	addi	fp,sp,8
   4e0e0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4e0e4:	e0bfff17 	ldw	r2,-4(fp)
   4e0e8:	10800017 	ldw	r2,0(r2)
   4e0ec:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4e0f0:	e0bffe17 	ldw	r2,-8(fp)
   4e0f4:	10c00a04 	addi	r3,r2,40
   4e0f8:	e0bfff17 	ldw	r2,-4(fp)
   4e0fc:	10800217 	ldw	r2,8(r2)
   4e100:	100b883a 	mov	r5,r2
   4e104:	1809883a 	mov	r4,r3
   4e108:	004e4e00 	call	4e4e0 <altera_avalon_jtag_uart_close>
}
   4e10c:	e037883a 	mov	sp,fp
   4e110:	dfc00117 	ldw	ra,4(sp)
   4e114:	df000017 	ldw	fp,0(sp)
   4e118:	dec00204 	addi	sp,sp,8
   4e11c:	f800283a 	ret

0004e120 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4e120:	defffa04 	addi	sp,sp,-24
   4e124:	dfc00515 	stw	ra,20(sp)
   4e128:	df000415 	stw	fp,16(sp)
   4e12c:	df000404 	addi	fp,sp,16
   4e130:	e13ffd15 	stw	r4,-12(fp)
   4e134:	e17ffe15 	stw	r5,-8(fp)
   4e138:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4e13c:	e0bffd17 	ldw	r2,-12(fp)
   4e140:	10800017 	ldw	r2,0(r2)
   4e144:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4e148:	e0bffc17 	ldw	r2,-16(fp)
   4e14c:	10800a04 	addi	r2,r2,40
   4e150:	e1bfff17 	ldw	r6,-4(fp)
   4e154:	e17ffe17 	ldw	r5,-8(fp)
   4e158:	1009883a 	mov	r4,r2
   4e15c:	004e5480 	call	4e548 <altera_avalon_jtag_uart_ioctl>
}
   4e160:	e037883a 	mov	sp,fp
   4e164:	dfc00117 	ldw	ra,4(sp)
   4e168:	df000017 	ldw	fp,0(sp)
   4e16c:	dec00204 	addi	sp,sp,8
   4e170:	f800283a 	ret

0004e174 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4e174:	defffa04 	addi	sp,sp,-24
   4e178:	dfc00515 	stw	ra,20(sp)
   4e17c:	df000415 	stw	fp,16(sp)
   4e180:	df000404 	addi	fp,sp,16
   4e184:	e13ffd15 	stw	r4,-12(fp)
   4e188:	e17ffe15 	stw	r5,-8(fp)
   4e18c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e190:	e0bffd17 	ldw	r2,-12(fp)
   4e194:	00c00044 	movi	r3,1
   4e198:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4e19c:	e0bffd17 	ldw	r2,-12(fp)
   4e1a0:	10800017 	ldw	r2,0(r2)
   4e1a4:	10800104 	addi	r2,r2,4
   4e1a8:	1007883a 	mov	r3,r2
   4e1ac:	e0bffd17 	ldw	r2,-12(fp)
   4e1b0:	10800817 	ldw	r2,32(r2)
   4e1b4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4e1b8:	e0bffe17 	ldw	r2,-8(fp)
   4e1bc:	e0ffff17 	ldw	r3,-4(fp)
   4e1c0:	d8000015 	stw	zero,0(sp)
   4e1c4:	e1fffd17 	ldw	r7,-12(fp)
   4e1c8:	01800174 	movhi	r6,5
   4e1cc:	31b88d04 	addi	r6,r6,-7628
   4e1d0:	180b883a 	mov	r5,r3
   4e1d4:	1009883a 	mov	r4,r2
   4e1d8:	004d52c0 	call	4d52c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4e1dc:	e0bffd17 	ldw	r2,-12(fp)
   4e1e0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4e1e4:	e0bffd17 	ldw	r2,-12(fp)
   4e1e8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4e1ec:	d0e6d917 	ldw	r3,-25756(gp)
   4e1f0:	e1fffd17 	ldw	r7,-12(fp)
   4e1f4:	01800174 	movhi	r6,5
   4e1f8:	31b91004 	addi	r6,r6,-7104
   4e1fc:	180b883a 	mov	r5,r3
   4e200:	1009883a 	mov	r4,r2
   4e204:	004ea780 	call	4ea78 <alt_alarm_start>
   4e208:	1000040e 	bge	r2,zero,4e21c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4e20c:	e0fffd17 	ldw	r3,-12(fp)
   4e210:	00a00034 	movhi	r2,32768
   4e214:	10bfffc4 	addi	r2,r2,-1
   4e218:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4e21c:	0001883a 	nop
   4e220:	e037883a 	mov	sp,fp
   4e224:	dfc00117 	ldw	ra,4(sp)
   4e228:	df000017 	ldw	fp,0(sp)
   4e22c:	dec00204 	addi	sp,sp,8
   4e230:	f800283a 	ret

0004e234 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4e234:	defff804 	addi	sp,sp,-32
   4e238:	df000715 	stw	fp,28(sp)
   4e23c:	df000704 	addi	fp,sp,28
   4e240:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4e244:	e0bfff17 	ldw	r2,-4(fp)
   4e248:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   4e24c:	e0bffb17 	ldw	r2,-20(fp)
   4e250:	10800017 	ldw	r2,0(r2)
   4e254:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e258:	e0bffc17 	ldw	r2,-16(fp)
   4e25c:	10800104 	addi	r2,r2,4
   4e260:	10800037 	ldwio	r2,0(r2)
   4e264:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4e268:	e0bffd17 	ldw	r2,-12(fp)
   4e26c:	1080c00c 	andi	r2,r2,768
   4e270:	10006d26 	beq	r2,zero,4e428 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4e274:	e0bffd17 	ldw	r2,-12(fp)
   4e278:	1080400c 	andi	r2,r2,256
   4e27c:	10003526 	beq	r2,zero,4e354 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4e280:	00800074 	movhi	r2,1
   4e284:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e288:	e0bffb17 	ldw	r2,-20(fp)
   4e28c:	10800a17 	ldw	r2,40(r2)
   4e290:	10800044 	addi	r2,r2,1
   4e294:	1081ffcc 	andi	r2,r2,2047
   4e298:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   4e29c:	e0bffb17 	ldw	r2,-20(fp)
   4e2a0:	10c00b17 	ldw	r3,44(r2)
   4e2a4:	e0bffe17 	ldw	r2,-8(fp)
   4e2a8:	18801526 	beq	r3,r2,4e300 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4e2ac:	e0bffc17 	ldw	r2,-16(fp)
   4e2b0:	10800037 	ldwio	r2,0(r2)
   4e2b4:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4e2b8:	e0bff917 	ldw	r2,-28(fp)
   4e2bc:	10a0000c 	andi	r2,r2,32768
   4e2c0:	10001126 	beq	r2,zero,4e308 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4e2c4:	e0bffb17 	ldw	r2,-20(fp)
   4e2c8:	10800a17 	ldw	r2,40(r2)
   4e2cc:	e0fff917 	ldw	r3,-28(fp)
   4e2d0:	1809883a 	mov	r4,r3
   4e2d4:	e0fffb17 	ldw	r3,-20(fp)
   4e2d8:	1885883a 	add	r2,r3,r2
   4e2dc:	10800e04 	addi	r2,r2,56
   4e2e0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e2e4:	e0bffb17 	ldw	r2,-20(fp)
   4e2e8:	10800a17 	ldw	r2,40(r2)
   4e2ec:	10800044 	addi	r2,r2,1
   4e2f0:	10c1ffcc 	andi	r3,r2,2047
   4e2f4:	e0bffb17 	ldw	r2,-20(fp)
   4e2f8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4e2fc:	003fe206 	br	4e288 <__alt_data_end+0xfffdc288>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4e300:	0001883a 	nop
   4e304:	00000106 	br	4e30c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4e308:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4e30c:	e0bff917 	ldw	r2,-28(fp)
   4e310:	10bfffec 	andhi	r2,r2,65535
   4e314:	10000f26 	beq	r2,zero,4e354 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e318:	e0bffb17 	ldw	r2,-20(fp)
   4e31c:	10c00817 	ldw	r3,32(r2)
   4e320:	00bfff84 	movi	r2,-2
   4e324:	1886703a 	and	r3,r3,r2
   4e328:	e0bffb17 	ldw	r2,-20(fp)
   4e32c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4e330:	e0bffc17 	ldw	r2,-16(fp)
   4e334:	10800104 	addi	r2,r2,4
   4e338:	1007883a 	mov	r3,r2
   4e33c:	e0bffb17 	ldw	r2,-20(fp)
   4e340:	10800817 	ldw	r2,32(r2)
   4e344:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e348:	e0bffc17 	ldw	r2,-16(fp)
   4e34c:	10800104 	addi	r2,r2,4
   4e350:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4e354:	e0bffd17 	ldw	r2,-12(fp)
   4e358:	1080800c 	andi	r2,r2,512
   4e35c:	103fbe26 	beq	r2,zero,4e258 <__alt_data_end+0xfffdc258>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4e360:	e0bffd17 	ldw	r2,-12(fp)
   4e364:	1004d43a 	srli	r2,r2,16
   4e368:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4e36c:	00001406 	br	4e3c0 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4e370:	e0bffc17 	ldw	r2,-16(fp)
   4e374:	e0fffb17 	ldw	r3,-20(fp)
   4e378:	18c00d17 	ldw	r3,52(r3)
   4e37c:	e13ffb17 	ldw	r4,-20(fp)
   4e380:	20c7883a 	add	r3,r4,r3
   4e384:	18c20e04 	addi	r3,r3,2104
   4e388:	18c00003 	ldbu	r3,0(r3)
   4e38c:	18c03fcc 	andi	r3,r3,255
   4e390:	18c0201c 	xori	r3,r3,128
   4e394:	18ffe004 	addi	r3,r3,-128
   4e398:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e39c:	e0bffb17 	ldw	r2,-20(fp)
   4e3a0:	10800d17 	ldw	r2,52(r2)
   4e3a4:	10800044 	addi	r2,r2,1
   4e3a8:	10c1ffcc 	andi	r3,r2,2047
   4e3ac:	e0bffb17 	ldw	r2,-20(fp)
   4e3b0:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4e3b4:	e0bffa17 	ldw	r2,-24(fp)
   4e3b8:	10bfffc4 	addi	r2,r2,-1
   4e3bc:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4e3c0:	e0bffa17 	ldw	r2,-24(fp)
   4e3c4:	10000526 	beq	r2,zero,4e3dc <altera_avalon_jtag_uart_irq+0x1a8>
   4e3c8:	e0bffb17 	ldw	r2,-20(fp)
   4e3cc:	10c00d17 	ldw	r3,52(r2)
   4e3d0:	e0bffb17 	ldw	r2,-20(fp)
   4e3d4:	10800c17 	ldw	r2,48(r2)
   4e3d8:	18bfe51e 	bne	r3,r2,4e370 <__alt_data_end+0xfffdc370>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4e3dc:	e0bffa17 	ldw	r2,-24(fp)
   4e3e0:	103f9d26 	beq	r2,zero,4e258 <__alt_data_end+0xfffdc258>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e3e4:	e0bffb17 	ldw	r2,-20(fp)
   4e3e8:	10c00817 	ldw	r3,32(r2)
   4e3ec:	00bfff44 	movi	r2,-3
   4e3f0:	1886703a 	and	r3,r3,r2
   4e3f4:	e0bffb17 	ldw	r2,-20(fp)
   4e3f8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e3fc:	e0bffb17 	ldw	r2,-20(fp)
   4e400:	10800017 	ldw	r2,0(r2)
   4e404:	10800104 	addi	r2,r2,4
   4e408:	1007883a 	mov	r3,r2
   4e40c:	e0bffb17 	ldw	r2,-20(fp)
   4e410:	10800817 	ldw	r2,32(r2)
   4e414:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e418:	e0bffc17 	ldw	r2,-16(fp)
   4e41c:	10800104 	addi	r2,r2,4
   4e420:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4e424:	003f8c06 	br	4e258 <__alt_data_end+0xfffdc258>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4e428:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4e42c:	0001883a 	nop
   4e430:	e037883a 	mov	sp,fp
   4e434:	df000017 	ldw	fp,0(sp)
   4e438:	dec00104 	addi	sp,sp,4
   4e43c:	f800283a 	ret

0004e440 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4e440:	defff804 	addi	sp,sp,-32
   4e444:	df000715 	stw	fp,28(sp)
   4e448:	df000704 	addi	fp,sp,28
   4e44c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4e450:	e0bffb17 	ldw	r2,-20(fp)
   4e454:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4e458:	e0bff917 	ldw	r2,-28(fp)
   4e45c:	10800017 	ldw	r2,0(r2)
   4e460:	10800104 	addi	r2,r2,4
   4e464:	10800037 	ldwio	r2,0(r2)
   4e468:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4e46c:	e0bffa17 	ldw	r2,-24(fp)
   4e470:	1081000c 	andi	r2,r2,1024
   4e474:	10000b26 	beq	r2,zero,4e4a4 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4e478:	e0bff917 	ldw	r2,-28(fp)
   4e47c:	10800017 	ldw	r2,0(r2)
   4e480:	10800104 	addi	r2,r2,4
   4e484:	1007883a 	mov	r3,r2
   4e488:	e0bff917 	ldw	r2,-28(fp)
   4e48c:	10800817 	ldw	r2,32(r2)
   4e490:	10810014 	ori	r2,r2,1024
   4e494:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4e498:	e0bff917 	ldw	r2,-28(fp)
   4e49c:	10000915 	stw	zero,36(r2)
   4e4a0:	00000a06 	br	4e4cc <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4e4a4:	e0bff917 	ldw	r2,-28(fp)
   4e4a8:	10c00917 	ldw	r3,36(r2)
   4e4ac:	00a00034 	movhi	r2,32768
   4e4b0:	10bfff04 	addi	r2,r2,-4
   4e4b4:	10c00536 	bltu	r2,r3,4e4cc <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4e4b8:	e0bff917 	ldw	r2,-28(fp)
   4e4bc:	10800917 	ldw	r2,36(r2)
   4e4c0:	10c00044 	addi	r3,r2,1
   4e4c4:	e0bff917 	ldw	r2,-28(fp)
   4e4c8:	10c00915 	stw	r3,36(r2)
   4e4cc:	d0a6d917 	ldw	r2,-25756(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4e4d0:	e037883a 	mov	sp,fp
   4e4d4:	df000017 	ldw	fp,0(sp)
   4e4d8:	dec00104 	addi	sp,sp,4
   4e4dc:	f800283a 	ret

0004e4e0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4e4e0:	defffd04 	addi	sp,sp,-12
   4e4e4:	df000215 	stw	fp,8(sp)
   4e4e8:	df000204 	addi	fp,sp,8
   4e4ec:	e13ffe15 	stw	r4,-8(fp)
   4e4f0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e4f4:	00000506 	br	4e50c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4e4f8:	e0bfff17 	ldw	r2,-4(fp)
   4e4fc:	1090000c 	andi	r2,r2,16384
   4e500:	10000226 	beq	r2,zero,4e50c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4e504:	00bffd44 	movi	r2,-11
   4e508:	00000b06 	br	4e538 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e50c:	e0bffe17 	ldw	r2,-8(fp)
   4e510:	10c00d17 	ldw	r3,52(r2)
   4e514:	e0bffe17 	ldw	r2,-8(fp)
   4e518:	10800c17 	ldw	r2,48(r2)
   4e51c:	18800526 	beq	r3,r2,4e534 <altera_avalon_jtag_uart_close+0x54>
   4e520:	e0bffe17 	ldw	r2,-8(fp)
   4e524:	10c00917 	ldw	r3,36(r2)
   4e528:	e0bffe17 	ldw	r2,-8(fp)
   4e52c:	10800117 	ldw	r2,4(r2)
   4e530:	18bff136 	bltu	r3,r2,4e4f8 <__alt_data_end+0xfffdc4f8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4e534:	0005883a 	mov	r2,zero
}
   4e538:	e037883a 	mov	sp,fp
   4e53c:	df000017 	ldw	fp,0(sp)
   4e540:	dec00104 	addi	sp,sp,4
   4e544:	f800283a 	ret

0004e548 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4e548:	defffa04 	addi	sp,sp,-24
   4e54c:	df000515 	stw	fp,20(sp)
   4e550:	df000504 	addi	fp,sp,20
   4e554:	e13ffd15 	stw	r4,-12(fp)
   4e558:	e17ffe15 	stw	r5,-8(fp)
   4e55c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4e560:	00bff9c4 	movi	r2,-25
   4e564:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4e568:	e0bffe17 	ldw	r2,-8(fp)
   4e56c:	10da8060 	cmpeqi	r3,r2,27137
   4e570:	1800031e 	bne	r3,zero,4e580 <altera_avalon_jtag_uart_ioctl+0x38>
   4e574:	109a80a0 	cmpeqi	r2,r2,27138
   4e578:	1000181e 	bne	r2,zero,4e5dc <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4e57c:	00002906 	br	4e624 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4e580:	e0bffd17 	ldw	r2,-12(fp)
   4e584:	10c00117 	ldw	r3,4(r2)
   4e588:	00a00034 	movhi	r2,32768
   4e58c:	10bfffc4 	addi	r2,r2,-1
   4e590:	18802126 	beq	r3,r2,4e618 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4e594:	e0bfff17 	ldw	r2,-4(fp)
   4e598:	10800017 	ldw	r2,0(r2)
   4e59c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4e5a0:	e0bffc17 	ldw	r2,-16(fp)
   4e5a4:	10800090 	cmplti	r2,r2,2
   4e5a8:	1000061e 	bne	r2,zero,4e5c4 <altera_avalon_jtag_uart_ioctl+0x7c>
   4e5ac:	e0fffc17 	ldw	r3,-16(fp)
   4e5b0:	00a00034 	movhi	r2,32768
   4e5b4:	10bfffc4 	addi	r2,r2,-1
   4e5b8:	18800226 	beq	r3,r2,4e5c4 <altera_avalon_jtag_uart_ioctl+0x7c>
   4e5bc:	e0bffc17 	ldw	r2,-16(fp)
   4e5c0:	00000206 	br	4e5cc <altera_avalon_jtag_uart_ioctl+0x84>
   4e5c4:	00a00034 	movhi	r2,32768
   4e5c8:	10bfff84 	addi	r2,r2,-2
   4e5cc:	e0fffd17 	ldw	r3,-12(fp)
   4e5d0:	18800115 	stw	r2,4(r3)
      rc = 0;
   4e5d4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e5d8:	00000f06 	br	4e618 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4e5dc:	e0bffd17 	ldw	r2,-12(fp)
   4e5e0:	10c00117 	ldw	r3,4(r2)
   4e5e4:	00a00034 	movhi	r2,32768
   4e5e8:	10bfffc4 	addi	r2,r2,-1
   4e5ec:	18800c26 	beq	r3,r2,4e620 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4e5f0:	e0bffd17 	ldw	r2,-12(fp)
   4e5f4:	10c00917 	ldw	r3,36(r2)
   4e5f8:	e0bffd17 	ldw	r2,-12(fp)
   4e5fc:	10800117 	ldw	r2,4(r2)
   4e600:	1885803a 	cmpltu	r2,r3,r2
   4e604:	10c03fcc 	andi	r3,r2,255
   4e608:	e0bfff17 	ldw	r2,-4(fp)
   4e60c:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4e610:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e614:	00000206 	br	4e620 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4e618:	0001883a 	nop
   4e61c:	00000106 	br	4e624 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4e620:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4e624:	e0bffb17 	ldw	r2,-20(fp)
}
   4e628:	e037883a 	mov	sp,fp
   4e62c:	df000017 	ldw	fp,0(sp)
   4e630:	dec00104 	addi	sp,sp,4
   4e634:	f800283a 	ret

0004e638 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4e638:	defff304 	addi	sp,sp,-52
   4e63c:	dfc00c15 	stw	ra,48(sp)
   4e640:	df000b15 	stw	fp,44(sp)
   4e644:	df000b04 	addi	fp,sp,44
   4e648:	e13ffc15 	stw	r4,-16(fp)
   4e64c:	e17ffd15 	stw	r5,-12(fp)
   4e650:	e1bffe15 	stw	r6,-8(fp)
   4e654:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4e658:	e0bffd17 	ldw	r2,-12(fp)
   4e65c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e660:	00004706 	br	4e780 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4e664:	e0bffc17 	ldw	r2,-16(fp)
   4e668:	10800a17 	ldw	r2,40(r2)
   4e66c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4e670:	e0bffc17 	ldw	r2,-16(fp)
   4e674:	10800b17 	ldw	r2,44(r2)
   4e678:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4e67c:	e0fff717 	ldw	r3,-36(fp)
   4e680:	e0bff817 	ldw	r2,-32(fp)
   4e684:	18800536 	bltu	r3,r2,4e69c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4e688:	e0fff717 	ldw	r3,-36(fp)
   4e68c:	e0bff817 	ldw	r2,-32(fp)
   4e690:	1885c83a 	sub	r2,r3,r2
   4e694:	e0bff615 	stw	r2,-40(fp)
   4e698:	00000406 	br	4e6ac <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4e69c:	00c20004 	movi	r3,2048
   4e6a0:	e0bff817 	ldw	r2,-32(fp)
   4e6a4:	1885c83a 	sub	r2,r3,r2
   4e6a8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e6ac:	e0bff617 	ldw	r2,-40(fp)
   4e6b0:	10001e26 	beq	r2,zero,4e72c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4e6b4:	e0fffe17 	ldw	r3,-8(fp)
   4e6b8:	e0bff617 	ldw	r2,-40(fp)
   4e6bc:	1880022e 	bgeu	r3,r2,4e6c8 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4e6c0:	e0bffe17 	ldw	r2,-8(fp)
   4e6c4:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4e6c8:	e0bffc17 	ldw	r2,-16(fp)
   4e6cc:	10c00e04 	addi	r3,r2,56
   4e6d0:	e0bff817 	ldw	r2,-32(fp)
   4e6d4:	1885883a 	add	r2,r3,r2
   4e6d8:	e1bff617 	ldw	r6,-40(fp)
   4e6dc:	100b883a 	mov	r5,r2
   4e6e0:	e13ff517 	ldw	r4,-44(fp)
   4e6e4:	0045fac0 	call	45fac <memcpy>
      ptr   += n;
   4e6e8:	e0fff517 	ldw	r3,-44(fp)
   4e6ec:	e0bff617 	ldw	r2,-40(fp)
   4e6f0:	1885883a 	add	r2,r3,r2
   4e6f4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4e6f8:	e0fffe17 	ldw	r3,-8(fp)
   4e6fc:	e0bff617 	ldw	r2,-40(fp)
   4e700:	1885c83a 	sub	r2,r3,r2
   4e704:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e708:	e0fff817 	ldw	r3,-32(fp)
   4e70c:	e0bff617 	ldw	r2,-40(fp)
   4e710:	1885883a 	add	r2,r3,r2
   4e714:	10c1ffcc 	andi	r3,r2,2047
   4e718:	e0bffc17 	ldw	r2,-16(fp)
   4e71c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4e720:	e0bffe17 	ldw	r2,-8(fp)
   4e724:	00bfcf16 	blt	zero,r2,4e664 <__alt_data_end+0xfffdc664>
   4e728:	00000106 	br	4e730 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4e72c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4e730:	e0fff517 	ldw	r3,-44(fp)
   4e734:	e0bffd17 	ldw	r2,-12(fp)
   4e738:	1880141e 	bne	r3,r2,4e78c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4e73c:	e0bfff17 	ldw	r2,-4(fp)
   4e740:	1090000c 	andi	r2,r2,16384
   4e744:	1000131e 	bne	r2,zero,4e794 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4e748:	0001883a 	nop
   4e74c:	e0bffc17 	ldw	r2,-16(fp)
   4e750:	10c00a17 	ldw	r3,40(r2)
   4e754:	e0bff717 	ldw	r2,-36(fp)
   4e758:	1880051e 	bne	r3,r2,4e770 <altera_avalon_jtag_uart_read+0x138>
   4e75c:	e0bffc17 	ldw	r2,-16(fp)
   4e760:	10c00917 	ldw	r3,36(r2)
   4e764:	e0bffc17 	ldw	r2,-16(fp)
   4e768:	10800117 	ldw	r2,4(r2)
   4e76c:	18bff736 	bltu	r3,r2,4e74c <__alt_data_end+0xfffdc74c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4e770:	e0bffc17 	ldw	r2,-16(fp)
   4e774:	10c00a17 	ldw	r3,40(r2)
   4e778:	e0bff717 	ldw	r2,-36(fp)
   4e77c:	18800726 	beq	r3,r2,4e79c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e780:	e0bffe17 	ldw	r2,-8(fp)
   4e784:	00bfb716 	blt	zero,r2,4e664 <__alt_data_end+0xfffdc664>
   4e788:	00000506 	br	4e7a0 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4e78c:	0001883a 	nop
   4e790:	00000306 	br	4e7a0 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4e794:	0001883a 	nop
   4e798:	00000106 	br	4e7a0 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4e79c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4e7a0:	e0fff517 	ldw	r3,-44(fp)
   4e7a4:	e0bffd17 	ldw	r2,-12(fp)
   4e7a8:	18801826 	beq	r3,r2,4e80c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e7ac:	0005303a 	rdctl	r2,status
   4e7b0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e7b4:	e0fffb17 	ldw	r3,-20(fp)
   4e7b8:	00bfff84 	movi	r2,-2
   4e7bc:	1884703a 	and	r2,r3,r2
   4e7c0:	1001703a 	wrctl	status,r2
  
  return context;
   4e7c4:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4e7c8:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e7cc:	e0bffc17 	ldw	r2,-16(fp)
   4e7d0:	10800817 	ldw	r2,32(r2)
   4e7d4:	10c00054 	ori	r3,r2,1
   4e7d8:	e0bffc17 	ldw	r2,-16(fp)
   4e7dc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e7e0:	e0bffc17 	ldw	r2,-16(fp)
   4e7e4:	10800017 	ldw	r2,0(r2)
   4e7e8:	10800104 	addi	r2,r2,4
   4e7ec:	1007883a 	mov	r3,r2
   4e7f0:	e0bffc17 	ldw	r2,-16(fp)
   4e7f4:	10800817 	ldw	r2,32(r2)
   4e7f8:	18800035 	stwio	r2,0(r3)
   4e7fc:	e0bffa17 	ldw	r2,-24(fp)
   4e800:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e804:	e0bff917 	ldw	r2,-28(fp)
   4e808:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4e80c:	e0fff517 	ldw	r3,-44(fp)
   4e810:	e0bffd17 	ldw	r2,-12(fp)
   4e814:	18800426 	beq	r3,r2,4e828 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4e818:	e0fff517 	ldw	r3,-44(fp)
   4e81c:	e0bffd17 	ldw	r2,-12(fp)
   4e820:	1885c83a 	sub	r2,r3,r2
   4e824:	00000606 	br	4e840 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4e828:	e0bfff17 	ldw	r2,-4(fp)
   4e82c:	1090000c 	andi	r2,r2,16384
   4e830:	10000226 	beq	r2,zero,4e83c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4e834:	00bffd44 	movi	r2,-11
   4e838:	00000106 	br	4e840 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4e83c:	00bffec4 	movi	r2,-5
}
   4e840:	e037883a 	mov	sp,fp
   4e844:	dfc00117 	ldw	ra,4(sp)
   4e848:	df000017 	ldw	fp,0(sp)
   4e84c:	dec00204 	addi	sp,sp,8
   4e850:	f800283a 	ret

0004e854 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4e854:	defff304 	addi	sp,sp,-52
   4e858:	dfc00c15 	stw	ra,48(sp)
   4e85c:	df000b15 	stw	fp,44(sp)
   4e860:	df000b04 	addi	fp,sp,44
   4e864:	e13ffc15 	stw	r4,-16(fp)
   4e868:	e17ffd15 	stw	r5,-12(fp)
   4e86c:	e1bffe15 	stw	r6,-8(fp)
   4e870:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4e874:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4e878:	e0bffd17 	ldw	r2,-12(fp)
   4e87c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e880:	00003706 	br	4e960 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4e884:	e0bffc17 	ldw	r2,-16(fp)
   4e888:	10800c17 	ldw	r2,48(r2)
   4e88c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4e890:	e0bffc17 	ldw	r2,-16(fp)
   4e894:	10800d17 	ldw	r2,52(r2)
   4e898:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4e89c:	e0fff917 	ldw	r3,-28(fp)
   4e8a0:	e0bff517 	ldw	r2,-44(fp)
   4e8a4:	1880062e 	bgeu	r3,r2,4e8c0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4e8a8:	e0fff517 	ldw	r3,-44(fp)
   4e8ac:	e0bff917 	ldw	r2,-28(fp)
   4e8b0:	1885c83a 	sub	r2,r3,r2
   4e8b4:	10bfffc4 	addi	r2,r2,-1
   4e8b8:	e0bff615 	stw	r2,-40(fp)
   4e8bc:	00000b06 	br	4e8ec <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4e8c0:	e0bff517 	ldw	r2,-44(fp)
   4e8c4:	10000526 	beq	r2,zero,4e8dc <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4e8c8:	00c20004 	movi	r3,2048
   4e8cc:	e0bff917 	ldw	r2,-28(fp)
   4e8d0:	1885c83a 	sub	r2,r3,r2
   4e8d4:	e0bff615 	stw	r2,-40(fp)
   4e8d8:	00000406 	br	4e8ec <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4e8dc:	00c1ffc4 	movi	r3,2047
   4e8e0:	e0bff917 	ldw	r2,-28(fp)
   4e8e4:	1885c83a 	sub	r2,r3,r2
   4e8e8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e8ec:	e0bff617 	ldw	r2,-40(fp)
   4e8f0:	10001e26 	beq	r2,zero,4e96c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4e8f4:	e0fffe17 	ldw	r3,-8(fp)
   4e8f8:	e0bff617 	ldw	r2,-40(fp)
   4e8fc:	1880022e 	bgeu	r3,r2,4e908 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4e900:	e0bffe17 	ldw	r2,-8(fp)
   4e904:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4e908:	e0bffc17 	ldw	r2,-16(fp)
   4e90c:	10c20e04 	addi	r3,r2,2104
   4e910:	e0bff917 	ldw	r2,-28(fp)
   4e914:	1885883a 	add	r2,r3,r2
   4e918:	e1bff617 	ldw	r6,-40(fp)
   4e91c:	e17ffd17 	ldw	r5,-12(fp)
   4e920:	1009883a 	mov	r4,r2
   4e924:	0045fac0 	call	45fac <memcpy>
      ptr   += n;
   4e928:	e0fffd17 	ldw	r3,-12(fp)
   4e92c:	e0bff617 	ldw	r2,-40(fp)
   4e930:	1885883a 	add	r2,r3,r2
   4e934:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4e938:	e0fffe17 	ldw	r3,-8(fp)
   4e93c:	e0bff617 	ldw	r2,-40(fp)
   4e940:	1885c83a 	sub	r2,r3,r2
   4e944:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e948:	e0fff917 	ldw	r3,-28(fp)
   4e94c:	e0bff617 	ldw	r2,-40(fp)
   4e950:	1885883a 	add	r2,r3,r2
   4e954:	10c1ffcc 	andi	r3,r2,2047
   4e958:	e0bffc17 	ldw	r2,-16(fp)
   4e95c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e960:	e0bffe17 	ldw	r2,-8(fp)
   4e964:	00bfc716 	blt	zero,r2,4e884 <__alt_data_end+0xfffdc884>
   4e968:	00000106 	br	4e970 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4e96c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e970:	0005303a 	rdctl	r2,status
   4e974:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e978:	e0fffb17 	ldw	r3,-20(fp)
   4e97c:	00bfff84 	movi	r2,-2
   4e980:	1884703a 	and	r2,r3,r2
   4e984:	1001703a 	wrctl	status,r2
  
  return context;
   4e988:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4e98c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e990:	e0bffc17 	ldw	r2,-16(fp)
   4e994:	10800817 	ldw	r2,32(r2)
   4e998:	10c00094 	ori	r3,r2,2
   4e99c:	e0bffc17 	ldw	r2,-16(fp)
   4e9a0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e9a4:	e0bffc17 	ldw	r2,-16(fp)
   4e9a8:	10800017 	ldw	r2,0(r2)
   4e9ac:	10800104 	addi	r2,r2,4
   4e9b0:	1007883a 	mov	r3,r2
   4e9b4:	e0bffc17 	ldw	r2,-16(fp)
   4e9b8:	10800817 	ldw	r2,32(r2)
   4e9bc:	18800035 	stwio	r2,0(r3)
   4e9c0:	e0bffa17 	ldw	r2,-24(fp)
   4e9c4:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e9c8:	e0bff817 	ldw	r2,-32(fp)
   4e9cc:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4e9d0:	e0bffe17 	ldw	r2,-8(fp)
   4e9d4:	0080100e 	bge	zero,r2,4ea18 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4e9d8:	e0bfff17 	ldw	r2,-4(fp)
   4e9dc:	1090000c 	andi	r2,r2,16384
   4e9e0:	1000101e 	bne	r2,zero,4ea24 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4e9e4:	0001883a 	nop
   4e9e8:	e0bffc17 	ldw	r2,-16(fp)
   4e9ec:	10c00d17 	ldw	r3,52(r2)
   4e9f0:	e0bff517 	ldw	r2,-44(fp)
   4e9f4:	1880051e 	bne	r3,r2,4ea0c <altera_avalon_jtag_uart_write+0x1b8>
   4e9f8:	e0bffc17 	ldw	r2,-16(fp)
   4e9fc:	10c00917 	ldw	r3,36(r2)
   4ea00:	e0bffc17 	ldw	r2,-16(fp)
   4ea04:	10800117 	ldw	r2,4(r2)
   4ea08:	18bff736 	bltu	r3,r2,4e9e8 <__alt_data_end+0xfffdc9e8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4ea0c:	e0bffc17 	ldw	r2,-16(fp)
   4ea10:	10800917 	ldw	r2,36(r2)
   4ea14:	1000051e 	bne	r2,zero,4ea2c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4ea18:	e0bffe17 	ldw	r2,-8(fp)
   4ea1c:	00bfd016 	blt	zero,r2,4e960 <__alt_data_end+0xfffdc960>
   4ea20:	00000306 	br	4ea30 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4ea24:	0001883a 	nop
   4ea28:	00000106 	br	4ea30 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4ea2c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4ea30:	e0fffd17 	ldw	r3,-12(fp)
   4ea34:	e0bff717 	ldw	r2,-36(fp)
   4ea38:	18800426 	beq	r3,r2,4ea4c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4ea3c:	e0fffd17 	ldw	r3,-12(fp)
   4ea40:	e0bff717 	ldw	r2,-36(fp)
   4ea44:	1885c83a 	sub	r2,r3,r2
   4ea48:	00000606 	br	4ea64 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4ea4c:	e0bfff17 	ldw	r2,-4(fp)
   4ea50:	1090000c 	andi	r2,r2,16384
   4ea54:	10000226 	beq	r2,zero,4ea60 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4ea58:	00bffd44 	movi	r2,-11
   4ea5c:	00000106 	br	4ea64 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4ea60:	00bffec4 	movi	r2,-5
}
   4ea64:	e037883a 	mov	sp,fp
   4ea68:	dfc00117 	ldw	ra,4(sp)
   4ea6c:	df000017 	ldw	fp,0(sp)
   4ea70:	dec00204 	addi	sp,sp,8
   4ea74:	f800283a 	ret

0004ea78 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4ea78:	defff504 	addi	sp,sp,-44
   4ea7c:	df000a15 	stw	fp,40(sp)
   4ea80:	df000a04 	addi	fp,sp,40
   4ea84:	e13ffc15 	stw	r4,-16(fp)
   4ea88:	e17ffd15 	stw	r5,-12(fp)
   4ea8c:	e1bffe15 	stw	r6,-8(fp)
   4ea90:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4ea94:	e03ff615 	stw	zero,-40(fp)
   4ea98:	d0a6d917 	ldw	r2,-25756(gp)
  
  if (alt_ticks_per_second ())
   4ea9c:	10003c26 	beq	r2,zero,4eb90 <alt_alarm_start+0x118>
  {
    if (alarm)
   4eaa0:	e0bffc17 	ldw	r2,-16(fp)
   4eaa4:	10003826 	beq	r2,zero,4eb88 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4eaa8:	e0bffc17 	ldw	r2,-16(fp)
   4eaac:	e0fffe17 	ldw	r3,-8(fp)
   4eab0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4eab4:	e0bffc17 	ldw	r2,-16(fp)
   4eab8:	e0ffff17 	ldw	r3,-4(fp)
   4eabc:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4eac0:	0005303a 	rdctl	r2,status
   4eac4:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4eac8:	e0fff917 	ldw	r3,-28(fp)
   4eacc:	00bfff84 	movi	r2,-2
   4ead0:	1884703a 	and	r2,r3,r2
   4ead4:	1001703a 	wrctl	status,r2
  
  return context;
   4ead8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4eadc:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4eae0:	d0a6da17 	ldw	r2,-25752(gp)
      
      current_nticks = alt_nticks();
   4eae4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4eae8:	e0fffd17 	ldw	r3,-12(fp)
   4eaec:	e0bff617 	ldw	r2,-40(fp)
   4eaf0:	1885883a 	add	r2,r3,r2
   4eaf4:	10c00044 	addi	r3,r2,1
   4eaf8:	e0bffc17 	ldw	r2,-16(fp)
   4eafc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4eb00:	e0bffc17 	ldw	r2,-16(fp)
   4eb04:	10c00217 	ldw	r3,8(r2)
   4eb08:	e0bff617 	ldw	r2,-40(fp)
   4eb0c:	1880042e 	bgeu	r3,r2,4eb20 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4eb10:	e0bffc17 	ldw	r2,-16(fp)
   4eb14:	00c00044 	movi	r3,1
   4eb18:	10c00405 	stb	r3,16(r2)
   4eb1c:	00000206 	br	4eb28 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4eb20:	e0bffc17 	ldw	r2,-16(fp)
   4eb24:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4eb28:	e0bffc17 	ldw	r2,-16(fp)
   4eb2c:	d0e00e04 	addi	r3,gp,-32712
   4eb30:	e0fffa15 	stw	r3,-24(fp)
   4eb34:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4eb38:	e0bffb17 	ldw	r2,-20(fp)
   4eb3c:	e0fffa17 	ldw	r3,-24(fp)
   4eb40:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4eb44:	e0bffa17 	ldw	r2,-24(fp)
   4eb48:	10c00017 	ldw	r3,0(r2)
   4eb4c:	e0bffb17 	ldw	r2,-20(fp)
   4eb50:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4eb54:	e0bffa17 	ldw	r2,-24(fp)
   4eb58:	10800017 	ldw	r2,0(r2)
   4eb5c:	e0fffb17 	ldw	r3,-20(fp)
   4eb60:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4eb64:	e0bffa17 	ldw	r2,-24(fp)
   4eb68:	e0fffb17 	ldw	r3,-20(fp)
   4eb6c:	10c00015 	stw	r3,0(r2)
   4eb70:	e0bff817 	ldw	r2,-32(fp)
   4eb74:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4eb78:	e0bff717 	ldw	r2,-36(fp)
   4eb7c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4eb80:	0005883a 	mov	r2,zero
   4eb84:	00000306 	br	4eb94 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4eb88:	00bffa84 	movi	r2,-22
   4eb8c:	00000106 	br	4eb94 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4eb90:	00bfde84 	movi	r2,-134
  }
}
   4eb94:	e037883a 	mov	sp,fp
   4eb98:	df000017 	ldw	fp,0(sp)
   4eb9c:	dec00104 	addi	sp,sp,4
   4eba0:	f800283a 	ret

0004eba4 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   4eba4:	defffa04 	addi	sp,sp,-24
   4eba8:	dfc00515 	stw	ra,20(sp)
   4ebac:	df000415 	stw	fp,16(sp)
   4ebb0:	df000404 	addi	fp,sp,16
   4ebb4:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
   4ebb8:	00800244 	movi	r2,9
   4ebbc:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   4ebc0:	014003f4 	movhi	r5,15
   4ebc4:	29509004 	addi	r5,r5,16960
   4ebc8:	e13ffd17 	ldw	r4,-12(fp)
   4ebcc:	004aa2c0 	call	4aa2c <__mulsi3>
   4ebd0:	100b883a 	mov	r5,r2
   4ebd4:	0100bef4 	movhi	r4,763
   4ebd8:	213c2004 	addi	r4,r4,-3968
   4ebdc:	004a9700 	call	4a970 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   4ebe0:	100b883a 	mov	r5,r2
   4ebe4:	01200034 	movhi	r4,32768
   4ebe8:	213fffc4 	addi	r4,r4,-1
   4ebec:	004a9700 	call	4a970 <__udivsi3>
   4ebf0:	100b883a 	mov	r5,r2
   4ebf4:	e13fff17 	ldw	r4,-4(fp)
   4ebf8:	004a9700 	call	4a970 <__udivsi3>
   4ebfc:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   4ec00:	e0bffe17 	ldw	r2,-8(fp)
   4ec04:	10002a26 	beq	r2,zero,4ecb0 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   4ec08:	e03ffc15 	stw	zero,-16(fp)
   4ec0c:	00001706 	br	4ec6c <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   4ec10:	00a00034 	movhi	r2,32768
   4ec14:	10bfffc4 	addi	r2,r2,-1
   4ec18:	10bfffc4 	addi	r2,r2,-1
   4ec1c:	103ffe1e 	bne	r2,zero,4ec18 <__alt_data_end+0xfffdcc18>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   4ec20:	014003f4 	movhi	r5,15
   4ec24:	29509004 	addi	r5,r5,16960
   4ec28:	e13ffd17 	ldw	r4,-12(fp)
   4ec2c:	004aa2c0 	call	4aa2c <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   4ec30:	100b883a 	mov	r5,r2
   4ec34:	0100bef4 	movhi	r4,763
   4ec38:	213c2004 	addi	r4,r4,-3968
   4ec3c:	004a9700 	call	4a970 <__udivsi3>
   4ec40:	100b883a 	mov	r5,r2
   4ec44:	01200034 	movhi	r4,32768
   4ec48:	213fffc4 	addi	r4,r4,-1
   4ec4c:	004a9700 	call	4a970 <__udivsi3>
   4ec50:	1007883a 	mov	r3,r2
   4ec54:	e0bfff17 	ldw	r2,-4(fp)
   4ec58:	10c5c83a 	sub	r2,r2,r3
   4ec5c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   4ec60:	e0bffc17 	ldw	r2,-16(fp)
   4ec64:	10800044 	addi	r2,r2,1
   4ec68:	e0bffc15 	stw	r2,-16(fp)
   4ec6c:	e0fffc17 	ldw	r3,-16(fp)
   4ec70:	e0bffe17 	ldw	r2,-8(fp)
   4ec74:	18bfe616 	blt	r3,r2,4ec10 <__alt_data_end+0xfffdcc10>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4ec78:	014003f4 	movhi	r5,15
   4ec7c:	29509004 	addi	r5,r5,16960
   4ec80:	e13ffd17 	ldw	r4,-12(fp)
   4ec84:	004aa2c0 	call	4aa2c <__mulsi3>
   4ec88:	100b883a 	mov	r5,r2
   4ec8c:	0100bef4 	movhi	r4,763
   4ec90:	213c2004 	addi	r4,r4,-3968
   4ec94:	004a9700 	call	4a970 <__udivsi3>
   4ec98:	e17fff17 	ldw	r5,-4(fp)
   4ec9c:	1009883a 	mov	r4,r2
   4eca0:	004aa2c0 	call	4aa2c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4eca4:	10bfffc4 	addi	r2,r2,-1
   4eca8:	103ffe1e 	bne	r2,zero,4eca4 <__alt_data_end+0xfffdcca4>
   4ecac:	00000d06 	br	4ece4 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4ecb0:	014003f4 	movhi	r5,15
   4ecb4:	29509004 	addi	r5,r5,16960
   4ecb8:	e13ffd17 	ldw	r4,-12(fp)
   4ecbc:	004aa2c0 	call	4aa2c <__mulsi3>
   4ecc0:	100b883a 	mov	r5,r2
   4ecc4:	0100bef4 	movhi	r4,763
   4ecc8:	213c2004 	addi	r4,r4,-3968
   4eccc:	004a9700 	call	4a970 <__udivsi3>
   4ecd0:	e17fff17 	ldw	r5,-4(fp)
   4ecd4:	1009883a 	mov	r4,r2
   4ecd8:	004aa2c0 	call	4aa2c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4ecdc:	10bfffc4 	addi	r2,r2,-1
   4ece0:	00bffe16 	blt	zero,r2,4ecdc <__alt_data_end+0xfffdccdc>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   4ece4:	0005883a 	mov	r2,zero
}
   4ece8:	e037883a 	mov	sp,fp
   4ecec:	dfc00117 	ldw	ra,4(sp)
   4ecf0:	df000017 	ldw	fp,0(sp)
   4ecf4:	dec00204 	addi	sp,sp,8
   4ecf8:	f800283a 	ret

0004ecfc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4ecfc:	deffff04 	addi	sp,sp,-4
   4ed00:	df000015 	stw	fp,0(sp)
   4ed04:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4ed08:	0001883a 	nop
   4ed0c:	e037883a 	mov	sp,fp
   4ed10:	df000017 	ldw	fp,0(sp)
   4ed14:	dec00104 	addi	sp,sp,4
   4ed18:	f800283a 	ret

0004ed1c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4ed1c:	defffe04 	addi	sp,sp,-8
   4ed20:	dfc00115 	stw	ra,4(sp)
   4ed24:	df000015 	stw	fp,0(sp)
   4ed28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4ed2c:	d0a00b17 	ldw	r2,-32724(gp)
   4ed30:	10000326 	beq	r2,zero,4ed40 <alt_get_errno+0x24>
   4ed34:	d0a00b17 	ldw	r2,-32724(gp)
   4ed38:	103ee83a 	callr	r2
   4ed3c:	00000106 	br	4ed44 <alt_get_errno+0x28>
   4ed40:	d0a6d304 	addi	r2,gp,-25780
}
   4ed44:	e037883a 	mov	sp,fp
   4ed48:	dfc00117 	ldw	ra,4(sp)
   4ed4c:	df000017 	ldw	fp,0(sp)
   4ed50:	dec00204 	addi	sp,sp,8
   4ed54:	f800283a 	ret

0004ed58 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4ed58:	defffa04 	addi	sp,sp,-24
   4ed5c:	dfc00515 	stw	ra,20(sp)
   4ed60:	df000415 	stw	fp,16(sp)
   4ed64:	df000404 	addi	fp,sp,16
   4ed68:	e13ffe15 	stw	r4,-8(fp)
   4ed6c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4ed70:	e0bffe17 	ldw	r2,-8(fp)
   4ed74:	10000326 	beq	r2,zero,4ed84 <alt_dev_llist_insert+0x2c>
   4ed78:	e0bffe17 	ldw	r2,-8(fp)
   4ed7c:	10800217 	ldw	r2,8(r2)
   4ed80:	1000061e 	bne	r2,zero,4ed9c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4ed84:	004ed1c0 	call	4ed1c <alt_get_errno>
   4ed88:	1007883a 	mov	r3,r2
   4ed8c:	00800584 	movi	r2,22
   4ed90:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4ed94:	00bffa84 	movi	r2,-22
   4ed98:	00001306 	br	4ede8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4ed9c:	e0bffe17 	ldw	r2,-8(fp)
   4eda0:	e0ffff17 	ldw	r3,-4(fp)
   4eda4:	e0fffc15 	stw	r3,-16(fp)
   4eda8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4edac:	e0bffd17 	ldw	r2,-12(fp)
   4edb0:	e0fffc17 	ldw	r3,-16(fp)
   4edb4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4edb8:	e0bffc17 	ldw	r2,-16(fp)
   4edbc:	10c00017 	ldw	r3,0(r2)
   4edc0:	e0bffd17 	ldw	r2,-12(fp)
   4edc4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4edc8:	e0bffc17 	ldw	r2,-16(fp)
   4edcc:	10800017 	ldw	r2,0(r2)
   4edd0:	e0fffd17 	ldw	r3,-12(fp)
   4edd4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4edd8:	e0bffc17 	ldw	r2,-16(fp)
   4eddc:	e0fffd17 	ldw	r3,-12(fp)
   4ede0:	10c00015 	stw	r3,0(r2)

  return 0;  
   4ede4:	0005883a 	mov	r2,zero
}
   4ede8:	e037883a 	mov	sp,fp
   4edec:	dfc00117 	ldw	ra,4(sp)
   4edf0:	df000017 	ldw	fp,0(sp)
   4edf4:	dec00204 	addi	sp,sp,8
   4edf8:	f800283a 	ret

0004edfc <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4edfc:	defffd04 	addi	sp,sp,-12
   4ee00:	dfc00215 	stw	ra,8(sp)
   4ee04:	df000115 	stw	fp,4(sp)
   4ee08:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ee0c:	00800174 	movhi	r2,5
   4ee10:	10bec404 	addi	r2,r2,-1264
   4ee14:	e0bfff15 	stw	r2,-4(fp)
   4ee18:	00000606 	br	4ee34 <_do_ctors+0x38>
        (*ctor) (); 
   4ee1c:	e0bfff17 	ldw	r2,-4(fp)
   4ee20:	10800017 	ldw	r2,0(r2)
   4ee24:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ee28:	e0bfff17 	ldw	r2,-4(fp)
   4ee2c:	10bfff04 	addi	r2,r2,-4
   4ee30:	e0bfff15 	stw	r2,-4(fp)
   4ee34:	e0ffff17 	ldw	r3,-4(fp)
   4ee38:	00800174 	movhi	r2,5
   4ee3c:	10bec504 	addi	r2,r2,-1260
   4ee40:	18bff62e 	bgeu	r3,r2,4ee1c <__alt_data_end+0xfffdce1c>
        (*ctor) (); 
}
   4ee44:	0001883a 	nop
   4ee48:	e037883a 	mov	sp,fp
   4ee4c:	dfc00117 	ldw	ra,4(sp)
   4ee50:	df000017 	ldw	fp,0(sp)
   4ee54:	dec00204 	addi	sp,sp,8
   4ee58:	f800283a 	ret

0004ee5c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4ee5c:	defffd04 	addi	sp,sp,-12
   4ee60:	dfc00215 	stw	ra,8(sp)
   4ee64:	df000115 	stw	fp,4(sp)
   4ee68:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4ee6c:	00800174 	movhi	r2,5
   4ee70:	10bec404 	addi	r2,r2,-1264
   4ee74:	e0bfff15 	stw	r2,-4(fp)
   4ee78:	00000606 	br	4ee94 <_do_dtors+0x38>
        (*dtor) (); 
   4ee7c:	e0bfff17 	ldw	r2,-4(fp)
   4ee80:	10800017 	ldw	r2,0(r2)
   4ee84:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4ee88:	e0bfff17 	ldw	r2,-4(fp)
   4ee8c:	10bfff04 	addi	r2,r2,-4
   4ee90:	e0bfff15 	stw	r2,-4(fp)
   4ee94:	e0ffff17 	ldw	r3,-4(fp)
   4ee98:	00800174 	movhi	r2,5
   4ee9c:	10bec504 	addi	r2,r2,-1260
   4eea0:	18bff62e 	bgeu	r3,r2,4ee7c <__alt_data_end+0xfffdce7c>
        (*dtor) (); 
}
   4eea4:	0001883a 	nop
   4eea8:	e037883a 	mov	sp,fp
   4eeac:	dfc00117 	ldw	ra,4(sp)
   4eeb0:	df000017 	ldw	fp,0(sp)
   4eeb4:	dec00204 	addi	sp,sp,8
   4eeb8:	f800283a 	ret

0004eebc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4eebc:	deffff04 	addi	sp,sp,-4
   4eec0:	df000015 	stw	fp,0(sp)
   4eec4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   4eec8:	0001883a 	nop
   4eecc:	e037883a 	mov	sp,fp
   4eed0:	df000017 	ldw	fp,0(sp)
   4eed4:	dec00104 	addi	sp,sp,4
   4eed8:	f800283a 	ret

0004eedc <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   4eedc:	defffe04 	addi	sp,sp,-8
   4eee0:	df000115 	stw	fp,4(sp)
   4eee4:	df000104 	addi	fp,sp,4
   4eee8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   4eeec:	e0bfff17 	ldw	r2,-4(fp)
   4eef0:	10bffe84 	addi	r2,r2,-6
   4eef4:	10c00428 	cmpgeui	r3,r2,16
   4eef8:	18001a1e 	bne	r3,zero,4ef64 <alt_exception_cause_generated_bad_addr+0x88>
   4eefc:	100690ba 	slli	r3,r2,2
   4ef00:	00800174 	movhi	r2,5
   4ef04:	10bbc504 	addi	r2,r2,-4332
   4ef08:	1885883a 	add	r2,r3,r2
   4ef0c:	10800017 	ldw	r2,0(r2)
   4ef10:	1000683a 	jmp	r2
   4ef14:	0004ef54 	movui	zero,5053
   4ef18:	0004ef54 	movui	zero,5053
   4ef1c:	0004ef64 	muli	zero,zero,5053
   4ef20:	0004ef64 	muli	zero,zero,5053
   4ef24:	0004ef64 	muli	zero,zero,5053
   4ef28:	0004ef54 	movui	zero,5053
   4ef2c:	0004ef5c 	xori	zero,zero,5053
   4ef30:	0004ef64 	muli	zero,zero,5053
   4ef34:	0004ef54 	movui	zero,5053
   4ef38:	0004ef54 	movui	zero,5053
   4ef3c:	0004ef64 	muli	zero,zero,5053
   4ef40:	0004ef54 	movui	zero,5053
   4ef44:	0004ef5c 	xori	zero,zero,5053
   4ef48:	0004ef64 	muli	zero,zero,5053
   4ef4c:	0004ef64 	muli	zero,zero,5053
   4ef50:	0004ef54 	movui	zero,5053
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   4ef54:	00800044 	movi	r2,1
   4ef58:	00000306 	br	4ef68 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   4ef5c:	0005883a 	mov	r2,zero
   4ef60:	00000106 	br	4ef68 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   4ef64:	0005883a 	mov	r2,zero
  }
}
   4ef68:	e037883a 	mov	sp,fp
   4ef6c:	df000017 	ldw	fp,0(sp)
   4ef70:	dec00104 	addi	sp,sp,4
   4ef74:	f800283a 	ret

0004ef78 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4ef78:	defff804 	addi	sp,sp,-32
   4ef7c:	dfc00715 	stw	ra,28(sp)
   4ef80:	df000615 	stw	fp,24(sp)
   4ef84:	dc000515 	stw	r16,20(sp)
   4ef88:	df000604 	addi	fp,sp,24
   4ef8c:	e13ffb15 	stw	r4,-20(fp)
   4ef90:	e17ffc15 	stw	r5,-16(fp)
   4ef94:	e1bffd15 	stw	r6,-12(fp)
   4ef98:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
   4ef9c:	e1bffe17 	ldw	r6,-8(fp)
   4efa0:	e17ffd17 	ldw	r5,-12(fp)
   4efa4:	e13ffc17 	ldw	r4,-16(fp)
   4efa8:	004f2000 	call	4f200 <open>
   4efac:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
   4efb0:	e0bffa17 	ldw	r2,-24(fp)
   4efb4:	10002216 	blt	r2,zero,4f040 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
   4efb8:	04000174 	movhi	r16,5
   4efbc:	8401c304 	addi	r16,r16,1804
   4efc0:	e0bffa17 	ldw	r2,-24(fp)
   4efc4:	01400304 	movi	r5,12
   4efc8:	1009883a 	mov	r4,r2
   4efcc:	004aa2c0 	call	4aa2c <__mulsi3>
   4efd0:	8085883a 	add	r2,r16,r2
   4efd4:	10c00017 	ldw	r3,0(r2)
   4efd8:	e0bffb17 	ldw	r2,-20(fp)
   4efdc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4efe0:	04000174 	movhi	r16,5
   4efe4:	8401c304 	addi	r16,r16,1804
   4efe8:	e0bffa17 	ldw	r2,-24(fp)
   4efec:	01400304 	movi	r5,12
   4eff0:	1009883a 	mov	r4,r2
   4eff4:	004aa2c0 	call	4aa2c <__mulsi3>
   4eff8:	8085883a 	add	r2,r16,r2
   4effc:	10800104 	addi	r2,r2,4
   4f000:	10c00017 	ldw	r3,0(r2)
   4f004:	e0bffb17 	ldw	r2,-20(fp)
   4f008:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4f00c:	04000174 	movhi	r16,5
   4f010:	8401c304 	addi	r16,r16,1804
   4f014:	e0bffa17 	ldw	r2,-24(fp)
   4f018:	01400304 	movi	r5,12
   4f01c:	1009883a 	mov	r4,r2
   4f020:	004aa2c0 	call	4aa2c <__mulsi3>
   4f024:	8085883a 	add	r2,r16,r2
   4f028:	10800204 	addi	r2,r2,8
   4f02c:	10c00017 	ldw	r3,0(r2)
   4f030:	e0bffb17 	ldw	r2,-20(fp)
   4f034:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4f038:	e13ffa17 	ldw	r4,-24(fp)
   4f03c:	004dcbc0 	call	4dcbc <alt_release_fd>
  }
} 
   4f040:	0001883a 	nop
   4f044:	e6ffff04 	addi	sp,fp,-4
   4f048:	dfc00217 	ldw	ra,8(sp)
   4f04c:	df000117 	ldw	fp,4(sp)
   4f050:	dc000017 	ldw	r16,0(sp)
   4f054:	dec00304 	addi	sp,sp,12
   4f058:	f800283a 	ret

0004f05c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4f05c:	defffb04 	addi	sp,sp,-20
   4f060:	dfc00415 	stw	ra,16(sp)
   4f064:	df000315 	stw	fp,12(sp)
   4f068:	df000304 	addi	fp,sp,12
   4f06c:	e13ffd15 	stw	r4,-12(fp)
   4f070:	e17ffe15 	stw	r5,-8(fp)
   4f074:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4f078:	01c07fc4 	movi	r7,511
   4f07c:	01800044 	movi	r6,1
   4f080:	e17ffd17 	ldw	r5,-12(fp)
   4f084:	01000174 	movhi	r4,5
   4f088:	2101c604 	addi	r4,r4,1816
   4f08c:	004ef780 	call	4ef78 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4f090:	01c07fc4 	movi	r7,511
   4f094:	000d883a 	mov	r6,zero
   4f098:	e17ffe17 	ldw	r5,-8(fp)
   4f09c:	01000174 	movhi	r4,5
   4f0a0:	2101c304 	addi	r4,r4,1804
   4f0a4:	004ef780 	call	4ef78 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4f0a8:	01c07fc4 	movi	r7,511
   4f0ac:	01800044 	movi	r6,1
   4f0b0:	e17fff17 	ldw	r5,-4(fp)
   4f0b4:	01000174 	movhi	r4,5
   4f0b8:	2101c904 	addi	r4,r4,1828
   4f0bc:	004ef780 	call	4ef78 <alt_open_fd>
}  
   4f0c0:	0001883a 	nop
   4f0c4:	e037883a 	mov	sp,fp
   4f0c8:	dfc00117 	ldw	ra,4(sp)
   4f0cc:	df000017 	ldw	fp,0(sp)
   4f0d0:	dec00204 	addi	sp,sp,8
   4f0d4:	f800283a 	ret

0004f0d8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4f0d8:	defffe04 	addi	sp,sp,-8
   4f0dc:	dfc00115 	stw	ra,4(sp)
   4f0e0:	df000015 	stw	fp,0(sp)
   4f0e4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4f0e8:	d0a00b17 	ldw	r2,-32724(gp)
   4f0ec:	10000326 	beq	r2,zero,4f0fc <alt_get_errno+0x24>
   4f0f0:	d0a00b17 	ldw	r2,-32724(gp)
   4f0f4:	103ee83a 	callr	r2
   4f0f8:	00000106 	br	4f100 <alt_get_errno+0x28>
   4f0fc:	d0a6d304 	addi	r2,gp,-25780
}
   4f100:	e037883a 	mov	sp,fp
   4f104:	dfc00117 	ldw	ra,4(sp)
   4f108:	df000017 	ldw	fp,0(sp)
   4f10c:	dec00204 	addi	sp,sp,8
   4f110:	f800283a 	ret

0004f114 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4f114:	defffb04 	addi	sp,sp,-20
   4f118:	dfc00415 	stw	ra,16(sp)
   4f11c:	df000315 	stw	fp,12(sp)
   4f120:	dc000215 	stw	r16,8(sp)
   4f124:	df000304 	addi	fp,sp,12
   4f128:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4f12c:	e0bffe17 	ldw	r2,-8(fp)
   4f130:	10800217 	ldw	r2,8(r2)
   4f134:	10d00034 	orhi	r3,r2,16384
   4f138:	e0bffe17 	ldw	r2,-8(fp)
   4f13c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4f140:	e03ffd15 	stw	zero,-12(fp)
   4f144:	00002306 	br	4f1d4 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4f148:	04000174 	movhi	r16,5
   4f14c:	8401c304 	addi	r16,r16,1804
   4f150:	e0bffd17 	ldw	r2,-12(fp)
   4f154:	01400304 	movi	r5,12
   4f158:	1009883a 	mov	r4,r2
   4f15c:	004aa2c0 	call	4aa2c <__mulsi3>
   4f160:	8085883a 	add	r2,r16,r2
   4f164:	10c00017 	ldw	r3,0(r2)
   4f168:	e0bffe17 	ldw	r2,-8(fp)
   4f16c:	10800017 	ldw	r2,0(r2)
   4f170:	1880151e 	bne	r3,r2,4f1c8 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4f174:	04000174 	movhi	r16,5
   4f178:	8401c304 	addi	r16,r16,1804
   4f17c:	e0bffd17 	ldw	r2,-12(fp)
   4f180:	01400304 	movi	r5,12
   4f184:	1009883a 	mov	r4,r2
   4f188:	004aa2c0 	call	4aa2c <__mulsi3>
   4f18c:	8085883a 	add	r2,r16,r2
   4f190:	10800204 	addi	r2,r2,8
   4f194:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4f198:	10000b0e 	bge	r2,zero,4f1c8 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   4f19c:	01400304 	movi	r5,12
   4f1a0:	e13ffd17 	ldw	r4,-12(fp)
   4f1a4:	004aa2c0 	call	4aa2c <__mulsi3>
   4f1a8:	1007883a 	mov	r3,r2
   4f1ac:	00800174 	movhi	r2,5
   4f1b0:	1081c304 	addi	r2,r2,1804
   4f1b4:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4f1b8:	e0bffe17 	ldw	r2,-8(fp)
   4f1bc:	18800226 	beq	r3,r2,4f1c8 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   4f1c0:	00bffcc4 	movi	r2,-13
   4f1c4:	00000806 	br	4f1e8 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4f1c8:	e0bffd17 	ldw	r2,-12(fp)
   4f1cc:	10800044 	addi	r2,r2,1
   4f1d0:	e0bffd15 	stw	r2,-12(fp)
   4f1d4:	d0a00a17 	ldw	r2,-32728(gp)
   4f1d8:	1007883a 	mov	r3,r2
   4f1dc:	e0bffd17 	ldw	r2,-12(fp)
   4f1e0:	18bfd92e 	bgeu	r3,r2,4f148 <__alt_data_end+0xfffdd148>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4f1e4:	0005883a 	mov	r2,zero
}
   4f1e8:	e6ffff04 	addi	sp,fp,-4
   4f1ec:	dfc00217 	ldw	ra,8(sp)
   4f1f0:	df000117 	ldw	fp,4(sp)
   4f1f4:	dc000017 	ldw	r16,0(sp)
   4f1f8:	dec00304 	addi	sp,sp,12
   4f1fc:	f800283a 	ret

0004f200 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4f200:	defff604 	addi	sp,sp,-40
   4f204:	dfc00915 	stw	ra,36(sp)
   4f208:	df000815 	stw	fp,32(sp)
   4f20c:	df000804 	addi	fp,sp,32
   4f210:	e13ffd15 	stw	r4,-12(fp)
   4f214:	e17ffe15 	stw	r5,-8(fp)
   4f218:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4f21c:	00bfffc4 	movi	r2,-1
   4f220:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   4f224:	00bffb44 	movi	r2,-19
   4f228:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   4f22c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4f230:	d1600804 	addi	r5,gp,-32736
   4f234:	e13ffd17 	ldw	r4,-12(fp)
   4f238:	004f5240 	call	4f524 <alt_find_dev>
   4f23c:	e0bff815 	stw	r2,-32(fp)
   4f240:	e0bff817 	ldw	r2,-32(fp)
   4f244:	1000051e 	bne	r2,zero,4f25c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4f248:	e13ffd17 	ldw	r4,-12(fp)
   4f24c:	004f5b40 	call	4f5b4 <alt_find_file>
   4f250:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   4f254:	00800044 	movi	r2,1
   4f258:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4f25c:	e0bff817 	ldw	r2,-32(fp)
   4f260:	10002b26 	beq	r2,zero,4f310 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4f264:	e13ff817 	ldw	r4,-32(fp)
   4f268:	004f6bc0 	call	4f6bc <alt_get_fd>
   4f26c:	e0bff915 	stw	r2,-28(fp)
   4f270:	e0bff917 	ldw	r2,-28(fp)
   4f274:	1000030e 	bge	r2,zero,4f284 <open+0x84>
    {
      status = index;
   4f278:	e0bff917 	ldw	r2,-28(fp)
   4f27c:	e0bffa15 	stw	r2,-24(fp)
   4f280:	00002506 	br	4f318 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
   4f284:	01400304 	movi	r5,12
   4f288:	e13ff917 	ldw	r4,-28(fp)
   4f28c:	004aa2c0 	call	4aa2c <__mulsi3>
   4f290:	1007883a 	mov	r3,r2
   4f294:	00800174 	movhi	r2,5
   4f298:	1081c304 	addi	r2,r2,1804
   4f29c:	1885883a 	add	r2,r3,r2
   4f2a0:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4f2a4:	e0fffe17 	ldw	r3,-8(fp)
   4f2a8:	00900034 	movhi	r2,16384
   4f2ac:	10bfffc4 	addi	r2,r2,-1
   4f2b0:	1886703a 	and	r3,r3,r2
   4f2b4:	e0bffc17 	ldw	r2,-16(fp)
   4f2b8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4f2bc:	e0bffb17 	ldw	r2,-20(fp)
   4f2c0:	1000051e 	bne	r2,zero,4f2d8 <open+0xd8>
   4f2c4:	e13ffc17 	ldw	r4,-16(fp)
   4f2c8:	004f1140 	call	4f114 <alt_file_locked>
   4f2cc:	e0bffa15 	stw	r2,-24(fp)
   4f2d0:	e0bffa17 	ldw	r2,-24(fp)
   4f2d4:	10001016 	blt	r2,zero,4f318 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4f2d8:	e0bff817 	ldw	r2,-32(fp)
   4f2dc:	10800317 	ldw	r2,12(r2)
   4f2e0:	10000826 	beq	r2,zero,4f304 <open+0x104>
   4f2e4:	e0bff817 	ldw	r2,-32(fp)
   4f2e8:	10800317 	ldw	r2,12(r2)
   4f2ec:	e1ffff17 	ldw	r7,-4(fp)
   4f2f0:	e1bffe17 	ldw	r6,-8(fp)
   4f2f4:	e17ffd17 	ldw	r5,-12(fp)
   4f2f8:	e13ffc17 	ldw	r4,-16(fp)
   4f2fc:	103ee83a 	callr	r2
   4f300:	00000106 	br	4f308 <open+0x108>
   4f304:	0005883a 	mov	r2,zero
   4f308:	e0bffa15 	stw	r2,-24(fp)
   4f30c:	00000206 	br	4f318 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4f310:	00bffb44 	movi	r2,-19
   4f314:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4f318:	e0bffa17 	ldw	r2,-24(fp)
   4f31c:	1000090e 	bge	r2,zero,4f344 <open+0x144>
  {
    alt_release_fd (index);  
   4f320:	e13ff917 	ldw	r4,-28(fp)
   4f324:	004dcbc0 	call	4dcbc <alt_release_fd>
    ALT_ERRNO = -status;
   4f328:	004f0d80 	call	4f0d8 <alt_get_errno>
   4f32c:	1007883a 	mov	r3,r2
   4f330:	e0bffa17 	ldw	r2,-24(fp)
   4f334:	0085c83a 	sub	r2,zero,r2
   4f338:	18800015 	stw	r2,0(r3)
    return -1;
   4f33c:	00bfffc4 	movi	r2,-1
   4f340:	00000106 	br	4f348 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
   4f344:	e0bff917 	ldw	r2,-28(fp)
}
   4f348:	e037883a 	mov	sp,fp
   4f34c:	dfc00117 	ldw	ra,4(sp)
   4f350:	df000017 	ldw	fp,0(sp)
   4f354:	dec00204 	addi	sp,sp,8
   4f358:	f800283a 	ret

0004f35c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   4f35c:	defffa04 	addi	sp,sp,-24
   4f360:	df000515 	stw	fp,20(sp)
   4f364:	df000504 	addi	fp,sp,20
   4f368:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f36c:	0005303a 	rdctl	r2,status
   4f370:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f374:	e0fffc17 	ldw	r3,-16(fp)
   4f378:	00bfff84 	movi	r2,-2
   4f37c:	1884703a 	and	r2,r3,r2
   4f380:	1001703a 	wrctl	status,r2
  
  return context;
   4f384:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   4f388:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   4f38c:	e0bfff17 	ldw	r2,-4(fp)
   4f390:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   4f394:	e0bffd17 	ldw	r2,-12(fp)
   4f398:	10800017 	ldw	r2,0(r2)
   4f39c:	e0fffd17 	ldw	r3,-12(fp)
   4f3a0:	18c00117 	ldw	r3,4(r3)
   4f3a4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   4f3a8:	e0bffd17 	ldw	r2,-12(fp)
   4f3ac:	10800117 	ldw	r2,4(r2)
   4f3b0:	e0fffd17 	ldw	r3,-12(fp)
   4f3b4:	18c00017 	ldw	r3,0(r3)
   4f3b8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   4f3bc:	e0bffd17 	ldw	r2,-12(fp)
   4f3c0:	e0fffd17 	ldw	r3,-12(fp)
   4f3c4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   4f3c8:	e0bffd17 	ldw	r2,-12(fp)
   4f3cc:	e0fffd17 	ldw	r3,-12(fp)
   4f3d0:	10c00015 	stw	r3,0(r2)
   4f3d4:	e0bffb17 	ldw	r2,-20(fp)
   4f3d8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f3dc:	e0bffe17 	ldw	r2,-8(fp)
   4f3e0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   4f3e4:	0001883a 	nop
   4f3e8:	e037883a 	mov	sp,fp
   4f3ec:	df000017 	ldw	fp,0(sp)
   4f3f0:	dec00104 	addi	sp,sp,4
   4f3f4:	f800283a 	ret

0004f3f8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   4f3f8:	defffb04 	addi	sp,sp,-20
   4f3fc:	dfc00415 	stw	ra,16(sp)
   4f400:	df000315 	stw	fp,12(sp)
   4f404:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   4f408:	d0a00e17 	ldw	r2,-32712(gp)
   4f40c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   4f410:	d0a6da17 	ldw	r2,-25752(gp)
   4f414:	10800044 	addi	r2,r2,1
   4f418:	d0a6da15 	stw	r2,-25752(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f41c:	00002e06 	br	4f4d8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   4f420:	e0bffd17 	ldw	r2,-12(fp)
   4f424:	10800017 	ldw	r2,0(r2)
   4f428:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   4f42c:	e0bffd17 	ldw	r2,-12(fp)
   4f430:	10800403 	ldbu	r2,16(r2)
   4f434:	10803fcc 	andi	r2,r2,255
   4f438:	10000426 	beq	r2,zero,4f44c <alt_tick+0x54>
   4f43c:	d0a6da17 	ldw	r2,-25752(gp)
   4f440:	1000021e 	bne	r2,zero,4f44c <alt_tick+0x54>
    {
      alarm->rollover = 0;
   4f444:	e0bffd17 	ldw	r2,-12(fp)
   4f448:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   4f44c:	e0bffd17 	ldw	r2,-12(fp)
   4f450:	10800217 	ldw	r2,8(r2)
   4f454:	d0e6da17 	ldw	r3,-25752(gp)
   4f458:	18801d36 	bltu	r3,r2,4f4d0 <alt_tick+0xd8>
   4f45c:	e0bffd17 	ldw	r2,-12(fp)
   4f460:	10800403 	ldbu	r2,16(r2)
   4f464:	10803fcc 	andi	r2,r2,255
   4f468:	1000191e 	bne	r2,zero,4f4d0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   4f46c:	e0bffd17 	ldw	r2,-12(fp)
   4f470:	10800317 	ldw	r2,12(r2)
   4f474:	e0fffd17 	ldw	r3,-12(fp)
   4f478:	18c00517 	ldw	r3,20(r3)
   4f47c:	1809883a 	mov	r4,r3
   4f480:	103ee83a 	callr	r2
   4f484:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   4f488:	e0bfff17 	ldw	r2,-4(fp)
   4f48c:	1000031e 	bne	r2,zero,4f49c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   4f490:	e13ffd17 	ldw	r4,-12(fp)
   4f494:	004f35c0 	call	4f35c <alt_alarm_stop>
   4f498:	00000d06 	br	4f4d0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   4f49c:	e0bffd17 	ldw	r2,-12(fp)
   4f4a0:	10c00217 	ldw	r3,8(r2)
   4f4a4:	e0bfff17 	ldw	r2,-4(fp)
   4f4a8:	1887883a 	add	r3,r3,r2
   4f4ac:	e0bffd17 	ldw	r2,-12(fp)
   4f4b0:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   4f4b4:	e0bffd17 	ldw	r2,-12(fp)
   4f4b8:	10c00217 	ldw	r3,8(r2)
   4f4bc:	d0a6da17 	ldw	r2,-25752(gp)
   4f4c0:	1880032e 	bgeu	r3,r2,4f4d0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   4f4c4:	e0bffd17 	ldw	r2,-12(fp)
   4f4c8:	00c00044 	movi	r3,1
   4f4cc:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   4f4d0:	e0bffe17 	ldw	r2,-8(fp)
   4f4d4:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f4d8:	e0fffd17 	ldw	r3,-12(fp)
   4f4dc:	d0a00e04 	addi	r2,gp,-32712
   4f4e0:	18bfcf1e 	bne	r3,r2,4f420 <__alt_data_end+0xfffdd420>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   4f4e4:	0001883a 	nop
}
   4f4e8:	0001883a 	nop
   4f4ec:	e037883a 	mov	sp,fp
   4f4f0:	dfc00117 	ldw	ra,4(sp)
   4f4f4:	df000017 	ldw	fp,0(sp)
   4f4f8:	dec00204 	addi	sp,sp,8
   4f4fc:	f800283a 	ret

0004f500 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   4f500:	deffff04 	addi	sp,sp,-4
   4f504:	df000015 	stw	fp,0(sp)
   4f508:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   4f50c:	000170fa 	wrctl	ienable,zero
}
   4f510:	0001883a 	nop
   4f514:	e037883a 	mov	sp,fp
   4f518:	df000017 	ldw	fp,0(sp)
   4f51c:	dec00104 	addi	sp,sp,4
   4f520:	f800283a 	ret

0004f524 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4f524:	defffa04 	addi	sp,sp,-24
   4f528:	dfc00515 	stw	ra,20(sp)
   4f52c:	df000415 	stw	fp,16(sp)
   4f530:	df000404 	addi	fp,sp,16
   4f534:	e13ffe15 	stw	r4,-8(fp)
   4f538:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4f53c:	e0bfff17 	ldw	r2,-4(fp)
   4f540:	10800017 	ldw	r2,0(r2)
   4f544:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4f548:	e13ffe17 	ldw	r4,-8(fp)
   4f54c:	00404f80 	call	404f8 <strlen>
   4f550:	10800044 	addi	r2,r2,1
   4f554:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f558:	00000d06 	br	4f590 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4f55c:	e0bffc17 	ldw	r2,-16(fp)
   4f560:	10800217 	ldw	r2,8(r2)
   4f564:	e0fffd17 	ldw	r3,-12(fp)
   4f568:	180d883a 	mov	r6,r3
   4f56c:	e17ffe17 	ldw	r5,-8(fp)
   4f570:	1009883a 	mov	r4,r2
   4f574:	004f7cc0 	call	4f7cc <memcmp>
   4f578:	1000021e 	bne	r2,zero,4f584 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4f57c:	e0bffc17 	ldw	r2,-16(fp)
   4f580:	00000706 	br	4f5a0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4f584:	e0bffc17 	ldw	r2,-16(fp)
   4f588:	10800017 	ldw	r2,0(r2)
   4f58c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f590:	e0fffc17 	ldw	r3,-16(fp)
   4f594:	e0bfff17 	ldw	r2,-4(fp)
   4f598:	18bff01e 	bne	r3,r2,4f55c <__alt_data_end+0xfffdd55c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   4f59c:	0005883a 	mov	r2,zero
}
   4f5a0:	e037883a 	mov	sp,fp
   4f5a4:	dfc00117 	ldw	ra,4(sp)
   4f5a8:	df000017 	ldw	fp,0(sp)
   4f5ac:	dec00204 	addi	sp,sp,8
   4f5b0:	f800283a 	ret

0004f5b4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4f5b4:	defffb04 	addi	sp,sp,-20
   4f5b8:	dfc00415 	stw	ra,16(sp)
   4f5bc:	df000315 	stw	fp,12(sp)
   4f5c0:	df000304 	addi	fp,sp,12
   4f5c4:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4f5c8:	d0a00617 	ldw	r2,-32744(gp)
   4f5cc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f5d0:	00003106 	br	4f698 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   4f5d4:	e0bffd17 	ldw	r2,-12(fp)
   4f5d8:	10800217 	ldw	r2,8(r2)
   4f5dc:	1009883a 	mov	r4,r2
   4f5e0:	00404f80 	call	404f8 <strlen>
   4f5e4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4f5e8:	e0bffd17 	ldw	r2,-12(fp)
   4f5ec:	10c00217 	ldw	r3,8(r2)
   4f5f0:	e0bffe17 	ldw	r2,-8(fp)
   4f5f4:	10bfffc4 	addi	r2,r2,-1
   4f5f8:	1885883a 	add	r2,r3,r2
   4f5fc:	10800003 	ldbu	r2,0(r2)
   4f600:	10803fcc 	andi	r2,r2,255
   4f604:	1080201c 	xori	r2,r2,128
   4f608:	10bfe004 	addi	r2,r2,-128
   4f60c:	10800bd8 	cmpnei	r2,r2,47
   4f610:	1000031e 	bne	r2,zero,4f620 <alt_find_file+0x6c>
    {
      len -= 1;
   4f614:	e0bffe17 	ldw	r2,-8(fp)
   4f618:	10bfffc4 	addi	r2,r2,-1
   4f61c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f620:	e0bffe17 	ldw	r2,-8(fp)
   4f624:	e0ffff17 	ldw	r3,-4(fp)
   4f628:	1885883a 	add	r2,r3,r2
   4f62c:	10800003 	ldbu	r2,0(r2)
   4f630:	10803fcc 	andi	r2,r2,255
   4f634:	1080201c 	xori	r2,r2,128
   4f638:	10bfe004 	addi	r2,r2,-128
   4f63c:	10800be0 	cmpeqi	r2,r2,47
   4f640:	1000081e 	bne	r2,zero,4f664 <alt_find_file+0xb0>
   4f644:	e0bffe17 	ldw	r2,-8(fp)
   4f648:	e0ffff17 	ldw	r3,-4(fp)
   4f64c:	1885883a 	add	r2,r3,r2
   4f650:	10800003 	ldbu	r2,0(r2)
   4f654:	10803fcc 	andi	r2,r2,255
   4f658:	1080201c 	xori	r2,r2,128
   4f65c:	10bfe004 	addi	r2,r2,-128
   4f660:	10000a1e 	bne	r2,zero,4f68c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   4f664:	e0bffd17 	ldw	r2,-12(fp)
   4f668:	10800217 	ldw	r2,8(r2)
   4f66c:	e0fffe17 	ldw	r3,-8(fp)
   4f670:	180d883a 	mov	r6,r3
   4f674:	e17fff17 	ldw	r5,-4(fp)
   4f678:	1009883a 	mov	r4,r2
   4f67c:	004f7cc0 	call	4f7cc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f680:	1000021e 	bne	r2,zero,4f68c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   4f684:	e0bffd17 	ldw	r2,-12(fp)
   4f688:	00000706 	br	4f6a8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   4f68c:	e0bffd17 	ldw	r2,-12(fp)
   4f690:	10800017 	ldw	r2,0(r2)
   4f694:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f698:	e0fffd17 	ldw	r3,-12(fp)
   4f69c:	d0a00604 	addi	r2,gp,-32744
   4f6a0:	18bfcc1e 	bne	r3,r2,4f5d4 <__alt_data_end+0xfffdd5d4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   4f6a4:	0005883a 	mov	r2,zero
}
   4f6a8:	e037883a 	mov	sp,fp
   4f6ac:	dfc00117 	ldw	ra,4(sp)
   4f6b0:	df000017 	ldw	fp,0(sp)
   4f6b4:	dec00204 	addi	sp,sp,8
   4f6b8:	f800283a 	ret

0004f6bc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4f6bc:	defffa04 	addi	sp,sp,-24
   4f6c0:	dfc00515 	stw	ra,20(sp)
   4f6c4:	df000415 	stw	fp,16(sp)
   4f6c8:	dc000315 	stw	r16,12(sp)
   4f6cc:	df000404 	addi	fp,sp,16
   4f6d0:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
   4f6d4:	00bffa04 	movi	r2,-24
   4f6d8:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f6dc:	e03ffc15 	stw	zero,-16(fp)
   4f6e0:	00001d06 	br	4f758 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
   4f6e4:	04000174 	movhi	r16,5
   4f6e8:	8401c304 	addi	r16,r16,1804
   4f6ec:	e0bffc17 	ldw	r2,-16(fp)
   4f6f0:	01400304 	movi	r5,12
   4f6f4:	1009883a 	mov	r4,r2
   4f6f8:	004aa2c0 	call	4aa2c <__mulsi3>
   4f6fc:	8085883a 	add	r2,r16,r2
   4f700:	10800017 	ldw	r2,0(r2)
   4f704:	1000111e 	bne	r2,zero,4f74c <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
   4f708:	04000174 	movhi	r16,5
   4f70c:	8401c304 	addi	r16,r16,1804
   4f710:	e0bffc17 	ldw	r2,-16(fp)
   4f714:	01400304 	movi	r5,12
   4f718:	1009883a 	mov	r4,r2
   4f71c:	004aa2c0 	call	4aa2c <__mulsi3>
   4f720:	8085883a 	add	r2,r16,r2
   4f724:	e0fffe17 	ldw	r3,-8(fp)
   4f728:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   4f72c:	d0e00a17 	ldw	r3,-32728(gp)
   4f730:	e0bffc17 	ldw	r2,-16(fp)
   4f734:	1880020e 	bge	r3,r2,4f740 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
   4f738:	e0bffc17 	ldw	r2,-16(fp)
   4f73c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   4f740:	e0bffc17 	ldw	r2,-16(fp)
   4f744:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
   4f748:	00000606 	br	4f764 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f74c:	e0bffc17 	ldw	r2,-16(fp)
   4f750:	10800044 	addi	r2,r2,1
   4f754:	e0bffc15 	stw	r2,-16(fp)
   4f758:	e0bffc17 	ldw	r2,-16(fp)
   4f75c:	10800810 	cmplti	r2,r2,32
   4f760:	103fe01e 	bne	r2,zero,4f6e4 <__alt_data_end+0xfffdd6e4>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4f764:	e0bffd17 	ldw	r2,-12(fp)
}
   4f768:	e6ffff04 	addi	sp,fp,-4
   4f76c:	dfc00217 	ldw	ra,8(sp)
   4f770:	df000117 	ldw	fp,4(sp)
   4f774:	dc000017 	ldw	r16,0(sp)
   4f778:	dec00304 	addi	sp,sp,12
   4f77c:	f800283a 	ret

0004f780 <atexit>:
   4f780:	200b883a 	mov	r5,r4
   4f784:	000f883a 	mov	r7,zero
   4f788:	000d883a 	mov	r6,zero
   4f78c:	0009883a 	mov	r4,zero
   4f790:	004f8481 	jmpi	4f848 <__register_exitproc>

0004f794 <exit>:
   4f794:	defffe04 	addi	sp,sp,-8
   4f798:	000b883a 	mov	r5,zero
   4f79c:	dc000015 	stw	r16,0(sp)
   4f7a0:	dfc00115 	stw	ra,4(sp)
   4f7a4:	2021883a 	mov	r16,r4
   4f7a8:	004f9600 	call	4f960 <__call_exitprocs>
   4f7ac:	00800174 	movhi	r2,5
   4f7b0:	10863b04 	addi	r2,r2,6380
   4f7b4:	11000017 	ldw	r4,0(r2)
   4f7b8:	20800f17 	ldw	r2,60(r4)
   4f7bc:	10000126 	beq	r2,zero,4f7c4 <exit+0x30>
   4f7c0:	103ee83a 	callr	r2
   4f7c4:	8009883a 	mov	r4,r16
   4f7c8:	004fae00 	call	4fae0 <_exit>

0004f7cc <memcmp>:
   4f7cc:	01c000c4 	movi	r7,3
   4f7d0:	3980192e 	bgeu	r7,r6,4f838 <memcmp+0x6c>
   4f7d4:	2144b03a 	or	r2,r4,r5
   4f7d8:	11c4703a 	and	r2,r2,r7
   4f7dc:	10000f26 	beq	r2,zero,4f81c <memcmp+0x50>
   4f7e0:	20800003 	ldbu	r2,0(r4)
   4f7e4:	28c00003 	ldbu	r3,0(r5)
   4f7e8:	10c0151e 	bne	r2,r3,4f840 <memcmp+0x74>
   4f7ec:	31bfff84 	addi	r6,r6,-2
   4f7f0:	01ffffc4 	movi	r7,-1
   4f7f4:	00000406 	br	4f808 <memcmp+0x3c>
   4f7f8:	20800003 	ldbu	r2,0(r4)
   4f7fc:	28c00003 	ldbu	r3,0(r5)
   4f800:	31bfffc4 	addi	r6,r6,-1
   4f804:	10c00e1e 	bne	r2,r3,4f840 <memcmp+0x74>
   4f808:	21000044 	addi	r4,r4,1
   4f80c:	29400044 	addi	r5,r5,1
   4f810:	31fff91e 	bne	r6,r7,4f7f8 <__alt_data_end+0xfffdd7f8>
   4f814:	0005883a 	mov	r2,zero
   4f818:	f800283a 	ret
   4f81c:	20c00017 	ldw	r3,0(r4)
   4f820:	28800017 	ldw	r2,0(r5)
   4f824:	18bfee1e 	bne	r3,r2,4f7e0 <__alt_data_end+0xfffdd7e0>
   4f828:	31bfff04 	addi	r6,r6,-4
   4f82c:	21000104 	addi	r4,r4,4
   4f830:	29400104 	addi	r5,r5,4
   4f834:	39bff936 	bltu	r7,r6,4f81c <__alt_data_end+0xfffdd81c>
   4f838:	303fe91e 	bne	r6,zero,4f7e0 <__alt_data_end+0xfffdd7e0>
   4f83c:	003ff506 	br	4f814 <__alt_data_end+0xfffdd814>
   4f840:	10c5c83a 	sub	r2,r2,r3
   4f844:	f800283a 	ret

0004f848 <__register_exitproc>:
   4f848:	defffa04 	addi	sp,sp,-24
   4f84c:	dc000315 	stw	r16,12(sp)
   4f850:	04000174 	movhi	r16,5
   4f854:	84063b04 	addi	r16,r16,6380
   4f858:	80c00017 	ldw	r3,0(r16)
   4f85c:	dc400415 	stw	r17,16(sp)
   4f860:	dfc00515 	stw	ra,20(sp)
   4f864:	18805217 	ldw	r2,328(r3)
   4f868:	2023883a 	mov	r17,r4
   4f86c:	10003726 	beq	r2,zero,4f94c <__register_exitproc+0x104>
   4f870:	10c00117 	ldw	r3,4(r2)
   4f874:	010007c4 	movi	r4,31
   4f878:	20c00e16 	blt	r4,r3,4f8b4 <__register_exitproc+0x6c>
   4f87c:	1a000044 	addi	r8,r3,1
   4f880:	8800221e 	bne	r17,zero,4f90c <__register_exitproc+0xc4>
   4f884:	18c00084 	addi	r3,r3,2
   4f888:	18c7883a 	add	r3,r3,r3
   4f88c:	18c7883a 	add	r3,r3,r3
   4f890:	12000115 	stw	r8,4(r2)
   4f894:	10c7883a 	add	r3,r2,r3
   4f898:	19400015 	stw	r5,0(r3)
   4f89c:	0005883a 	mov	r2,zero
   4f8a0:	dfc00517 	ldw	ra,20(sp)
   4f8a4:	dc400417 	ldw	r17,16(sp)
   4f8a8:	dc000317 	ldw	r16,12(sp)
   4f8ac:	dec00604 	addi	sp,sp,24
   4f8b0:	f800283a 	ret
   4f8b4:	00800034 	movhi	r2,0
   4f8b8:	10800004 	addi	r2,r2,0
   4f8bc:	10002626 	beq	r2,zero,4f958 <__register_exitproc+0x110>
   4f8c0:	01006404 	movi	r4,400
   4f8c4:	d9400015 	stw	r5,0(sp)
   4f8c8:	d9800115 	stw	r6,4(sp)
   4f8cc:	d9c00215 	stw	r7,8(sp)
   4f8d0:	00000000 	call	0 <__alt_mem_RAM-0x40000>
   4f8d4:	d9400017 	ldw	r5,0(sp)
   4f8d8:	d9800117 	ldw	r6,4(sp)
   4f8dc:	d9c00217 	ldw	r7,8(sp)
   4f8e0:	10001d26 	beq	r2,zero,4f958 <__register_exitproc+0x110>
   4f8e4:	81000017 	ldw	r4,0(r16)
   4f8e8:	10000115 	stw	zero,4(r2)
   4f8ec:	02000044 	movi	r8,1
   4f8f0:	22405217 	ldw	r9,328(r4)
   4f8f4:	0007883a 	mov	r3,zero
   4f8f8:	12400015 	stw	r9,0(r2)
   4f8fc:	20805215 	stw	r2,328(r4)
   4f900:	10006215 	stw	zero,392(r2)
   4f904:	10006315 	stw	zero,396(r2)
   4f908:	883fde26 	beq	r17,zero,4f884 <__alt_data_end+0xfffdd884>
   4f90c:	18c9883a 	add	r4,r3,r3
   4f910:	2109883a 	add	r4,r4,r4
   4f914:	1109883a 	add	r4,r2,r4
   4f918:	21802215 	stw	r6,136(r4)
   4f91c:	01800044 	movi	r6,1
   4f920:	12406217 	ldw	r9,392(r2)
   4f924:	30cc983a 	sll	r6,r6,r3
   4f928:	4992b03a 	or	r9,r9,r6
   4f92c:	12406215 	stw	r9,392(r2)
   4f930:	21c04215 	stw	r7,264(r4)
   4f934:	01000084 	movi	r4,2
   4f938:	893fd21e 	bne	r17,r4,4f884 <__alt_data_end+0xfffdd884>
   4f93c:	11006317 	ldw	r4,396(r2)
   4f940:	218cb03a 	or	r6,r4,r6
   4f944:	11806315 	stw	r6,396(r2)
   4f948:	003fce06 	br	4f884 <__alt_data_end+0xfffdd884>
   4f94c:	18805304 	addi	r2,r3,332
   4f950:	18805215 	stw	r2,328(r3)
   4f954:	003fc606 	br	4f870 <__alt_data_end+0xfffdd870>
   4f958:	00bfffc4 	movi	r2,-1
   4f95c:	003fd006 	br	4f8a0 <__alt_data_end+0xfffdd8a0>

0004f960 <__call_exitprocs>:
   4f960:	defff504 	addi	sp,sp,-44
   4f964:	df000915 	stw	fp,36(sp)
   4f968:	dd400615 	stw	r21,24(sp)
   4f96c:	dc800315 	stw	r18,12(sp)
   4f970:	dfc00a15 	stw	ra,40(sp)
   4f974:	ddc00815 	stw	r23,32(sp)
   4f978:	dd800715 	stw	r22,28(sp)
   4f97c:	dd000515 	stw	r20,20(sp)
   4f980:	dcc00415 	stw	r19,16(sp)
   4f984:	dc400215 	stw	r17,8(sp)
   4f988:	dc000115 	stw	r16,4(sp)
   4f98c:	d9000015 	stw	r4,0(sp)
   4f990:	2839883a 	mov	fp,r5
   4f994:	04800044 	movi	r18,1
   4f998:	057fffc4 	movi	r21,-1
   4f99c:	00800174 	movhi	r2,5
   4f9a0:	10863b04 	addi	r2,r2,6380
   4f9a4:	12000017 	ldw	r8,0(r2)
   4f9a8:	45005217 	ldw	r20,328(r8)
   4f9ac:	44c05204 	addi	r19,r8,328
   4f9b0:	a0001c26 	beq	r20,zero,4fa24 <__call_exitprocs+0xc4>
   4f9b4:	a0800117 	ldw	r2,4(r20)
   4f9b8:	15ffffc4 	addi	r23,r2,-1
   4f9bc:	b8000d16 	blt	r23,zero,4f9f4 <__call_exitprocs+0x94>
   4f9c0:	14000044 	addi	r16,r2,1
   4f9c4:	8421883a 	add	r16,r16,r16
   4f9c8:	8421883a 	add	r16,r16,r16
   4f9cc:	84402004 	addi	r17,r16,128
   4f9d0:	a463883a 	add	r17,r20,r17
   4f9d4:	a421883a 	add	r16,r20,r16
   4f9d8:	e0001e26 	beq	fp,zero,4fa54 <__call_exitprocs+0xf4>
   4f9dc:	80804017 	ldw	r2,256(r16)
   4f9e0:	e0801c26 	beq	fp,r2,4fa54 <__call_exitprocs+0xf4>
   4f9e4:	bdffffc4 	addi	r23,r23,-1
   4f9e8:	843fff04 	addi	r16,r16,-4
   4f9ec:	8c7fff04 	addi	r17,r17,-4
   4f9f0:	bd7ff91e 	bne	r23,r21,4f9d8 <__alt_data_end+0xfffdd9d8>
   4f9f4:	00800034 	movhi	r2,0
   4f9f8:	10800004 	addi	r2,r2,0
   4f9fc:	10000926 	beq	r2,zero,4fa24 <__call_exitprocs+0xc4>
   4fa00:	a0800117 	ldw	r2,4(r20)
   4fa04:	1000301e 	bne	r2,zero,4fac8 <__call_exitprocs+0x168>
   4fa08:	a0800017 	ldw	r2,0(r20)
   4fa0c:	10003226 	beq	r2,zero,4fad8 <__call_exitprocs+0x178>
   4fa10:	a009883a 	mov	r4,r20
   4fa14:	98800015 	stw	r2,0(r19)
   4fa18:	00000000 	call	0 <__alt_mem_RAM-0x40000>
   4fa1c:	9d000017 	ldw	r20,0(r19)
   4fa20:	a03fe41e 	bne	r20,zero,4f9b4 <__alt_data_end+0xfffdd9b4>
   4fa24:	dfc00a17 	ldw	ra,40(sp)
   4fa28:	df000917 	ldw	fp,36(sp)
   4fa2c:	ddc00817 	ldw	r23,32(sp)
   4fa30:	dd800717 	ldw	r22,28(sp)
   4fa34:	dd400617 	ldw	r21,24(sp)
   4fa38:	dd000517 	ldw	r20,20(sp)
   4fa3c:	dcc00417 	ldw	r19,16(sp)
   4fa40:	dc800317 	ldw	r18,12(sp)
   4fa44:	dc400217 	ldw	r17,8(sp)
   4fa48:	dc000117 	ldw	r16,4(sp)
   4fa4c:	dec00b04 	addi	sp,sp,44
   4fa50:	f800283a 	ret
   4fa54:	a0800117 	ldw	r2,4(r20)
   4fa58:	80c00017 	ldw	r3,0(r16)
   4fa5c:	10bfffc4 	addi	r2,r2,-1
   4fa60:	15c01426 	beq	r2,r23,4fab4 <__call_exitprocs+0x154>
   4fa64:	80000015 	stw	zero,0(r16)
   4fa68:	183fde26 	beq	r3,zero,4f9e4 <__alt_data_end+0xfffdd9e4>
   4fa6c:	95c8983a 	sll	r4,r18,r23
   4fa70:	a0806217 	ldw	r2,392(r20)
   4fa74:	a5800117 	ldw	r22,4(r20)
   4fa78:	2084703a 	and	r2,r4,r2
   4fa7c:	10000b26 	beq	r2,zero,4faac <__call_exitprocs+0x14c>
   4fa80:	a0806317 	ldw	r2,396(r20)
   4fa84:	2088703a 	and	r4,r4,r2
   4fa88:	20000c1e 	bne	r4,zero,4fabc <__call_exitprocs+0x15c>
   4fa8c:	89400017 	ldw	r5,0(r17)
   4fa90:	d9000017 	ldw	r4,0(sp)
   4fa94:	183ee83a 	callr	r3
   4fa98:	a0800117 	ldw	r2,4(r20)
   4fa9c:	15bfbf1e 	bne	r2,r22,4f99c <__alt_data_end+0xfffdd99c>
   4faa0:	98800017 	ldw	r2,0(r19)
   4faa4:	153fcf26 	beq	r2,r20,4f9e4 <__alt_data_end+0xfffdd9e4>
   4faa8:	003fbc06 	br	4f99c <__alt_data_end+0xfffdd99c>
   4faac:	183ee83a 	callr	r3
   4fab0:	003ff906 	br	4fa98 <__alt_data_end+0xfffdda98>
   4fab4:	a5c00115 	stw	r23,4(r20)
   4fab8:	003feb06 	br	4fa68 <__alt_data_end+0xfffdda68>
   4fabc:	89000017 	ldw	r4,0(r17)
   4fac0:	183ee83a 	callr	r3
   4fac4:	003ff406 	br	4fa98 <__alt_data_end+0xfffdda98>
   4fac8:	a0800017 	ldw	r2,0(r20)
   4facc:	a027883a 	mov	r19,r20
   4fad0:	1029883a 	mov	r20,r2
   4fad4:	003fb606 	br	4f9b0 <__alt_data_end+0xfffdd9b0>
   4fad8:	0005883a 	mov	r2,zero
   4fadc:	003ffb06 	br	4facc <__alt_data_end+0xfffddacc>

0004fae0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4fae0:	defffd04 	addi	sp,sp,-12
   4fae4:	df000215 	stw	fp,8(sp)
   4fae8:	df000204 	addi	fp,sp,8
   4faec:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4faf0:	0001883a 	nop
   4faf4:	e0bfff17 	ldw	r2,-4(fp)
   4faf8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4fafc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4fb00:	10000226 	beq	r2,zero,4fb0c <_exit+0x2c>
    ALT_SIM_FAIL();
   4fb04:	002af070 	cmpltui	zero,zero,43969
   4fb08:	00000106 	br	4fb10 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   4fb0c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4fb10:	003fff06 	br	4fb10 <__alt_data_end+0xfffddb10>
