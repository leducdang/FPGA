/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include "system.h"
#include "altera_avalon_i2c_regs.h"
#include "altera_avalon_i2c.h"
//Address of TMP102 and the Temp Register
const alt_u32 DS3231_ADDR = 0b1101000;
const alt_u8 RegisterAddr = 0x00;
//TMP102 other calls not used in the example
const alt_u8 ConfigRegisterAddr = 0x01;
const alt_u8 TlowRegisterAddr = 0x02;
const alt_u8 ThighRegisterAddr = 0x03;

int main(){

 alt_u8 ReadTempbuf[2];
 alt_u8 TxBuffer[1]= { RegisterAddr };
 alt_u16 TempLSB;
 alt_u16 TempMSB;
 alt_u16 TempFinal;
 float tempC;
 char finaloutput[5];
 ALT_AVALON_I2C_STATUS_CODE status;

 ALT_AVALON_I2C_DEV_t *my_i2c;
 ALT_AVALON_I2C_MASTER_CONFIG_t cfg;

 cfg.addr_mode = 0;

 my_i2c = alt_avalon_i2c_open(I2C_NAME);
 if(my_i2c == NULL){
 printf("Failed to open I2C port\n");
 return 1;
 }
 alt_avalon_i2c_master_target_set(my_i2c, DS3231_ADDR); 		//pointing to the TMP102 address
 alt_avalon_i2c_master_config_speed_set(my_i2c, &cfg,100000 ); //Set the speed
 alt_avalon_i2c_master_config_set(my_i2c, &cfg);				//configure

 status = alt_avalon_i2c_master_tx_rx(my_i2c, TxBuffer, 1, ReadTempbuf, sizeof(ReadTempbuf),ALT_AVALON_I2C_NO_INTERRUPTS);
 if (status!=ALT_AVALON_I2C_SUCCESS){
 printf("Read Failure\n");
 return 1; //FAIL
 }

 TempMSB = ReadTempbuf[0];
 TempMSB = TempMSB << 4;
 TempLSB = ReadTempbuf[1];
 TempLSB = TempLSB >> 4;
 TempFinal = TempMSB + TempLSB;

 tempC = (float)TempFinal *0.0625;

 sprintf(finaloutput, "%.1f", tempC);
 printf("Temp is %s",finaloutput);

 return 0;
 }
