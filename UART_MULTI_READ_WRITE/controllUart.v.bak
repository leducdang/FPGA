module controllUart(clock, tx, rx, reset, led7seg);

input 	clock;
input		rx;
input		reset;
output 	tx;
output [0:6] led7seg;


reg		[7:0] 	HEX1;					// bien gan gia tri rx nhan duoc sang ma led 7 doan
reg		[7:0]		data_tx;
reg					en;
reg					fb;
reg		[7:0]		data_rx;
reg		[4:0]		stt;


always@(posedge clock or negedge reset)
	begin
		if(!reset)	stt<=0;
		else
			case(stt)
				5'd0: begin en<=0; 	stt<=1; end
				5'd1:	if(!fb) 		stt<=2;
				5'd2:	begin en<=1; data_tx = "A";	stt<= 3;	end
				5'd3:	if(fb) 	stt<=4;
				5'd4:
				5'd5:
				5'd6:
				5'd7:
				5'd8:
				5'd9:
				5'd10:
				5'd0:
				
			endcase
			
	
	
	end


always@(clock)
	begin
		case(data_rx)
			8'h30 : HEX1 = 7'b0000001;
			8'h31 : HEX1 = 7'b1001111;
			8'h32 : HEX1 = 7'b0010010;
			8'h33 : HEX1 = 7'b0000110;
			8'h34 : HEX1 = 7'b1001100;
			8'h35 : HEX1 = 7'b0100100;
			8'h36 : HEX1 = 7'b0100000;
			8'h37 : HEX1 = 7'b0001111;
			8'h38 : HEX1 = 7'b0000000;
			8'h39 : HEX1 = 7'b0000100;
		endcase
	end

uartWrite(
				.clock_50mhz(clock),
				.data(data_tx),
				.run(en),
				.feedback(fb),
				.tx_pin(tx)
			);
	
uartRead(	.clock_50mhz,				
				.data(data_rx),
				.rx_pin(rx)
			);	

endmodule